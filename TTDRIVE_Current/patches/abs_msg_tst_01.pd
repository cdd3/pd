#N canvas 116 187 1178 627 10;
#X declare -path ../externals/cdd3_lib_pd;
#X obj 16 75 r TTi;
#N canvas 1113 702 450 300 ledpulse 0;
#X obj 42 31 inlet;
#X obj 42 160 outlet;
#X obj 42 59 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 42 79 t b b;
#X msg 42 128 0;
#X msg 125 128 1;
#X floatatom 80 128 5 0 0 0 - - -;
#X obj 42 103 delay 100;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 4 0 6 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 0 6 0;
#X connect 7 0 4 0;
#X restore 240 823 pd ledpulse;
#X obj 240 876 s TTo;
#X msg 240 849 2 \$1;
#X obj 143 878 s TTo;
#X msg 163 832 3 0;
#X msg 198 832 3 1;
#X msg 116 805 2 0;
#X msg 148 805 2 1;
#X msg 82 783 1 1;
#X text 74 760 test msg to LED outputs;
#X msg 50 783 1 0;
#X obj 8 41 tt_hw_io;
#X obj 42 947 loadbang;
#X floatatom 42 992 5 0 0 0 - - -;
#X obj 42 968 f \$0;
#X obj 148 609 route 0 1 2;
#X obj 852 141 abs_msg_tst_rcv02 345;
#X obj 852 115 abs_msg_tst_rcv01 123;
#X obj 240 801 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 264 799 pulse LED B;
#X text 76 971 current unique patch id#;
#X obj 852 89 abs_msg_tst_rcv01 12;
#X text 58 75 <-all tt inputs come here from: tt_hw_io;
#X obj 88 456 hradio 15 1 0 3 empty empty empty 0 -8 0 10 -262144 -1
-1 2;
#X obj 73 490 int;
#X msg 73 515 \$1;
#X text 138 455 <- select where msg goes;
#X obj 16 456 t a b;
#X obj 16 101 route adc tact digital;
#X obj 16 539 pack f f f;
#X msg 16 562 \$3 \$1 \$2;
#X obj 148 699 s 12-adc-ctl;
#X obj 169 672 s 123-adc-ctl;
#X obj 190 647 s 345-adc-ctl;
#X obj 16 586 s adc-ctl-msg;
#X obj 148 585 r adc-ctl-msg;
#X obj 131 299 hradio 15 1 0 3 empty empty empty 0 -8 0 10 -262144
-1 -1 2;
#X obj 116 328 int;
#X msg 116 353 \$1;
#X text 183 298 <- select where msg goes;
#X obj 59 299 t a b;
#X msg 59 400 \$3 \$1 \$2;
#X obj 59 377 pack f s f;
#X obj 59 424 s tact-ctl-msg;
#X obj 301 450 route 0 1 2;
#X obj 301 426 r tact-ctl-msg;
#X obj 343 488 s 345-tact-ctl;
#X obj 322 513 s 123-tact-ctl;
#X obj 301 540 s 12-tact-ctl;
#X obj 352 290 route 0 1 2;
#X obj 352 266 r digi-ctl-msg;
#X obj 394 328 s 345-digi-in;
#X obj 373 353 s 123-digi-in;
#X obj 352 380 s 12-digi-in;
#X obj 162 129 hradio 15 1 0 3 empty empty empty 0 -8 0 10 -262144
-1 -1 2;
#X obj 147 160 int;
#X msg 147 185 \$1;
#X text 212 128 <- select where msg goes;
#X obj 102 209 pack f f;
#X msg 102 232 \$2 \$1;
#X obj 102 129 t f b;
#X obj 102 256 s digi-ctl-msg;
#X obj 243 101 hradio 15 1 0 3 empty empty empty 0 -8 0 10 -262144
-1 -1 2;
#X obj 9 19 declare -path ../externals/cdd3_lib_pd;
#X obj 693 301 route 0 1 2;
#X obj 572 495 r TTo-12;
#X obj 681 495 r TTo-123;
#X obj 784 495 r TTo-345;
#X obj 572 528 spigot;
#X obj 605 473 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 644 369 0, f 1;
#X obj 693 278 hradio 15 1 0 3 empty empty empty 0 -8 0 10 -262144
-1 -1 1;
#X obj 605 338 t b b b;
#X msg 624 403 0, f 1;
#X obj 681 524 spigot;
#X obj 714 469 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 753 369 0, f 1;
#X obj 714 338 t b b b;
#X msg 733 403 0, f 1;
#X obj 784 525 spigot;
#X obj 817 470 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 856 369 0, f 1;
#X obj 817 338 t b b b;
#X msg 836 403 0, f 1;
#X obj 681 570 s TTo;
#X obj 693 254 loadbang;
#X text 853 60 3 abstractions with init values used for addressing
messages;
#X text 749 276 <- Choose which abstraction to listen to;
#X text 295 99 <-Choose which abstration to talk to;
#X text 625 228 receive digital out from abstraction of your choice
;
#X text 268 19 below creates 3 sub-patches and a message routing system
that allows one to select which sub-patch can send & receive control
messages from the hardware interface;
#N canvas 1123 615 351 111 META 0;
#X text 14 16 Created by David Dodson 2019 \, c.d.dodson3@gmail.com
\, CC-BY-NC-SA;
#X restore 1015 851 pd META;
#X connect 0 0 29 0;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 4 0;
#X connect 8 0 4 0;
#X connect 9 0 4 0;
#X connect 11 0 4 0;
#X connect 13 0 15 0;
#X connect 15 0 14 0;
#X connect 16 0 32 0;
#X connect 16 1 33 0;
#X connect 16 2 34 0;
#X connect 19 0 1 0;
#X connect 24 0 25 1;
#X connect 25 0 26 0;
#X connect 26 0 30 2;
#X connect 28 0 30 0;
#X connect 28 1 25 0;
#X connect 29 0 28 0;
#X connect 29 1 41 0;
#X connect 29 2 61 0;
#X connect 30 0 31 0;
#X connect 31 0 35 0;
#X connect 36 0 16 0;
#X connect 37 0 38 1;
#X connect 38 0 39 0;
#X connect 39 0 43 2;
#X connect 41 0 43 0;
#X connect 41 1 38 0;
#X connect 42 0 44 0;
#X connect 43 0 42 0;
#X connect 45 0 49 0;
#X connect 45 1 48 0;
#X connect 45 2 47 0;
#X connect 46 0 45 0;
#X connect 50 0 54 0;
#X connect 50 1 53 0;
#X connect 50 2 52 0;
#X connect 51 0 50 0;
#X connect 55 0 56 1;
#X connect 56 0 57 0;
#X connect 57 0 59 1;
#X connect 59 0 60 0;
#X connect 60 0 62 0;
#X connect 61 0 59 0;
#X connect 61 1 56 0;
#X connect 63 0 55 0;
#X connect 63 0 37 0;
#X connect 63 0 24 0;
#X connect 65 0 73 0;
#X connect 65 1 78 0;
#X connect 65 2 83 0;
#X connect 66 0 69 0;
#X connect 67 0 75 0;
#X connect 68 0 80 0;
#X connect 69 0 85 0;
#X connect 70 0 69 1;
#X connect 71 0 81 0;
#X connect 72 0 65 0;
#X connect 73 0 70 0;
#X connect 73 1 74 0;
#X connect 73 2 71 0;
#X connect 74 0 76 0;
#X connect 75 0 85 0;
#X connect 76 0 75 1;
#X connect 77 0 81 0;
#X connect 78 0 76 0;
#X connect 78 1 79 0;
#X connect 78 2 77 0;
#X connect 79 0 70 0;
#X connect 80 0 85 0;
#X connect 81 0 80 1;
#X connect 82 0 76 0;
#X connect 83 0 81 0;
#X connect 83 1 84 0;
#X connect 83 2 82 0;
#X connect 84 0 70 0;
#X connect 86 0 72 0;
