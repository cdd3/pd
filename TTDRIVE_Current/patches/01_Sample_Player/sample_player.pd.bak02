#N canvas 488 63 1170 734 10;
#X obj 656 217 vsl 25 128 0 1 0 0 \$0-master-vol-s \$0-master-vol-r
Master_Vol -12 -10 0 10 -262144 -1 -1 7620 1;
#X obj 39 301 hsl 200 15 0 1 0 0 \$0-sample-pos-slider-s \$0-sample-pos-slider-r
sample_position -2 -8 0 10 -262144 -1 -1 118 1;
#X obj 41 338 hsl 200 15 0 2 0 0 \$0-playback-speed-s \$0-playback-speed-r
playback_speed -2 -8 0 10 -262144 -1 -1 9950 1;
#X text 252 337 2;
#X msg 38 432 1;
#X obj 39 235 hsl 200 15 0 1 0 0 \$0-start-pos-s \$0-start-pos-r start_pos
-2 -8 0 10 -262144 -1 -1 0 1;
#X obj 39 268 hsl 200 15 0 1 0 0 \$0-end-pos-s \$0-end-pos-r end_pos
-2 -8 0 10 -262144 -1 -1 19900 1;
#X obj 1007 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1007 114 pack \$0;
#X text 39 504 these blocks might be useful later;
#X obj 30 55 bng 15 250 50 0 \$0-play-s \$0-play-r PLAY 17 7 0 10 -262144
-1 -1;
#X obj 625 73 bng 15 250 50 0 \$0-eof-s \$0-eof-r EOF 17 7 0 10 -262144
-1 -1;
#X obj 30 32 bng 15 250 50 0 \$0-clock-in-s \$0-clock-in-r CLOCK_IN
17 7 0 10 -262144 -1 -1;
#N canvas 112 240 836 571 \$0-audio-out 0;
#X obj 81 499 dac~;
#X obj 68 361 *~;
#X obj 125 315 *~;
#X obj 84 111 r \$0-ch1-vol-s;
#X obj 141 228 r \$0-ch2-vol-s;
#X obj 68 441 *~;
#X obj 124 441 *~;
#X obj 139 199 r~ \$0-ch2-in;
#X obj 79 77 r~ \$0-ch1-in;
#X obj 164 347 r \$0-master-vol-s;
#X obj 126 174 r~ \$0-ch2-table-out;
#X obj 67 53 r~ \$0-ch1-table-out;
#X obj 587 236 env~ 128;
#X obj 587 257 - 100;
#X obj 644 281 env~ 128;
#X obj 644 302 - 100;
#X obj 645 350 vu 15 120 empty empty -1 -8 0 10 -228856 -1 1 0;
#X obj 588 350 vu 15 120 empty empty -1 -8 0 10 -228856 -1 1 0;
#X obj 531 350 vu 15 120 empty empty -1 -8 0 10 -228856 -1 1 0;
#X obj 474 350 vu 15 120 empty empty -1 -8 0 10 -228856 -1 1 0;
#X obj 530 170 r~ \$0-ch2-in;
#X obj 473 125 r~ \$0-ch1-in;
#X obj 473 146 env~ 128;
#X obj 473 167 - 100;
#X obj 530 191 env~ 128;
#X obj 530 212 - 100;
#X obj 123 472 s~ \$0-master-out-ch2-db;
#X obj 69 524 s~ \$0-master-out-ch1-db;
#X obj 587 215 r~ \$0-master-out-ch1-db;
#X obj 644 260 r~ \$0-master-out-ch2-db;
#X obj 164 389 line~;
#X msg 164 368 \$1 20;
#X obj 332 75 vsl 15 128 0 1 0 0 \$0-ch1-vol-s \$0-ch1-vol-r ch1 0
-9 0 10 -262144 -1 -1 12700 1;
#X obj 360 75 vsl 15 128 0 1 0 0 \$0-ch2-vol-s \$0-ch2-vol-r ch2 0
-9 0 10 -262144 -1 -1 12700 1;
#X obj 84 154 line~;
#X msg 84 133 \$1 20;
#X obj 141 271 line~;
#X msg 141 250 \$1 20;
#X text 323 32 had planned for independent 2 channel mono operation.
these volume ctl's should stay at 100% for now.;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 35 0;
#X connect 4 0 37 0;
#X connect 5 0 0 0;
#X connect 5 0 27 0;
#X connect 6 0 0 1;
#X connect 6 0 26 0;
#X connect 7 0 2 0;
#X connect 8 0 1 0;
#X connect 9 0 31 0;
#X connect 10 0 2 0;
#X connect 11 0 1 0;
#X connect 12 0 13 0;
#X connect 13 0 17 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 20 0 24 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 19 0;
#X connect 24 0 25 0;
#X connect 25 0 18 0;
#X connect 28 0 12 0;
#X connect 29 0 14 0;
#X connect 30 0 6 1;
#X connect 30 0 5 1;
#X connect 31 0 30 0;
#X connect 34 0 1 1;
#X connect 35 0 34 0;
#X connect 36 0 2 1;
#X connect 37 0 36 0;
#X restore 746 142 pd \$0-audio-out;
#N canvas 21 185 1112 805 \$0-startup-settings 0;
#X obj 38 24 loadbang;
#X msg 38 69 1;
#X obj 38 189 s \$0-playback-speed-r;
#X obj 64 154 s \$0-end-pos-r;
#X obj 68 103 s \$0-ch2-vol-r;
#X obj 68 127 s \$0-ch1-vol-r;
#X msg 84 54 \; pd dsp 1;
#X obj 377 319 r \$0-bank-sel-s;
#X msg 353 384 3;
#X msg 377 340 set \$1;
#X obj 353 292 loadbang;
#X obj 353 419 s \$0-bank-sel-r;
#X obj 372 496 r \$0-sample-sel-s;
#X msg 372 517 set \$1;
#X obj 354 609 s \$0-sample-sel-r;
#X obj 354 469 loadbang;
#X msg 354 573 0;
#X obj 390 361 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 386 538 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 47 384 0;
#X msg 71 340 set \$1;
#X obj 47 292 loadbang;
#X obj 84 361 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 43 573 1;
#X msg 67 517 set \$1;
#X obj 43 469 loadbang;
#X obj 80 538 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 67 496 r \$0-pol-toggle-s;
#X obj 43 609 s \$0-pol-toggle-r;
#X obj 71 319 r \$0-mode-toggle-s;
#X obj 47 419 s \$0-mode-toggle-r;
#X obj 648 306 loadbang;
#X obj 648 348 value \$0-play-on-load;
#X obj 648 369 select 1;
#X obj 648 390 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 648 410 s \$0-play-r;
#X obj 648 327 delay 0;
#X text 42 242 these blocks set messages to recall state and load on
opening patch. not happy because patch name is hard coded for now;
#X text 648 280 if play on load box is checked when open start playback
;
#X text 159 153 this is conveinent if working on patch on computer
rather than hardware;
#X msg 686 502 set \$1;
#X obj 668 454 loadbang;
#X msg 668 558 2;
#X obj 700 523 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 686 477 r \$0-rec-src-sel-s;
#X obj 668 603 s \$0-rec-src-sel-r;
#X msg 84 384 \; pd-sample_player.pd menusave;
#X msg 80 573 \; pd-sample_player.pd menusave;
#X msg 390 384 \; pd-sample_player.pd menusave;
#X msg 386 573 \; pd-sample_player.pd menusave;
#X msg 700 558 \; pd-sample_player.pd menusave;
#X connect 0 0 1 0;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 1 0 5 0;
#X connect 1 0 4 0;
#X connect 1 0 3 0;
#X connect 7 0 9 0;
#X connect 8 0 11 0;
#X connect 9 0 8 0;
#X connect 9 0 17 0;
#X connect 10 0 8 0;
#X connect 12 0 13 0;
#X connect 13 0 16 0;
#X connect 13 0 18 0;
#X connect 15 0 16 0;
#X connect 16 0 14 0;
#X connect 17 0 48 0;
#X connect 18 0 49 0;
#X connect 19 0 30 0;
#X connect 20 0 19 0;
#X connect 20 0 22 0;
#X connect 21 0 19 0;
#X connect 22 0 46 0;
#X connect 23 0 28 0;
#X connect 24 0 23 0;
#X connect 24 0 26 0;
#X connect 25 0 23 0;
#X connect 26 0 47 0;
#X connect 27 0 24 0;
#X connect 29 0 20 0;
#X connect 31 0 36 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 35 0;
#X connect 36 0 32 0;
#X connect 40 0 42 0;
#X connect 40 0 43 0;
#X connect 41 0 42 0;
#X connect 42 0 45 0;
#X connect 43 0 50 0;
#X connect 44 0 40 0;
#X restore 746 32 pd \$0-startup-settings;
#X obj 104 54 tgl 15 0 \$0-loop-toggle-s \$0-loop-toggle-r 1_Shot_(OFF=LOOP)
17 7 0 10 -262144 -1 -1 0 1;
#X obj 625 25 bng 15 250 50 0 \$0-file-open-panel-s \$0-file-open-panel-r
OPEN_FILE 17 7 0 10 -262144 -1 -1;
#X text 1029 90 normalize mytable;
#X floatatom 284 336 9 0 0 1 Current_Playback_Speed #0-playback-speed-s
-;
#X obj 104 32 tgl 15 0 \$0-pol-toggle-s \$0-pol-toggle-r PLAY_ON_LOAD
17 7 0 10 -262144 -1 -1 1 1;
#X floatatom 434 39 5 0 99 2 Bank_Select #0-bank-sel-r #0-bank-sel-s
;
#X floatatom 511 39 5 0 9 2 Sample_Select #0-sample-sel-r #0-sample-sel-s
;
#X obj 625 49 bng 15 250 50 0 \$0-bank-scan-s \$0-bank-scan-r Bank_Scan
17 7 0 10 -262144 -1 -1;
#X symbolatom 434 73 30 0 0 2 Currently_Playing #0-filename-disp-r
#0-filename-disp-s;
#X text 784 349 que next sample;
#X text 17 337 0;
#X text 784 411 realtime / dynamic scrub playback;
#X obj 1008 54 table \$0-ch2-table;
#X obj 1008 32 table \$0-ch1-table;
#X msg 1007 137 \; \$1-ch1-table normalize \; \$1-ch2-table normalize
\;;
#X obj 55 530 loadbang;
#X obj 55 551 f \$1;
#X floatatom 55 572 5 0 0 0 - - -;
#X obj 236 55 tgl 15 0 \$0-input-monitor-ch1-toggle-s \$0-input-monitor-ch1-toggle-r
Monitor_Input_CH1 17 7 0 10 -262144 -1 -1 0 1;
#N canvas 108 276 317 384 \$0-audio-in 0;
#X obj 35 33 adc~;
#X obj 56 245 select 1;
#X msg 56 266 1;
#X msg 101 266 0;
#X obj 78 93 select 1;
#X msg 78 114 1;
#X msg 123 114 0;
#X obj 57 142 *~ 0;
#X obj 35 294 *~ 0;
#X obj 35 322 s~ \$0-ch1-in;
#X obj 56 170 s~ \$0-ch2-in;
#X obj 78 64 r \$0-input-monitor-ch1-toggle-s;
#X obj 56 216 r \$0-input-monitor-ch2-toggle-s;
#X connect 0 0 8 0;
#X connect 0 1 7 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 8 1;
#X connect 3 0 8 1;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 7 1;
#X connect 6 0 7 1;
#X connect 7 0 10 0;
#X connect 8 0 9 0;
#X connect 11 0 4 0;
#X connect 12 0 1 0;
#X restore 746 120 pd \$0-audio-in;
#X obj 236 77 tgl 15 0 \$0-input-monitor-ch2-toggle-s \$0-input-monitor-ch2-toggle-r
Monitor_Input_CH2 17 7 0 10 -262144 -1 -1 0 1;
#X obj 236 101 tgl 15 0 \$0-arm-ch1-toggle-s \$0-arm-ch1-toggle-r ARM_CH1
17 7 0 10 -262144 -1 -1 0 1;
#X obj 235 122 tgl 15 0 \$0-arm-ch2-toggle-s \$0-arm-ch2-toggle-r ARM_CH2
17 7 0 10 -262144 -1 -1 0 1;
#X obj 236 31 tgl 15 0 \$0-stereo-mode-toggle-s \$0-stereo-mode-toggle-r
Stereo_Mode 17 7 0 10 -262144 -1 -1 0 1;
#X text 100 552 if you call this patch from another patch as an abstraction
you can add your own id#;
#X text 784 473 mute button?;
#X obj 55 604 loadbang;
#X floatatom 55 646 5 0 0 0 - - -;
#X obj 55 625 f \$0;
#X obj 287 268 hsl 200 15 0 1 0 0 \$0-play-window-postion-s \$0-play-window-postion-r
Window_Position -2 -8 0 10 -262144 -1 -1 7512 1;
#X obj 886 164 tt_hw_io;
#N canvas 684 390 799 527 \$0-values 0;
#X obj 200 163 r \$0-playback-speed-s;
#X obj 200 184 value \$0-playback-speed;
#X obj 200 61 r \$0-start-pos-s;
#X obj 200 82 value \$0-start-position;
#X obj 200 110 r \$0-end-pos-s;
#X obj 200 132 value \$0-end-position;
#X obj 567 61 r \$0-sample-rate;
#X obj 567 111 r \$0-num-samples;
#X obj 567 132 value \$0-num-samples;
#X obj 567 82 value \$0-sample-rate;
#X obj 393 61 r \$0-bank-sel-s;
#X obj 394 111 r \$0-sample-sel-s;
#X obj 393 82 value \$0-bank-num;
#X obj 394 132 value \$0-sample-num;
#X obj 30 111 r \$0-pol-toggle-s;
#X obj 30 132 value \$0-play-on-load;
#X obj 27 163 r \$0-stereo-mode-toggle-s;
#X obj 27 184 value \$0-stereo-mode;
#X obj 27 460 value \$0-play-window-size;
#X obj 27 436 r \$0-play-window-size;
#X obj 445 437 r \$0-phasor-baseline-freq;
#X obj 445 460 value \$0-phasor-baseline-freq;
#X text 28 391 these values are mainly intended to be read from later
on;
#X obj 393 184 value \$0-no-samples-in-bank;
#X obj 393 163 r \$0-no-samples-in-bank;
#X obj 30 61 r \$0-loop-toggle-s;
#X obj 30 82 value \$0-loop-toggle;
#X obj 231 245 r \$0-arm-ch1-toggle-s;
#X obj 229 293 r \$0-arm-ch2-toggle-s;
#X obj 229 314 v \$0-arm-ch2-toggle;
#X obj 231 266 v \$0-arm-ch1-toggle;
#X obj 10 266 v \$0-input-monitor-ch1-toggle;
#X obj 10 245 r \$0-input-monitor-ch1-toggle-s;
#X obj 9 293 r \$0-input-monitor-ch2-toggle-s;
#X obj 9 314 v \$0-input-monitor-ch2-toggle;
#X obj 402 245 r \$0-play-s;
#X obj 402 293 v \$0-playback-status;
#X obj 490 245 r \$0-stop-s;
#X msg 402 266 1;
#X msg 490 266 0;
#X obj 598 293 r \$0-rec-src-sel-s;
#X obj 598 314 v \$0-rec-src;
#X obj 600 245 r \$0-rec-status;
#X obj 600 266 v \$0-rec-status;
#X obj 582 163 r \$0-clk-qnt-toggle-s;
#X obj 582 184 v \$0-clk-qnt;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 6 0 9 0;
#X connect 7 0 8 0;
#X connect 10 0 12 0;
#X connect 11 0 13 0;
#X connect 14 0 15 0;
#X connect 16 0 17 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 24 0 23 0;
#X connect 25 0 26 0;
#X connect 27 0 30 0;
#X connect 28 0 29 0;
#X connect 32 0 31 0;
#X connect 33 0 34 0;
#X connect 35 0 38 0;
#X connect 37 0 39 0;
#X connect 38 0 36 0;
#X connect 39 0 36 0;
#X connect 40 0 41 0;
#X connect 42 0 43 0;
#X connect 44 0 45 0;
#X restore 746 54 pd \$0-values;
#N canvas 98 148 1283 857 \$0-storage-mgmt 1;
#X text 822 80 directory # to read;
#X msg 846 124 read ./\$1/file_list.txt;
#X floatatom 72 520 5 0 0 0 - - -;
#X text 1019 147 reads in the contents of file_list.txt;
#X obj 88 497 r \$0-sample-sel-s;
#X obj 717 80 r \$0-bank-sel-s;
#X obj 846 145 text define -k \$0-file-list;
#A set;
#X text 197 498 this bang loads sample on bank change;
#X obj 744 241 s \$0-no-samples-in-bank;
#X obj 1005 170 print file_list:;
#X floatatom 744 218 5 0 0 0 - - -;
#X obj 717 172 text size \$0-file-list;
#X obj 717 193 t b f;
#X obj 717 101 t b f;
#X text 80 205 below handles selecting the correct file to send to
the soundfiler;
#X obj 72 653 list trim;
#X obj 72 674 s \$0-sample-file;
#X text 178 676 goes over to pd \$0-load-file;
#X obj 180 625 s \$0-filename-disp-r;
#X obj 72 546 text get \$0-file-list;
#X obj 99 597 hcs/split_path;
#X floatatom 195 570 5 0 0 0 - - -;
#X text 312 625 send the file name to the display;
#X obj 72 571 t s s;
#X obj 342 254 r \$0-no-samples-in-bank;
#X obj 72 236 r \$0-sample-sel-s;
#X obj 146 458 s \$0-err;
#X obj 146 437 symbol;
#X msg 146 416 sample_no_out_of_range;
#X obj 72 404 spigot;
#X obj 72 257 t f f;
#X obj 99 292 expr if(($f1 < 0) || ($f1 > $f2-1) \, 1 \, 0);
#X msg 99 373 1;
#X msg 127 373 0;
#X obj 99 314 select 0 1;
#X obj 717 265 s \$0-sample-sel-r;
#X text 832 267 bang sample # on bank change to get going;
#X obj 127 350 t b b b;
#X msg 166 374 0;
#X obj 166 394 s \$0-sample-sel-r;
#X text 712 47 below reads the file list on bank change;
#N canvas 566 99 670 829 \$0-bank-scanner 0;
#X obj 132 309 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 179 276 requires hcs external library;
#X obj 70 276 hcs/folder_list;
#X msg 31 194 clear;
#X msg 70 249 symbol ./\$1/*.wav;
#X obj 70 223 value \$0-bank-num;
#X text 182 225 directory # to read;
#X text 185 247 construct directory path to read;
#X msg 70 310 add \$1;
#X msg 50 388 write ./\$1/file_list.txt;
#X text 207 387 writes file_list.txt to current directory;
#X obj 31 72 r \$0-bank-scan-s;
#X obj 494 296 hcs/folder_list;
#X obj 494 317 print;
#X obj 58 170 s \$0-bank-sel-r;
#X obj 31 416 textfile;
#X obj 50 364 value \$0-bank-num;
#X text 161 363 directory # to read;
#X obj 50 340 delay 5;
#X obj 31 93 t b b b;
#X obj 31 120 delay 10;
#X obj 31 141 t b b;
#X text 158 170 this bang propmpts reading of file_list.txt when (hopefully)
done writing it;
#X msg 494 275 symbol ./[0-9][0-9];
#X text 35 20 below reads the current bank (directory) & writes a file_list.txt
for later use. should only happen on bank scan bang;
#X connect 2 0 0 0;
#X connect 2 0 8 0;
#X connect 3 0 15 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X connect 8 0 15 0;
#X connect 9 0 15 0;
#X connect 11 0 19 0;
#X connect 12 0 13 0;
#X connect 16 0 9 0;
#X connect 18 0 16 0;
#X connect 19 0 20 0;
#X connect 19 1 18 0;
#X connect 19 2 5 0;
#X connect 20 0 21 0;
#X connect 21 0 3 0;
#X connect 21 1 14 0;
#X connect 23 0 12 0;
#X restore 50 34 pd \$0-bank-scanner;
#N canvas 856 122 622 841 \$0-load-file 0;
#X obj 55 99 openpanel;
#X obj 55 152 pack s \$0;
#X obj 94 280 s \$0-num-samples;
#X obj 112 251 s \$0-sample-rate;
#X obj 55 70 r \$0-file-open-panel-s;
#X text 242 409 reset phasor player to make sure we start the new sample
from beginning in case somethings already playing;
#X text 232 250 sending sample rate of file loaded;
#X text 210 279 sending # of samples in file loaded;
#X text 126 151 pack is here so we get the unique patch id from \$0
;
#X msg 100 410 \; \$1-phasor-cycles 0 \; \$1-phasor-reset-s 0;
#X obj 100 382 pack \$0;
#X obj 112 223 unpack;
#X obj 68 123 r \$0-sample-file;
#X obj 55 334 value \$0-play-on-load;
#X obj 55 358 select 1;
#X msg 55 173 read -resize \$1 \$2-ch1-table \$2-ch2-table;
#X obj 55 460 s \$0-play-r;
#X obj 55 197 soundfiler;
#X obj 55 223 t b b f;
#N canvas 124 416 609 595 \$0-sample_length 0;
#X floatatom 162 238 0 0 0 0 - - -;
#X floatatom 193 104 0 0 0 0 - - -;
#X obj 193 145 t b f;
#X obj 162 210 div;
#X floatatom 66 295 5 0 0 0 - - -;
#X obj 66 269 div 60;
#X floatatom 162 297 0 0 0 0 - - -;
#X obj 162 271 mod 60;
#N canvas 945 458 450 300 \$0-2_digits 0;
#X obj 56 63 moses 10;
#X msg 114 89 set %d;
#X msg 56 89 set 0%d;
#X obj 29 122 makefilename;
#X obj 29 36 t f f;
#X obj 29 9 inlet;
#X obj 29 143 outlet;
#X text 76 12 adds a 0 in front of #'s 0-9;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X restore 66 320 pd \$0-2_digits;
#N canvas 945 458 450 300 \$0-2_digits 0;
#X obj 56 63 moses 10;
#X msg 114 89 set %d;
#X msg 56 89 set 0%d;
#X obj 29 122 makefilename;
#X obj 29 36 t f f;
#X obj 29 9 inlet;
#X obj 29 143 outlet;
#X text 76 12 adds a 0 in front of #'s 0-9;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X restore 162 323 pd \$0-2_digits;
#X obj 162 434 s \$0-sample-length-r;
#X obj 24 179 inlet;
#X obj 24 200 t b b;
#X obj 193 75 r \$0-sample-rate;
#X obj 162 48 r \$0-num-samples;
#X obj 162 182 nbx 9 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 2.29526e+07 256;
#X obj 66 372 makefilename;
#X obj 162 405 makefilename;
#X msg 162 349 set %s:\$1;
#X msg 66 346 set \$1;
#X connect 0 0 5 0;
#X connect 0 0 7 0;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 1 3 1;
#X connect 3 0 0 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 9 0;
#X connect 7 0 6 0;
#X connect 8 0 19 0;
#X connect 9 0 18 0;
#X connect 11 0 12 0;
#X connect 12 0 16 0;
#X connect 13 0 1 0;
#X connect 14 0 15 0;
#X connect 15 0 3 0;
#X connect 16 0 17 0;
#X connect 17 0 10 0;
#X connect 18 0 17 0;
#X connect 19 0 16 0;
#X restore 74 310 pd \$0-sample_length;
#X text 206 312 calc total sample length in mm:ss;
#X text 27 31 below handles loading a file from disk into arrays for
playback;
#X connect 0 0 1 0;
#X connect 1 0 15 0;
#X connect 4 0 0 0;
#X connect 10 0 9 0;
#X connect 11 0 3 0;
#X connect 12 0 1 0;
#X connect 13 0 14 0;
#X connect 14 0 16 0;
#X connect 14 1 10 0;
#X connect 15 0 17 0;
#X connect 17 0 18 0;
#X connect 17 1 11 0;
#X connect 18 0 13 0;
#X connect 18 1 19 0;
#X connect 18 2 2 0;
#X restore 47 98 pd \$0-load-file;
#N canvas 945 458 450 300 \$0-2_digits 0;
#X obj 56 63 moses 10;
#X msg 114 89 set %d;
#X msg 56 89 set 0%d;
#X obj 29 122 makefilename;
#X obj 29 36 t f f;
#X obj 29 9 inlet;
#X obj 29 143 outlet;
#X text 76 12 adds a 0 in front of #'s 0-9;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X restore 772 369 pd \$0-2_digits;
#X connect 1 0 6 0;
#X connect 2 0 19 0;
#X connect 5 0 13 0;
#X connect 6 0 11 1;
#X connect 6 1 9 0;
#X connect 10 0 8 0;
#X connect 11 0 12 0;
#X connect 12 0 35 0;
#X connect 12 1 10 0;
#X connect 13 0 11 0;
#X connect 13 1 1 0;
#X connect 15 0 16 0;
#X connect 19 0 23 0;
#X connect 19 1 21 0;
#X connect 20 1 18 0;
#X connect 23 0 15 0;
#X connect 23 1 20 0;
#X connect 24 0 31 1;
#X connect 25 0 30 0;
#X connect 27 0 26 0;
#X connect 28 0 27 0;
#X connect 29 0 2 0;
#X connect 30 0 29 0;
#X connect 30 1 31 0;
#X connect 31 0 34 0;
#X connect 32 0 29 1;
#X connect 33 0 29 1;
#X connect 34 0 32 0;
#X connect 34 1 37 0;
#X connect 37 0 33 0;
#X connect 37 1 28 0;
#X connect 37 2 38 0;
#X connect 38 0 39 0;
#X restore 746 76 pd \$0-storage-mgmt;
#N canvas 40 146 1121 692 \$0-phasor-player 0;
#X obj 65 342 phasor~;
#X obj 65 446 *~;
#X floatatom 65 214 10 0 0 0 - - -;
#X obj 64 491 +~;
#X obj 65 565 *~;
#X obj 65 242 *;
#X text 143 180 playback speed multiplier;
#X text 102 459 start position offset;
#X obj 210 527 s \$0-sample-pos-slider-r;
#X msg 540 80 0;
#X obj 540 58 r \$0-phasor-reset-s;
#X text 96 565 * num samples finally gets you table position to read
;
#X text 389 526 provides tracking position for slider on main panel
;
#X obj 76 291 r \$0-phasor-cycles;
#X text 405 36 stop button signal;
#X floatatom 140 214 5 0 0 0 - - -;
#X obj 782 238 value \$0-num-samples;
#X obj 948 238 value \$0-sample-rate;
#X obj 404 58 r \$0-stop-s;
#X msg 404 80 0;
#X floatatom 76 266 10 0 0 0 - - -;
#X obj 404 104 s \$0-phasor-cycles;
#X obj 104 317 r \$0-phasor-phase;
#X obj 540 104 s \$0-phasor-phase;
#X text 538 36 reset button;
#X text 178 213 speed factor readout for reference;
#X obj 64 619 tabread4~ \$0-ch1-table;
#X obj 233 619 tabread4~ \$0-ch2-table;
#N canvas 16 289 734 713 \$0-stop-phasor 0;
#X text 187 535 because ~ (audio) use threshold to detect the 1 \,
sends bang;
#X obj 38 639 select 1;
#X text 219 506 when phasor approaches end of cycle \, send 1;
#X text 41 -10 below controls looping vs 1-shot play;
#X obj 65 590 s \$0-eof-r;
#X text 137 591 BANG the EOF bang when we reach the end;
#X text 108 639 check if 1-Shot mode is on/off;
#X obj 184 31 inlet;
#X obj 39 24 inlet~;
#X obj 38 616 value \$0-loop-toggle;
#X obj 38 553 t b b;
#X obj 38 532 threshold~ 1 0 1e-05 0;
#X obj 38 505 expr~ $v1 > ($f2 - 1e-05);
#X obj 38 672 s \$0-stop-r;
#X text 484 91 0 for forward \, 1 for reverse play;
#X text 223 31 end position;
#X text 86 24 phasor input;
#X obj 414 9 inlet;
#X obj 414 91 select 0 1;
#X obj 165 288 *~;
#X msg 441 226 0;
#X msg 469 138 1, f 2;
#X obj 39 288 *~;
#X msg 442 138 0;
#X msg 414 226 1;
#X obj 414 201 t b b;
#X obj 442 114 t b b;
#X obj 468 27 loadbang;
#X msg 468 48 0;
#X text 314 347 because ~ (audio) use threshold to detect the 1 \,
sends bang;
#X obj 165 437 select 1;
#X text 346 318 when phasor approaches end of cycle \, send 1;
#X obj 192 389 s \$0-eof-r;
#X text 264 388 BANG the EOF bang when we reach the end;
#X text 235 436 check if 1-Shot mode is on/off;
#X obj 165 414 value \$0-loop-toggle;
#X obj 165 365 t b b;
#X obj 165 460 s \$0-stop-r;
#X obj 184 52 t f f;
#X obj 165 317 expr~ $v1 < ($f2 + 1e-05);
#X obj 165 344 threshold~ 1 0 1e-05 0;
#X obj 312 69 inlet;
#X obj 312 90 t f f;
#X text 349 68 start position;
#X text 196 287 this side bangs stop at end when in reverse (inverted)
;
#X connect 1 0 13 0;
#X connect 7 0 38 0;
#X connect 8 0 22 0;
#X connect 8 0 19 0;
#X connect 9 0 1 0;
#X connect 10 0 9 0;
#X connect 10 1 4 0;
#X connect 11 0 10 0;
#X connect 12 0 11 0;
#X connect 17 0 18 0;
#X connect 18 0 25 0;
#X connect 18 1 26 0;
#X connect 19 0 39 0;
#X connect 20 0 19 1;
#X connect 21 0 19 1;
#X connect 22 0 12 0;
#X connect 23 0 22 1;
#X connect 24 0 22 1;
#X connect 25 0 24 0;
#X connect 25 1 20 0;
#X connect 26 0 23 0;
#X connect 26 1 21 0;
#X connect 27 0 28 0;
#X connect 28 0 18 0;
#X connect 30 0 37 0;
#X connect 35 0 30 0;
#X connect 36 0 35 0;
#X connect 36 1 32 0;
#X connect 38 0 12 1;
#X connect 39 0 40 0;
#X connect 40 0 36 0;
#X connect 41 0 42 0;
#X connect 42 0 39 1;
#X restore 383 505 pd \$0-stop-phasor;
#X obj 780 326 value \$0-start-position;
#X obj 950 326 value \$0-end-position;
#X obj 782 406 value \$0-playback-speed;
#X floatatom 782 427 10 0 0 0 - - -;
#X floatatom 780 347 10 0 0 0 - - -;
#X floatatom 950 347 10 0 0 0 - - -;
#X floatatom 782 259 10 0 0 0 - - -;
#X floatatom 948 259 10 0 0 0 - - -;
#X obj 753 133 r \$0-play-s;
#X obj 753 167 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 496 504 <- subpatch to control looping or single play mode
;
#N canvas 85 207 1155 679 \$0-playback-window 0;
#X obj 76 95 t b f;
#X floatatom 52 127 8 0 0 0 - - -;
#X obj 88 154 -;
#X obj 76 68 r \$0-start-pos-s;
#X obj 52 47 r \$0-end-pos-s;
#X text 124 154 end pos - start pos;
#X floatatom 88 177 9 0 0 0 - - -;
#X obj 623 160 expr if( $f1 >= $f2 \, 1 \, 0);
#X obj 623 301 s \$0-start-pos-r;
#X obj 623 181 select 1;
#X text 684 241 you get stack overflow if you try to set them equal
;
#X text 679 568 you get stack overflow if you try to set them equal
;
#X obj 620 405 r \$0-end-pos-s;
#X obj 620 546 value \$0-start-position;
#X obj 620 624 s \$0-end-pos-r;
#X obj 623 56 r \$0-start-pos-s;
#X text 150 178 <- think of this as window size expressed as % of original
sample length;
#X text 620 366 block below prevents the end postion from going past
the start;
#X text 622 19 block below prevents the start position from going past
the end postion;
#X obj 623 223 value \$0-end-position;
#X text 222 215 store size on change;
#X obj 61 579 s \$0-start-pos-r;
#X obj 61 318 r \$0-play-window-postion-s;
#X floatatom 145 353 9 0 0 0 - - -;
#X obj 179 579 s \$0-end-pos-r;
#X floatatom 61 524 10 0 0 0 - - -;
#X obj 88 440 expr 1 - $f1;
#X floatatom 115 486 10 0 0 0 - - -;
#X obj 88 398 value \$0-play-window-size;
#X text 172 441 window slack range;
#X obj 61 499 moses;
#X floatatom 179 548 10 0 0 0 - - -;
#X text 59 290 this block handles scrubbing the playback window postion
via the Window_Postion slider;
#X floatatom 623 118 9 0 0 0 - - -;
#X obj 776 91 value \$0-end-position;
#X floatatom 776 112 5 0 0 0 - - -;
#X obj 88 215 s \$0-play-window-size;
#X obj 179 513 expr $f1 + $f2;
#X obj 623 202 t b;
#X obj 623 93 t f b;
#X obj 88 461 t f f;
#X obj 88 419 t f f;
#X obj 61 339 t f b f;
#X obj 623 265 t f f;
#X text 823 135 min window size \, eof bang breaks if smaller;
#X text 682 254 min window size \, eof bang breaks if smaller;
#X text 54 18 read start and end postion modifiers & calculate offset
;
#X obj 773 425 value \$0-start-position;
#X obj 620 498 select 1;
#X obj 620 522 t b;
#X obj 620 426 t f b;
#X obj 620 474 expr if( $f1 <= $f2 \, 1 \, 0);
#X obj 737 301 value \$0-start-position;
#X obj 738 624 value \$0-end-position;
#X obj 620 594 t f f;
#X obj 776 134 - 0.001;
#X obj 623 244 - 0.002;
#X obj 773 449 + 0.001;
#X obj 620 570 + 0.002;
#X connect 0 0 1 0;
#X connect 0 1 2 1;
#X connect 1 0 2 0;
#X connect 2 0 6 0;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 6 0 36 0;
#X connect 7 0 9 0;
#X connect 9 0 38 0;
#X connect 12 0 50 0;
#X connect 13 0 58 0;
#X connect 15 0 39 0;
#X connect 19 0 56 0;
#X connect 22 0 42 0;
#X connect 25 0 21 0;
#X connect 26 0 40 0;
#X connect 28 0 41 0;
#X connect 30 0 25 0;
#X connect 30 0 37 0;
#X connect 31 0 24 0;
#X connect 33 0 7 0;
#X connect 34 0 35 0;
#X connect 35 0 55 0;
#X connect 37 0 31 0;
#X connect 38 0 19 0;
#X connect 39 0 33 0;
#X connect 39 1 34 0;
#X connect 40 0 30 1;
#X connect 40 1 27 0;
#X connect 41 0 26 0;
#X connect 41 1 37 1;
#X connect 42 0 30 0;
#X connect 42 1 28 0;
#X connect 42 2 23 0;
#X connect 43 0 8 0;
#X connect 43 1 52 0;
#X connect 47 0 57 0;
#X connect 48 0 49 0;
#X connect 49 0 13 0;
#X connect 50 0 51 0;
#X connect 50 1 47 0;
#X connect 51 0 48 0;
#X connect 54 0 14 0;
#X connect 54 1 53 0;
#X connect 55 0 7 1;
#X connect 56 0 43 0;
#X connect 57 0 51 1;
#X connect 58 0 54 0;
#X restore 162 82 pd \$0-playback-window;
#X obj 101 157 value \$0-playback-speed;
#X obj 416 431 value \$0-end-position;
#X obj 80 541 value \$0-num-samples;
#X obj 94 477 value \$0-start-position;
#N canvas 45 187 516 288 \$0-phasor-init 0;
#X obj 70 158 expr 1 / $f1;
#X obj 24 172 *;
#X obj 24 54 t b f;
#X obj 56 80 expr $f2 / $f1;
#X text 163 81 (sample rate / # samples);
#X text 35 208 all above sets up phasor baseline frequency;
#X text 153 160 * recriprocal increases rate to account for reduction
in duration due to start / end offset;
#X floatatom 82 103 10 0 0 0 - - -;
#X text 157 104 Hz;
#X obj 24 26 r \$0-num-samples;
#X obj 137 54 r \$0-sample-rate;
#X obj 70 135 r \$0-play-window-size;
#X obj 24 233 s \$0-phasor-baseline-freq;
#X connect 0 0 1 0;
#X connect 1 0 12 0;
#X connect 2 0 1 0;
#X connect 2 1 3 0;
#X connect 3 0 1 1;
#X connect 3 0 7 0;
#X connect 9 0 2 0;
#X connect 10 0 3 1;
#X connect 11 0 0 0;
#X restore 163 47 pd \$0-phasor-init;
#X text 156 264 info: Hz updated for speed ctl;
#X obj 80 423 value \$0-play-window-size;
#X obj 65 130 value \$0-phasor-baseline-freq;
#X obj 64 646 s~ \$0-ch1-table-out;
#X obj 234 646 s~ \$0-ch2-table-out;
#N canvas 1070 588 461 369 autosnap~ 0;
#X obj 138 75 inlet~;
#X obj 137 185 snapshot~;
#X obj 137 206 outlet;
#X obj 160 109 loadbang;
#X msg 160 130 1;
#X obj 211 130 inlet;
#X obj 160 151 metro 100;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 5 0 6 1;
#X connect 6 0 1 0;
#X restore 210 504 pd autosnap~;
#X floatatom 279 478 5 0 0 0 - - -;
#X obj 182 354 r \$0-reverse-play-toggle-s;
#N canvas 676 477 503 464 \$0-phase-inverter 0;
#X obj 35 35 inlet~;
#X obj 126 36 inlet;
#X obj 80 62 *~ -1;
#X obj 80 83 +~ 1;
#X obj 126 118 select 0 1;
#X obj 79 343 *~;
#X msg 153 253 0;
#X msg 181 165 1, f 2;
#X obj 35 343 *~;
#X msg 154 165 0;
#X msg 126 253 1;
#X obj 126 228 t b b;
#X obj 154 141 t b b;
#X obj 52 378 outlet~;
#X obj 180 54 loadbang;
#X msg 180 75 0;
#X text 108 342 right * is inverted phasor;
#X connect 0 0 2 0;
#X connect 0 0 8 0;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 11 0;
#X connect 4 1 12 0;
#X connect 5 0 13 0;
#X connect 6 0 5 1;
#X connect 7 0 5 1;
#X connect 8 0 13 0;
#X connect 9 0 8 1;
#X connect 10 0 8 1;
#X connect 11 0 10 0;
#X connect 11 1 6 0;
#X connect 12 0 9 0;
#X connect 12 1 7 0;
#X connect 14 0 15 0;
#X connect 15 0 4 0;
#X restore 65 382 pd \$0-phase-inverter;
#X obj 101 182 t b f f;
#X text 752 110 disconnect from reset to have stop act like pause;
#X obj 482 478 r \$0-reverse-play-toggle-s;
#X text 84 407 multiplied by reduction factor for start and / or end
offset;
#X obj 449 456 value \$0-start-position;
#X connect 0 0 54 0;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 3 0 28 0;
#X connect 3 0 51 0;
#X connect 4 0 26 0;
#X connect 4 0 27 0;
#X connect 5 0 20 0;
#X connect 5 0 0 0;
#X connect 9 0 23 0;
#X connect 10 0 9 0;
#X connect 13 0 0 0;
#X connect 16 0 35 0;
#X connect 17 0 36 0;
#X connect 18 0 19 0;
#X connect 19 0 21 0;
#X connect 22 0 0 1;
#X connect 26 0 49 0;
#X connect 27 0 50 0;
#X connect 29 0 33 0;
#X connect 30 0 34 0;
#X connect 31 0 32 0;
#X connect 37 0 38 0;
#X connect 37 0 41 0;
#X connect 37 0 47 0;
#X connect 37 0 44 0;
#X connect 37 0 43 0;
#X connect 37 0 42 0;
#X connect 37 0 48 0;
#X connect 37 0 9 0;
#X connect 37 0 59 0;
#X connect 38 0 16 0;
#X connect 38 0 17 0;
#X connect 38 0 30 0;
#X connect 38 0 29 0;
#X connect 38 0 31 0;
#X connect 41 0 55 0;
#X connect 42 0 28 1;
#X connect 43 0 4 1;
#X connect 44 0 3 1;
#X connect 47 0 1 1;
#X connect 48 0 2 0;
#X connect 51 0 8 0;
#X connect 52 0 51 1;
#X connect 53 0 54 1;
#X connect 54 0 1 0;
#X connect 55 0 2 0;
#X connect 55 1 5 1;
#X connect 55 2 15 0;
#X connect 57 0 28 3;
#X connect 59 0 28 2;
#X restore 746 98 pd \$0-phasor-player;
#N canvas 968 349 533 409 \$0-patch-to-hardware-glue 0;
#X obj 31 36 r TTi;
#X obj 31 64 route adc tact digital;
#X obj 155 346 s TTo;
#X msg 204 313 3 0;
#X msg 239 313 3 1;
#X msg 139 313 2 0;
#X msg 171 313 2 1;
#X msg 105 313 1 1;
#X text 93 293 test msg to LED outputs;
#X obj 359 135 r \$0-eof-s;
#N canvas 1113 702 450 300 ledpulse 0;
#X obj 42 31 inlet;
#X obj 42 160 outlet;
#X obj 42 59 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 42 79 t b b;
#X msg 42 128 0;
#X msg 125 128 1;
#X floatatom 80 128 5 0 0 0 - - -;
#X obj 42 103 delay 100;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 4 0 6 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 0 6 0;
#X connect 7 0 4 0;
#X restore 359 161 pd ledpulse;
#X obj 359 214 s TTo;
#X msg 73 313 1 0;
#N canvas 39 254 601 599 \$0-tact-handler 0;
#X obj 35 17 inlet;
#X obj 35 44 route 1 2 3;
#X obj 35 383 route short long;
#X obj 81 439 value \$0-bank-num;
#X obj 81 460 + 1;
#X floatatom 126 460 5 0 0 0 - - -;
#X obj 56 218 route short long;
#X obj 102 275 value \$0-bank-num;
#X floatatom 154 296 5 0 0 0 - - -;
#X obj 102 296 - 1;
#X obj 102 317 s \$0-bank-sel-r;
#X obj 81 481 s \$0-bank-sel-r;
#X text 193 297 button 2 long = decrement bank;
#X text 169 461 button 2 long = increment bank;
#X text 171 217 button 2 (gpio 25);
#X text 145 384 button 1 (gpio 23);
#X obj 98 69 print bad msg on TTi:tact route;
#X obj 77 102 route short long;
#X obj 170 129 print bad msg on TTi:tact:3 route;
#X text 248 153 button 3 long = arm for recording;
#X obj 149 244 print bad msg on TTi:tact:2 route;
#X obj 128 408 print bad msg on TTi:tact:1 route;
#X text 184 102 button 3 (gpio 24);
#X obj 77 154 t b;
#N canvas 572 266 718 699 \$0-arm-recording 0;
#X obj 31 17 inlet;
#X obj 31 703 s \$0-arm-ch1-toggle-r;
#X obj 58 679 s \$0-arm-ch2-toggle-r;
#X obj 58 113 v \$0-arm-ch2-toggle;
#X obj 31 173 v \$0-arm-ch1-toggle;
#X obj 31 83 t b b;
#X obj 31 475 expr if(!$f1 && !$f2 \, 1 \, 0);
#X text 206 475 if not armed \, arm;
#X obj 31 194 t f f;
#X obj 58 134 t f f;
#X text 221 251 if armed \, un-arm;
#X obj 102 638 print;
#X msg 102 616 Recording Status: ARMED hit play;
#X obj 117 389 print;
#X msg 117 367 Recording Status: UN-ARMED;
#X obj 103 590 s TTo;
#X text 141 567 lightup button LED when armed;
#X msg 103 566 3 1;
#X obj 58 441 s \$0-arm-ch1-toggle-r;
#X obj 85 417 s \$0-arm-ch2-toggle-r;
#X obj 118 343 s TTo;
#X msg 118 319 3 0;
#X text 153 321 turn off button LED when unarmed;
#X obj 58 250 expr if($f1 || $f2 \, 0 \, 1);
#X obj 58 271 select 0;
#X obj 31 496 select 1;
#X obj 31 521 t b b b;
#X obj 31 577 t f f;
#X msg 31 549 1;
#X obj 58 294 t b b b;
#X obj 58 336 t f f;
#X msg 58 315 0;
#X obj 31 40 v \$0-rec-status;
#X obj 31 61 select 0;
#X text 129 37 check recording status \, if in progress long press
(un-arm) has no meaning \, do nothing;
#X connect 0 0 32 0;
#X connect 3 0 9 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 5 1 3 0;
#X connect 6 0 25 0;
#X connect 8 0 6 0;
#X connect 8 1 23 0;
#X connect 9 0 6 1;
#X connect 9 1 23 1;
#X connect 12 0 11 0;
#X connect 14 0 13 0;
#X connect 17 0 15 0;
#X connect 21 0 20 0;
#X connect 23 0 24 0;
#X connect 24 0 29 0;
#X connect 25 0 26 0;
#X connect 26 0 28 0;
#X connect 26 1 12 0;
#X connect 26 2 17 0;
#X connect 27 0 1 0;
#X connect 27 1 2 0;
#X connect 28 0 27 0;
#X connect 29 0 31 0;
#X connect 29 1 14 0;
#X connect 29 2 21 0;
#X connect 30 0 18 0;
#X connect 30 1 19 0;
#X connect 31 0 30 0;
#X connect 32 0 33 0;
#X connect 33 0 5 0;
#X restore 123 154 pd \$0-arm-recording;
#X obj 123 129 t b;
#N canvas 523 121 556 586 \$0-play-rec-ctl 0;
#X obj 39 30 inlet;
#X obj 67 246 s \$0-rec-bang-r;
#X obj 39 283 s \$0-play-r;
#X obj 39 113 expr if($f1 && $f2 \, 1 \, 0);
#X text 83 30 expecting bang at inlet;
#X obj 186 92 v \$0-arm-ch2-toggle;
#X obj 39 92 v \$0-arm-ch1-toggle;
#X text 123 282 play if not playing;
#X obj 39 134 select 0 1;
#X obj 37 529 s \$0-play-r;
#X obj 37 426 v \$0-playback-status;
#X obj 37 452 select 0;
#X obj 82 490 s \$0-phasor-reset-r;
#X text 121 528 play if not playing;
#X text 203 489 reset if playing;
#X text 36 382 decided not to use this block because when playing if
window postions change reset does not convey new positions to phasor
;
#X obj 39 51 t b b;
#N canvas 705 277 634 575 \$0-cmd-que 0;
#X msg 83 109 clear;
#X msg 146 83 flush;
#X obj 83 210 bag;
#X text 138 142 <-- add or delete elements;
#X text 200 83 <-- output them;
#X text 138 110 <-- start over;
#X msg 56 143 1 1;
#X msg 103 141 1 0;
#X obj 56 60 inlet;
#X obj 146 57 inlet;
#X obj 56 81 t b b;
#X obj 83 231 t b f;
#X obj 110 258 outlet;
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 6 0;
#X connect 10 1 0 0;
#X connect 11 1 12 0;
#X restore 95 213 pd \$0-cmd-que;
#X obj 170 189 r \$0-clock-in-r;
#X obj 67 157 v \$0-clk-qnt;
#X text 171 241 if armed & recording or not \, send record command.
stop recording handled in recording subpatch;
#X obj 67 189 select 0 1;
#X text 155 156 if quantize clk is checked \, que command until next
clock tick;
#X connect 0 0 16 0;
#X connect 3 0 8 0;
#X connect 5 0 3 1;
#X connect 6 0 3 0;
#X connect 8 0 2 0;
#X connect 8 1 19 0;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 11 1 12 0;
#X connect 16 0 6 0;
#X connect 16 1 5 0;
#X connect 17 0 1 0;
#X connect 18 0 17 1;
#X connect 19 0 21 0;
#X connect 21 0 1 0;
#X connect 21 1 17 0;
#X restore 77 179 pd \$0-play-rec-ctl;
#X text 195 178 button 3 short = play / record;
#N canvas 532 176 592 286 \$0-inc-sample 0;
#X obj 27 30 inlet;
#X obj 186 30 r \$0-no-samples-in-bank;
#X msg 27 165 0;
#X obj 186 53 - 1;
#X obj 27 209 s \$0-sample-sel-r;
#X text 142 208 reset sample select to 0 when out of range;
#X obj 66 125 + 1;
#X obj 66 146 s \$0-sample-sel-r;
#X obj 27 53 value \$0-sample-num;
#X obj 27 99 moses 0;
#X obj 27 76 expr if($f1 < $f2 \, $f1 \, -1);
#X text 199 75 button 2 short = increment sample \, wrap to 0 at last
file;
#X obj 27 186 t f;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 2 0 12 0;
#X connect 3 0 10 1;
#X connect 6 0 7 0;
#X connect 8 0 10 0;
#X connect 9 0 2 0;
#X connect 9 1 6 0;
#X connect 10 0 9 0;
#X connect 12 0 4 0;
#X restore 35 526 pd \$0-inc-sample;
#N canvas 64 254 571 288 \$0-dec-sample 0;
#X obj 31 29 inlet;
#X obj 31 189 - 1;
#X obj 31 211 s \$0-sample-sel-r;
#X text 148 213 reset sample select to 0 when out of range;
#X obj 70 141 s \$0-sample-sel-r;
#X obj 31 51 value \$0-sample-num;
#X obj 31 95 moses 0;
#X text 199 73 button 2 short = increment sample \, wrap to 0 at last
file;
#X obj 31 73 expr if($f1 == 0 \, -1 \, $f1);
#X obj 70 119 - 1;
#X obj 31 166 value \$0-no-samples-in-bank;
#X obj 31 141 t b;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 5 0 8 0;
#X connect 6 0 11 0;
#X connect 6 1 9 0;
#X connect 8 0 6 0;
#X connect 9 0 4 0;
#X connect 10 0 1 0;
#X connect 11 0 10 0;
#X restore 56 349 pd \$0-dec-sample;
#X text 139 527 button 2 short = increment sample \, wrap to 0 at last
file;
#X text 162 349 button 2 short = decrement sample \, wrap to last file
after 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 6 0;
#X connect 1 2 17 0;
#X connect 1 3 16 0;
#X connect 2 0 28 0;
#X connect 2 1 3 0;
#X connect 2 2 21 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 0 11 0;
#X connect 6 0 29 0;
#X connect 6 1 7 0;
#X connect 6 2 20 0;
#X connect 7 0 9 0;
#X connect 9 0 8 0;
#X connect 9 0 10 0;
#X connect 17 0 23 0;
#X connect 17 1 25 0;
#X connect 17 2 18 0;
#X connect 23 0 26 0;
#X connect 25 0 24 0;
#X restore 74 157 pd \$0-tact-handler;
#N canvas 759 289 779 637 \$0-adc-handler 0;
#X obj 172 45 inlet;
#X obj 172 74 route 1 2 3 4 5 6;
#X obj 254 123 s \$0-master-vol-r;
#X obj 172 414 s \$0-start-pos-r;
#X obj 188 385 s \$0-end-pos-r;
#X obj 205 357 s \$0-play-window-postion-r;
#X text 283 74 tie knobs to display interface;
#X obj 271 99 print bad msg on TTi:adc route;
#X obj 221 323 s \$0-playback-speed-r;
#X obj 221 283 * 2;
#X text 248 282 *2 because the default hw io is set to report 0 - 1
could change it there but I'm trying to keep it universal rather than
patch specific;
#N canvas 1015 569 573 443 \$0-start-end-ctl 0;
#X obj 31 21 inlet;
#X obj 190 21 inlet;
#X floatatom 50 86 9 0 0 0 - - -;
#X floatatom 217 86 9 0 0 0 - - -;
#X obj 217 157 - 0.05;
#X text 261 157 min window size \, eof bang breaks if smaller;
#X obj 64 183 expr if( $f1 <= $f2 \, 1 \, 0);
#X obj 31 218 spigot;
#X obj 31 332 outlet;
#X text 31 351 outlet for start postion;
#X obj 284 244 expr if( $f2 >= $f1 \, 1 \, 0);
#X obj 251 268 spigot;
#X obj 251 316 outlet;
#X floatatom 251 289 9 0 0 0 - - -;
#X obj 31 55 t f f b;
#X floatatom 31 239 9 0 0 0 - - -;
#X obj 190 55 t b f;
#X obj 50 110 t f f;
#X obj 217 110 t b f f f;
#X obj 284 220 + 0.05;
#X connect 0 0 14 0;
#X connect 1 0 16 0;
#X connect 2 0 17 0;
#X connect 3 0 18 0;
#X connect 4 0 6 1;
#X connect 6 0 7 1;
#X connect 7 0 15 0;
#X connect 10 0 11 1;
#X connect 11 0 13 0;
#X connect 13 0 12 0;
#X connect 14 0 7 0;
#X connect 14 1 2 0;
#X connect 14 2 3 0;
#X connect 15 0 8 0;
#X connect 16 0 2 0;
#X connect 16 1 3 0;
#X connect 17 0 6 0;
#X connect 17 1 19 0;
#X connect 18 0 2 0;
#X connect 18 1 4 0;
#X connect 18 2 11 0;
#X connect 18 3 10 1;
#X connect 19 0 10 0;
#X restore 117 467 pd \$0-start-end-ctl;
#X text 242 464 probably delete because hardware only control won't
help if patch is used by software interface instead;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 4 0;
#X connect 1 2 5 0;
#X connect 1 3 9 0;
#X connect 1 5 2 0;
#X connect 1 6 7 0;
#X connect 9 0 8 0;
#X restore 31 186 pd \$0-adc-handler;
#N canvas 730 397 450 300 \$0-digi-in-handler 0;
#X obj 25 56 route 1 2 3 4;
#X obj 25 204 s \$0-play-r;
#X obj 43 178 s \$0-stop-r;
#X obj 62 149 s \$0-clock-in-r;
#X text 137 55 tie digital inputs to patch controls;
#X obj 25 25 inlet;
#X obj 100 89 print bad msg on TTi:digital route;
#X connect 0 0 1 0;
#X connect 0 1 2 0;
#X connect 0 2 3 0;
#X connect 0 4 6 0;
#X connect 5 0 0 0;
#X restore 117 127 pd \$0-digi-in-handler;
#X obj 160 98 print bad msg on TTi route;
#X msg 359 187 2 \$1;
#X text 357 112 pulse LED B on EOF;
#X connect 0 0 1 0;
#X connect 1 0 14 0;
#X connect 1 1 13 0;
#X connect 1 2 15 0;
#X connect 1 3 16 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 9 0 10 0;
#X connect 10 0 17 0;
#X connect 12 0 2 0;
#X connect 17 0 11 0;
#X restore 887 189 pd \$0-patch-to-hardware-glue;
#X text 784 380 improve save state / settings;
#N canvas 425 191 1135 855 \$0-recording 0;
#X obj 25 736 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 1 726 450 300 ledpulse 0;
#X obj 100 46 inlet;
#X obj 77 208 outlet;
#X obj 100 71 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 100 91 t b b;
#X msg 100 135 0;
#X msg 137 135 1;
#X floatatom 100 166 5 0 0 0 - - -;
#X obj 100 113 delay 100;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 4 0 6 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 5 0 1 0;
#X connect 7 0 4 0;
#X restore 47 745 pd ledpulse;
#X obj 74 636 print;
#X msg 59 696 stop;
#X obj 373 415 t b b b b b;
#X obj 47 722 metro 250;
#X obj 47 792 s TTo;
#X msg 47 768 3 \$1;
#X obj 404 658 s \$0-sample-sel-r;
#X obj 373 822 print;
#X msg 388 700 0;
#X obj 388 765 s \$0-arm-ch1-toggle-r;
#X obj 420 527 s \$0-bank-scan-r;
#X obj 47 588 t b b;
#X obj 415 743 s \$0-arm-ch2-toggle-r;
#X obj 388 721 t f f;
#X obj 608 56 s TTi;
#X msg 608 31 tact 3 long;
#X text 691 32 this msg controls arm / un-arm function;
#X obj 753 502 writesf~ 2;
#X obj 753 290 pack s s;
#X msg 753 313 open \$1\$2 \, start;
#X symbolatom 798 265 30 0 0 0 - - -;
#X obj 780 384 r \$0-cmd_stop_rec;
#X msg 780 408 stop;
#X obj 753 140 r \$0-cmd_start_rec;
#N canvas 222 67 685 649 \$0-rec_file_namer 0;
#X obj 59 93 date;
#X floatatom 67 205 0 0 0 0 - - -;
#X floatatom 63 256 0 0 0 0 - - -;
#X floatatom 59 312 0 0 0 0 - - -;
#X floatatom 80 127 0 0 0 0 - - -;
#X floatatom 75 153 0 0 0 0 - - -;
#X floatatom 71 179 0 0 0 0 - - -;
#X floatatom 186 161 0 0 0 0 - - -;
#X floatatom 179 214 0 0 0 0 - - -;
#X floatatom 172 267 0 0 0 0 - - -;
#X obj 172 92 time;
#X floatatom 193 127 0 0 0 0 - - -;
#X text 243 126 msec;
#X text 214 159 sec;
#X text 204 217 min;
#X text 193 270 hours;
#X obj 59 67 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 155 412 symbol;
#X obj 155 438 outlet;
#X obj 59 40 inlet;
#X msg 236 456 set \$1;
#X text 286 455 example useage at outlet;
#X msg 236 482 /rec_2019-02-03_20-11-02.wav;
#X msg 155 386 /rec_\$1-\$2-\$3_\$4-\$5-\$6.wav;
#N canvas 945 458 450 300 \$0-2_digits 0;
#X obj 56 63 moses 10;
#X msg 114 89 set %d;
#X msg 56 89 set 0%d;
#X obj 29 122 makefilename;
#X obj 29 36 t f f;
#X obj 29 9 inlet;
#X obj 29 143 outlet;
#X text 76 12 adds a 0 in front of #'s 0-9;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X restore 186 185 pd \$0-2_digits;
#N canvas 945 458 450 300 \$0-2_digits 0;
#X obj 56 63 moses 10;
#X msg 114 89 set %d;
#X msg 56 89 set 0%d;
#X obj 29 122 makefilename;
#X obj 29 36 t f f;
#X obj 29 9 inlet;
#X obj 29 143 outlet;
#X text 76 12 adds a 0 in front of #'s 0-9;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X restore 179 236 pd \$0-2_digits;
#N canvas 945 458 450 300 \$0-2_digits 0;
#X obj 56 63 moses 10;
#X msg 114 89 set %d;
#X msg 56 89 set 0%d;
#X obj 29 122 makefilename;
#X obj 29 36 t f f;
#X obj 29 9 inlet;
#X obj 29 143 outlet;
#X text 76 12 adds a 0 in front of #'s 0-9;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X restore 172 289 pd \$0-2_digits;
#N canvas 945 458 450 300 \$0-2_digits 0;
#X obj 56 63 moses 10;
#X msg 114 89 set %d;
#X msg 56 89 set 0%d;
#X obj 29 122 makefilename;
#X obj 29 36 t f f;
#X obj 29 9 inlet;
#X obj 29 143 outlet;
#X text 76 12 adds a 0 in front of #'s 0-9;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X restore 67 232 pd \$0-2_digits;
#N canvas 945 458 450 300 \$0-2_digits 0;
#X obj 56 63 moses 10;
#X msg 114 89 set %d;
#X msg 56 89 set 0%d;
#X obj 29 122 makefilename;
#X obj 29 36 t f f;
#X obj 29 9 inlet;
#X obj 29 143 outlet;
#X text 76 12 adds a 0 in front of #'s 0-9;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X restore 63 283 pd \$0-2_digits;
#X obj 155 360 pack f s s s s s;
#X connect 0 0 3 0;
#X connect 0 1 2 0;
#X connect 0 2 1 0;
#X connect 0 3 6 0;
#X connect 0 4 5 0;
#X connect 0 5 4 0;
#X connect 1 0 27 0;
#X connect 2 0 28 0;
#X connect 3 0 29 0;
#X connect 7 0 24 0;
#X connect 8 0 25 0;
#X connect 9 0 26 0;
#X connect 10 0 9 0;
#X connect 10 1 8 0;
#X connect 10 2 7 0;
#X connect 10 3 11 0;
#X connect 16 0 10 0;
#X connect 16 0 0 0;
#X connect 17 0 18 0;
#X connect 17 0 20 0;
#X connect 19 0 16 0;
#X connect 20 0 22 0;
#X connect 23 0 17 0;
#X connect 24 0 29 5;
#X connect 25 0 29 4;
#X connect 26 0 29 3;
#X connect 27 0 29 2;
#X connect 28 0 29 1;
#X connect 29 0 23 0;
#X restore 798 241 pd \$0-rec_file_namer;
#N canvas 747 713 417 294 \$0-rec_file_path_gen 0;
#X obj 18 155 outlet;
#X text 18 22 could setup something more complex here later to write
to different directories...;
#X obj 18 60 inlet;
#X symbolatom 18 131 10 0 0 0 - - -;
#X obj 188 83 value \$0-bank-num;
#X symbolatom 188 131 10 0 0 0 - - -;
#X obj 188 110 makefilename ./%d;
#X obj 18 110 makefilename ./99;
#X connect 2 0 7 0;
#X connect 3 0 0 0;
#X connect 4 0 6 0;
#X connect 6 0 5 0;
#X connect 7 0 3 0;
#X restore 753 182 pd \$0-rec_file_path_gen;
#X obj 67 401 s \$0-cmd_start_rec;
#X obj 373 391 r \$0-cmd_stop_rec;
#X obj 95 284 s \$0-cmd_stop_rec;
#X obj 37 271 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 171 429 684 469 \$0-rec-source-sel 0;
#X obj 217 226 r~ \$0-ch1-in;
#X obj 244 319 r~ \$0-ch1-table-out;
#X obj 441 228 r~ \$0-ch2-in;
#X obj 468 310 r~ \$0-ch2-table-out;
#X obj 218 289 *~;
#X msg 233 263 0;
#X msg 267 262 1;
#X obj 233 12 inlet;
#X obj 233 33 select 0 1 2;
#X obj 244 381 *~;
#X msg 259 347 0;
#X msg 293 346 1;
#X obj 467 368 *~;
#X msg 482 342 0;
#X msg 521 342 1;
#X obj 441 412 outlet~;
#X obj 219 421 outlet~;
#X obj 440 283 *~;
#X msg 455 259 0;
#X msg 495 259 1;
#X obj 233 124 t b b b b;
#X obj 256 96 t b b b b;
#X obj 279 60 t b b b b;
#X connect 0 0 4 0;
#X connect 1 0 9 0;
#X connect 2 0 17 0;
#X connect 3 0 12 0;
#X connect 4 0 16 0;
#X connect 5 0 4 1;
#X connect 6 0 4 1;
#X connect 7 0 8 0;
#X connect 8 0 20 0;
#X connect 8 1 21 0;
#X connect 8 2 22 0;
#X connect 9 0 16 0;
#X connect 10 0 9 1;
#X connect 11 0 9 1;
#X connect 12 0 15 0;
#X connect 13 0 12 1;
#X connect 14 0 12 1;
#X connect 17 0 15 0;
#X connect 18 0 17 1;
#X connect 19 0 17 1;
#X connect 20 0 5 0;
#X connect 20 1 11 0;
#X connect 20 2 18 0;
#X connect 20 3 14 0;
#X connect 21 0 6 0;
#X connect 21 1 10 0;
#X connect 21 2 13 0;
#X connect 21 3 19 0;
#X connect 22 0 6 0;
#X connect 22 1 11 0;
#X connect 22 2 19 0;
#X connect 22 3 14 0;
#X restore 794 461 pd \$0-rec-source-sel;
#X obj 404 613 value \$0-no-samples-in-bank;
#X obj 794 435 r \$0-rec-src-sel-s;
#X obj 37 388 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 67 45 r \$0-rec-bang-s;
#X obj 67 163 v \$0-rec-status;
#X obj 67 185 select 0 1;
#X obj 59 672 r \$0-cmd_stop_rec;
#X obj 47 563 r \$0-cmd_start_rec;
#X msg 373 800 Recording Status: --RECORDING STOPPED--;
#X msg 74 613 Recording Status: RECORDING IN PROGRESS--;
#X obj 94 374 v \$0-rec-status;
#X msg 94 352 1;
#X obj 67 328 t b b;
#X obj 122 255 v \$0-rec-status;
#X obj 95 209 t b b;
#X msg 122 233 0;
#X text 137 210 if recording stop;
#X text 108 328 if not recording start;
#X obj 753 161 t b b;
#X symbolatom 753 204 10 0 0 0 - - -;
#X obj 773 354 print \$1;
#X text 750 109 this is the business that actually handles naming &
writing the file to disk;
#X text 46 541 do below when we start recording;
#X text 377 369 do below when we stop recording;
#X text 527 526 bang this to rebuild the file_list.txt for current
bank;
#X text 434 720 un-arm recording input channels;
#X text 460 581 I think this delay is needed to give pd time to reload
the bank file_list.txt;
#X text 517 657 date-time format of file name ensures most recent recording
will be last file in bank if bank only contains user recordings;
#X obj 436 461 s \$0-bank-sel-r;
#X msg 436 438 99;
#X text 532 461 jump to user recording bank;
#X obj 420 503 delay 3;
#X floatatom 450 637 5 0 0 0 - - -;
#X obj 404 634 - 1;
#X obj 404 582 delay 15;
#X obj 67 120 expr if($f1 && $f2 \, 1 \, 0);
#X obj 214 99 v \$0-arm-ch2-toggle;
#X obj 67 99 v \$0-arm-ch1-toggle;
#X obj 67 68 t b b;
#X obj 67 141 select 1;
#X text 170 44 you only get this (throught the hardware interface)
if armed \, check tact handler for details. we check arm status again
b/c a user could just bang record through the on screen interface;
#X obj 175 163 print Not armed for recording;
#X obj 396 137 symbol;
#X obj 396 159 s \$0-err;
#X msg 396 116 not_armed_for_recording;
#X connect 1 0 7 0;
#X connect 3 0 5 0;
#X connect 4 0 41 0;
#X connect 4 1 10 0;
#X connect 4 2 67 0;
#X connect 4 3 64 0;
#X connect 4 4 62 0;
#X connect 5 0 0 0;
#X connect 5 0 1 0;
#X connect 7 0 6 0;
#X connect 10 0 15 0;
#X connect 13 0 5 0;
#X connect 13 1 42 0;
#X connect 15 0 11 0;
#X connect 15 1 14 0;
#X connect 17 0 16 0;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 21 0 53 0;
#X connect 22 0 20 1;
#X connect 23 0 24 0;
#X connect 24 0 19 0;
#X connect 25 0 51 0;
#X connect 26 0 22 0;
#X connect 27 0 52 0;
#X connect 29 0 4 0;
#X connect 31 0 30 0;
#X connect 32 0 19 0;
#X connect 32 1 19 1;
#X connect 33 0 65 0;
#X connect 33 0 66 0;
#X connect 34 0 32 0;
#X connect 35 0 28 0;
#X connect 36 0 71 0;
#X connect 37 0 38 0;
#X connect 38 0 45 0;
#X connect 38 1 47 0;
#X connect 39 0 3 0;
#X connect 40 0 13 0;
#X connect 41 0 9 0;
#X connect 42 0 2 0;
#X connect 44 0 43 0;
#X connect 45 0 28 0;
#X connect 45 1 44 0;
#X connect 47 0 30 0;
#X connect 47 1 48 0;
#X connect 48 0 46 0;
#X connect 51 0 27 0;
#X connect 51 1 26 0;
#X connect 52 0 20 0;
#X connect 62 0 61 0;
#X connect 64 0 12 0;
#X connect 66 0 8 0;
#X connect 67 0 33 0;
#X connect 68 0 72 0;
#X connect 69 0 68 1;
#X connect 70 0 68 0;
#X connect 71 0 70 0;
#X connect 71 1 69 0;
#X connect 72 0 37 0;
#X connect 72 1 74 0;
#X connect 72 1 77 0;
#X connect 75 0 76 0;
#X connect 77 0 75 0;
#X coords 0 855 1 854 85 55 0;
#X restore 746 164 pd \$0-recording;
#N canvas 23 362 683 653 \$0-error-handler 0;
#X obj 21 21 r \$0-err;
#X obj 407 72 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 407 93 foo;
#X obj 407 142 s \$0-err;
#X obj 476 72 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 476 142 s \$0-err;
#X msg 476 95 bar;
#X obj 407 115 symbol;
#X obj 21 192 s \$0-err-disp-r;
#X obj 476 116 symbol;
#X msg 21 162 symbol 0;
#X msg 40 137 set symbol \$1;
#X obj 21 50 t b a b;
#X obj 60 76 delay 10000;
#X obj 60 97 t b b;
#X text 141 75 clear the error after 10 sec.;
#X connect 0 0 12 0;
#X connect 1 0 2 0;
#X connect 2 0 7 0;
#X connect 4 0 6 0;
#X connect 6 0 9 0;
#X connect 7 0 3 0;
#X connect 9 0 5 0;
#X connect 10 0 8 0;
#X connect 11 0 10 0;
#X connect 12 0 10 0;
#X connect 12 1 11 0;
#X connect 12 2 13 0;
#X connect 13 0 14 0;
#X connect 14 0 10 0;
#X connect 14 1 11 0;
#X restore 746 186 pd \$0-error-handler;
#X text 784 442 handle bank index out of range errors;
#X symbolatom 434 101 10 0 0 1 Sample_Length #0-sample-length-r #0-sample-length-s
;
#X text 784 504 calc & display current sample postion time;
#X obj 30 78 bng 15 250 50 0 \$0-phasor-reset-s \$0-phasor-reset-r
RESET 17 7 0 10 -262144 -1 -1;
#X obj 30 101 bng 15 250 50 0 \$0-stop-s \$0-stop-r STOP 17 7 0 10
-262144 -1 -1;
#X obj 30 162 vradio 15 1 0 3 \$0-rec-src-sel-s \$0-rec-src-sel-r REC_SRC
0 -8 0 10 -262144 -1 -1 2;
#X text 48 162 Internal;
#X text 48 179 External;
#X text 89 403 I've tried to stick to the convention that all the sub
patches "communicate" through the GUI interface send & receives so
things don't get too confusing. The toggles & numbers send their outputs
to values to be polled by sub patches.;
#X text 768 320 The TO-DO List:;
#X obj 18 526 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 48 195 Both;
#X obj 30 124 bng 15 250 50 0 \$0-rec-bang-s \$0-rec-bang-r RECORD
17 7 0 10 -262144 -258113 -1;
#X obj 104 76 tgl 15 0 \$0-reverse-play-toggle-s \$0-reverse-play-toggle-r
Reverse_Playback 17 7 0 10 -262144 -1 -1 0 1;
#X text 784 535 add external input trimmers \, handle clipping;
#X text 784 566 handle \, pops on reset \, sample change;
#X obj 552 427 r \$0-clock-in-r;
#N canvas 523 301 732 633 \$0-bpm-calc 0;
#X obj 69 86 timer;
#X obj 69 40 t b b;
#X floatatom 69 147 5 0 0 0 - - -;
#X obj 69 63 delay 1;
#X floatatom 30 337 5 0 0 0 - - -;
#X floatatom 67 337 5 0 0 0 - - -;
#X floatatom 103 337 5 0 0 0 - - -;
#X floatatom 140 337 5 0 0 0 - - -;
#X floatatom 176 337 5 0 0 0 - - -;
#X obj 30 359 +;
#X floatatom 161 444 5 0 0 0 - - -;
#X obj 88 373 +;
#X obj 125 387 +;
#X obj 161 401 +;
#X obj 161 423 / 5;
#X floatatom 153 256 5 0 0 0 - - -;
#X obj 114 178 + 1;
#X msg 114 143 1;
#X obj 114 204 wrap 5;
#X obj 69 311 route 0 1 2 3 4;
#X obj 69 268 pack f f;
#X msg 69 289 \$2 \$1;
#X obj 69 107 t f b;
#X obj 114 229 t f f f;
#X obj 239 367 timer;
#X floatatom 239 390 5 0 0 0 - - -;
#X floatatom 188 537 12 0 0 0 - - -;
#X obj 188 516 /;
#X obj 161 464 t b f;
#X msg 238 480 60000;
#X text 268 537 avg beats / minute;
#X obj 188 560 outlet;
#X obj 69 15 inlet;
#X text 160 205 requires zexy library;
#X obj 188 494 swap;
#X obj 238 459 loadbang;
#X text 201 444 <- avg ms betwewen incoming clock ticks;
#X text 123 28 gives 5 point moving average of incoming clock updated
every 5th clock signal;
#X connect 0 0 22 0;
#X connect 1 0 3 0;
#X connect 1 1 0 1;
#X connect 2 0 20 0;
#X connect 3 0 0 0;
#X connect 4 0 9 0;
#X connect 5 0 9 1;
#X connect 6 0 11 1;
#X connect 7 0 12 1;
#X connect 8 0 13 1;
#X connect 9 0 11 0;
#X connect 10 0 28 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 10 0;
#X connect 16 0 18 0;
#X connect 17 0 16 0;
#X connect 18 0 23 0;
#X connect 19 0 4 0;
#X connect 19 1 5 0;
#X connect 19 2 6 0;
#X connect 19 3 7 0;
#X connect 19 4 8 0;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 22 0 2 0;
#X connect 22 1 17 0;
#X connect 23 0 20 1;
#X connect 23 1 16 1;
#X connect 23 2 15 0;
#X connect 24 0 25 0;
#X connect 26 0 31 0;
#X connect 27 0 26 0;
#X connect 28 1 34 0;
#X connect 29 0 34 1;
#X connect 32 0 1 0;
#X connect 34 0 27 0;
#X connect 34 1 27 1;
#X connect 35 0 29 0;
#X restore 552 448 pd \$0-bpm-calc;
#X floatatom 552 469 5 0 0 0 - - -;
#X obj 552 489 int;
#X floatatom 552 510 5 0 0 0 - - -;
#X obj 104 98 tgl 15 0 \$0-clk-qnt-toggle-s \$0-clk-qnt-toggle-r Quantize_to_Clock
17 7 0 10 -262144 -1 -1 0 1;
#X symbolatom 518 366 30 0 0 0 Err_Msg: #0-err-disp-r #0-err-disp-s
;
#X connect 4 0 2 0;
#X connect 7 0 8 0;
#X connect 8 0 29 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 41 0 43 0;
#X connect 43 0 42 0;
#X connect 63 0 31 0;
#X connect 69 0 70 0;
#X connect 70 0 71 0;
#X connect 71 0 72 0;
#X connect 72 0 73 0;
#X coords 0 -1 1 1 700 380 1 10 10;
