#N canvas 0 22 1118 695 10;
#N canvas 0 22 1280 752 pc.live.matrix 0;
#X floatatom -45 -127 5 0 0 0 - - -;
#X text -147 -244 note 1;
#X text -144 -22 note 2;
#X obj -142 86 unpack 0 0 0 0 0;
#X text -57 105 pc;
#X obj -145 -144 unpack 0 0 0 0 0;
#X floatatom -142 106 5 0 0 0 - - -;
#X floatatom -76 -211 5 0 0 0 - - -;
#X msg -142 43 2;
#X floatatom -145 -123 5 0 0 0 - - -;
#X floatatom 262 105 5 0 0 0 - - -;
#X obj 141 88 unpack 0 0 0 0 0;
#X text 296 104 pcd;
#X obj 138 -142 unpack 0 0 0 0 0;
#X floatatom 141 108 5 0 0 0 - - -;
#X floatatom 250 -125 5 0 0 0 - - -;
#X floatatom 207 -209 5 0 0 0 - - -;
#X floatatom 138 -121 5 0 0 0 - - -;
#X text 136 -242 note 3;
#X text 139 -20 note 4;
#X floatatom 579 108 5 0 0 0 - - -;
#X obj 458 91 unpack 0 0 0 0 0;
#X obj 455 -139 unpack 0 0 0 0 0;
#X floatatom 458 111 5 0 0 0 - - -;
#X floatatom 567 -122 5 0 0 0 - - -;
#X floatatom 524 -206 5 0 0 0 - - -;
#X floatatom 455 -118 5 0 0 0 - - -;
#X text 453 -239 note 5;
#X text 456 -17 note 6;
#X msg 458 48 6;
#X msg 455 -183 5;
#X msg 141 45 4;
#X msg 138 -186 3;
#X floatatom -20 317 5 0 0 0 - - -;
#X obj -141 300 unpack 0 0 0 0 0;
#X floatatom -141 320 5 0 0 0 - - -;
#X text -143 192 note 7;
#X msg -141 257 7;
#X obj -142 -2 r g.i;
#X obj -145 -228 r g.i;
#X obj -141 212 r g.i;
#X obj 138 -226 r g.i;
#X obj 141 0 r g.i;
#X obj 455 -223 r g.i;
#X obj 458 3 r g.i;
#X floatatom -99 -114 5 0 0 0 - - -;
#X text -100 -77 to live input matrix;
#X obj -99 -95 s pc.live.1;
#X text 183 -83 to live input matrix;
#X floatatom 184 -120 5 0 0 0 - - -;
#X obj 184 -101 s pc.live.3;
#X text 500 -80 to live input matrix;
#X floatatom 501 -117 5 0 0 0 - - -;
#X obj 501 -98 s pc.live.5;
#X text 500 155 to live input matrix;
#X floatatom 504 112 5 0 0 0 - - -;
#X text 520 110 pc;
#X obj 504 136 s pc.live.6;
#X text 183 154 to live input matrix;
#X floatatom 187 111 5 0 0 0 - - -;
#X text 203 109 pc;
#X obj 187 135 s pc.live.4;
#X text -100 151 to live input matrix;
#X obj -96 132 s pc.live.2;
#X floatatom -96 108 5 0 0 0 - - -;
#X text -99 365 to live input matrix;
#X floatatom -95 322 5 0 0 0 - - -;
#X text -79 320 pc;
#X obj -95 346 s pc.live.7;
#X msg -145 -188 1;
#X obj 138 -207 pipe 2;
#X obj 455 -204 pipe 2;
#X obj -142 20 pipe 2;
#X obj 141 22 pipe 2;
#X obj 458 25 pipe 2;
#X obj -141 233 pipe 2;
#X obj -145 -209 pipe 2;
#X text -100 -193 allow 2ms for coll update!;
#X obj -145 -165 coll global;
#C restore;
#X obj -142 65 coll global;
#C restore;
#X obj -141 279 coll global;
#C restore;
#X obj 138 -163 coll global;
#C restore;
#X obj 141 67 coll global;
#C restore;
#X obj 455 -160 coll global;
#C restore;
#X obj 458 70 coll global;
#C restore;
#X obj 22 -134 r global.reset;
#X msg 22 -112 0;
#X connect 3 0 6 0;
#X connect 3 2 64 0;
#X connect 5 0 9 0;
#X connect 5 2 45 0;
#X connect 5 3 0 0;
#X connect 8 0 79 0;
#X connect 11 0 14 0;
#X connect 11 2 59 0;
#X connect 11 4 10 0;
#X connect 13 0 17 0;
#X connect 13 2 49 0;
#X connect 13 4 15 0;
#X connect 21 0 23 0;
#X connect 21 2 55 0;
#X connect 21 4 20 0;
#X connect 22 0 26 0;
#X connect 22 2 52 0;
#X connect 22 4 24 0;
#X connect 29 0 84 0;
#X connect 30 0 83 0;
#X connect 31 0 82 0;
#X connect 32 0 81 0;
#X connect 34 0 35 0;
#X connect 34 2 66 0;
#X connect 34 4 33 0;
#X connect 37 0 80 0;
#X connect 38 0 72 0;
#X connect 39 0 7 0;
#X connect 39 0 76 0;
#X connect 40 0 75 0;
#X connect 41 0 16 0;
#X connect 41 0 70 0;
#X connect 42 0 73 0;
#X connect 43 0 25 0;
#X connect 43 0 71 0;
#X connect 44 0 74 0;
#X connect 45 0 47 0;
#X connect 49 0 50 0;
#X connect 52 0 53 0;
#X connect 55 0 57 0;
#X connect 59 0 61 0;
#X connect 64 0 63 0;
#X connect 66 0 68 0;
#X connect 69 0 78 0;
#X connect 70 0 32 0;
#X connect 71 0 30 0;
#X connect 72 0 8 0;
#X connect 73 0 31 0;
#X connect 74 0 29 0;
#X connect 75 0 37 0;
#X connect 76 0 69 0;
#X connect 78 0 5 0;
#X connect 79 0 3 0;
#X connect 80 0 34 0;
#X connect 81 0 13 0;
#X connect 82 0 11 0;
#X connect 83 0 22 0;
#X connect 84 0 21 0;
#X connect 85 0 86 0;
#X connect 86 0 47 0;
#X connect 86 0 63 0;
#X connect 86 0 68 0;
#X connect 86 0 50 0;
#X connect 86 0 53 0;
#X connect 86 0 61 0;
#X connect 86 0 57 0;
#X restore 35 120 pd pc.live.matrix;
#N canvas 0 22 1280 752 matrix.color 0;
#X obj 101 -31 < 7;
#X obj 101 -14 gate 1;
#X obj 26 -14 gate 1;
#X obj 26 -66 loadbang;
#X obj 26 -31 >= 7;
#X obj 26 20 s pc.live.7;
#X obj 101 20 s pc.preset.7;
#X obj 100 100 gate 1;
#X obj 25 100 gate 1;
#X obj 25 48 loadbang;
#X obj 25 83 >= 6;
#X obj 100 83 < 6;
#X obj 100 134 s pc.preset.6;
#X obj 25 134 s pc.live.6;
#X obj 100 211 gate 1;
#X obj 25 211 gate 1;
#X obj 25 159 loadbang;
#X obj 25 194 >= 5;
#X obj 100 194 < 5;
#X obj 25 245 s pc.live.5;
#X obj 100 245 s pc.preset.5;
#X obj 26 -48 r coll.size;
#X obj 25 66 r coll.size;
#X obj 25 177 r coll.size;
#X msg 101 3 color 0;
#X msg 100 117 color 0;
#X msg 100 228 color 0;
#X msg 26 3 color 2000;
#X msg 25 117 color 2000;
#X msg 25 228 color 2000;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 1 0 24 0;
#X connect 2 0 27 0;
#X connect 3 0 27 0;
#X connect 4 0 2 0;
#X connect 4 0 2 1;
#X connect 7 0 25 0;
#X connect 8 0 28 0;
#X connect 9 0 28 0;
#X connect 10 0 8 0;
#X connect 10 0 8 1;
#X connect 11 0 7 0;
#X connect 11 0 7 1;
#X connect 14 0 26 0;
#X connect 15 0 29 0;
#X connect 16 0 29 0;
#X connect 17 0 15 0;
#X connect 17 0 15 1;
#X connect 18 0 14 0;
#X connect 18 0 14 1;
#X connect 21 0 0 0;
#X connect 21 0 4 0;
#X connect 22 0 10 0;
#X connect 22 0 11 0;
#X connect 23 0 17 0;
#X connect 23 0 18 0;
#X connect 24 0 5 0;
#X connect 24 0 6 0;
#X connect 25 0 12 0;
#X connect 25 0 13 0;
#X connect 26 0 19 0;
#X connect 26 0 20 0;
#X connect 27 0 5 0;
#X connect 27 0 6 0;
#X connect 28 0 12 0;
#X connect 28 0 13 0;
#X connect 29 0 19 0;
#X connect 29 0 20 0;
#X restore 35 145 pd matrix.color;
#N canvas 838 237 442 500 modal.structures 0;
#X msg 18 56 0;
#X msg 71 56 2;
#X msg 123 56 4;
#X msg 176 54 5;
#X msg 228 54 7;
#X msg 279 52 9;
#X msg 331 51 11;
#X text 16 4 Major - Ionian (ascending);
#X text 17 114 Melodic Minor - Ionianb3/Dorian n7 (ascending);
#X text 16 226 Melodic Minor - Altered (ascending);
#X obj 18 79 s \$0-m1;
#X obj 71 79 s \$0-m2;
#X obj 123 79 s \$0-m3;
#X obj 176 77 s \$0-m4;
#X obj 228 77 s \$0-m5;
#X obj 279 75 s \$0-m6;
#X obj 331 74 s \$0-m7;
#X msg 18 160 0;
#X msg 71 160 2;
#X msg 176 159 5;
#X msg 228 159 7;
#X msg 279 159 9;
#X msg 331 158 11;
#X obj 18 183 s \$0-m1;
#X obj 71 183 s \$0-m2;
#X obj 123 183 s \$0-m3;
#X obj 176 182 s \$0-m4;
#X obj 228 182 s \$0-m5;
#X obj 279 182 s \$0-m6;
#X obj 331 181 s \$0-m7;
#X msg 123 160 3;
#X msg 71 273 2;
#X msg 176 272 5;
#X msg 228 272 7;
#X msg 279 272 9;
#X msg 331 271 11;
#X obj 18 296 s \$0-m1;
#X obj 71 296 s \$0-m2;
#X obj 123 296 s \$0-m3;
#X obj 176 295 s \$0-m4;
#X obj 228 295 s \$0-m5;
#X obj 279 295 s \$0-m6;
#X obj 331 294 s \$0-m7;
#X msg 18 273 1;
#X msg 123 273 4;
#X obj 18 24 r \$0-m.major;
#X obj 18 133 r \$0-m.minor;
#X obj 18 245 r \$0-m.altered;
#X obj 18 344 s coll.preset;
#X msg 18 325 7;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 12 0;
#X connect 3 0 13 0;
#X connect 4 0 14 0;
#X connect 5 0 15 0;
#X connect 6 0 16 0;
#X connect 17 0 23 0;
#X connect 18 0 24 0;
#X connect 19 0 26 0;
#X connect 20 0 27 0;
#X connect 21 0 28 0;
#X connect 22 0 29 0;
#X connect 30 0 25 0;
#X connect 31 0 37 0;
#X connect 32 0 39 0;
#X connect 33 0 40 0;
#X connect 34 0 41 0;
#X connect 35 0 42 0;
#X connect 43 0 36 0;
#X connect 44 0 38 0;
#X connect 45 0 0 0;
#X connect 45 0 1 0;
#X connect 45 0 2 0;
#X connect 45 0 3 0;
#X connect 45 0 4 0;
#X connect 45 0 5 0;
#X connect 45 0 6 0;
#X connect 45 0 49 0;
#X connect 46 0 17 0;
#X connect 46 0 18 0;
#X connect 46 0 30 0;
#X connect 46 0 19 0;
#X connect 46 0 20 0;
#X connect 46 0 21 0;
#X connect 46 0 22 0;
#X connect 46 0 49 0;
#X connect 47 0 43 0;
#X connect 47 0 31 0;
#X connect 47 0 44 0;
#X connect 47 0 32 0;
#X connect 47 0 33 0;
#X connect 47 0 34 0;
#X connect 47 0 35 0;
#X connect 47 0 49 0;
#X connect 49 0 48 0;
#X restore 35 43 pd modal.structures;
#N canvas 767 132 480 443 tetra.structures 0;
#X obj 37 94 s \$0-m1;
#X obj 90 94 s \$0-m2;
#X obj 142 94 s \$0-m3;
#X obj 194 93 s \$0-m4;
#X obj 278 92 s \$0-m5;
#X obj 329 92 s \$0-m6;
#X obj 380 92 s \$0-m7;
#X msg 278 69 0;
#X msg 329 69 0;
#X msg 380 69 0;
#X obj 37 189 s \$0-m1;
#X obj 90 189 s \$0-m2;
#X obj 142 189 s \$0-m3;
#X obj 194 188 s \$0-m4;
#X obj 278 187 s \$0-m5;
#X obj 329 187 s \$0-m6;
#X obj 380 187 s \$0-m7;
#X msg 278 164 0;
#X msg 329 164 0;
#X msg 380 164 0;
#X obj 37 285 s \$0-m1;
#X obj 90 285 s \$0-m2;
#X obj 142 285 s \$0-m3;
#X obj 194 284 s \$0-m4;
#X obj 278 283 s \$0-m5;
#X obj 329 283 s \$0-m6;
#X obj 380 283 s \$0-m7;
#X msg 278 260 0;
#X msg 329 260 0;
#X msg 380 260 0;
#X text 31 20 Tetra - Lydian (T T S);
#X obj 37 380 s \$0-m1;
#X obj 90 380 s \$0-m2;
#X obj 142 380 s \$0-m3;
#X obj 194 379 s \$0-m4;
#X obj 278 378 s \$0-m5;
#X obj 329 378 s \$0-m6;
#X obj 380 378 s \$0-m7;
#X msg 278 355 0;
#X msg 329 355 0;
#X msg 380 355 0;
#X text 33 125 Tetra - Chromatic (S S T);
#X msg 37 356 0;
#X msg 90 357 1;
#X msg 142 357 3;
#X msg 194 356 5;
#X msg 37 262 0;
#X msg 90 262 2;
#X msg 142 262 3;
#X msg 194 261 5;
#X text 33 219 Tetra - Dorian (T S T);
#X msg 37 166 0;
#X msg 90 166 1;
#X msg 142 166 2;
#X msg 194 165 4;
#X msg 37 71 0;
#X msg 90 71 2;
#X msg 142 71 4;
#X msg 194 70 5;
#X obj 37 45 r \$0-t.lydian;
#X obj 37 143 r \$0-t.chromatic;
#X obj 37 239 r \$0-t.dorian;
#X obj 37 335 r \$0-t.phrygian;
#X text 33 315 Tetra - Phrygian (S T T);
#X obj 37 424 s coll.preset;
#X msg 37 405 4;
#X obj 247 120 r global.reset;
#X msg 247 142 0;
#X connect 7 0 4 0;
#X connect 8 0 5 0;
#X connect 9 0 6 0;
#X connect 17 0 14 0;
#X connect 18 0 15 0;
#X connect 19 0 16 0;
#X connect 27 0 24 0;
#X connect 28 0 25 0;
#X connect 29 0 26 0;
#X connect 38 0 35 0;
#X connect 39 0 36 0;
#X connect 40 0 37 0;
#X connect 42 0 31 0;
#X connect 43 0 32 0;
#X connect 44 0 33 0;
#X connect 45 0 34 0;
#X connect 46 0 20 0;
#X connect 47 0 21 0;
#X connect 48 0 22 0;
#X connect 49 0 23 0;
#X connect 51 0 10 0;
#X connect 52 0 11 0;
#X connect 53 0 12 0;
#X connect 54 0 13 0;
#X connect 55 0 0 0;
#X connect 56 0 1 0;
#X connect 57 0 2 0;
#X connect 58 0 3 0;
#X connect 59 0 55 0;
#X connect 59 0 56 0;
#X connect 59 0 57 0;
#X connect 59 0 58 0;
#X connect 59 0 7 0;
#X connect 59 0 8 0;
#X connect 59 0 9 0;
#X connect 59 0 65 0;
#X connect 60 0 51 0;
#X connect 60 0 52 0;
#X connect 60 0 53 0;
#X connect 60 0 54 0;
#X connect 60 0 17 0;
#X connect 60 0 18 0;
#X connect 60 0 19 0;
#X connect 60 0 65 0;
#X connect 61 0 46 0;
#X connect 61 0 47 0;
#X connect 61 0 48 0;
#X connect 61 0 49 0;
#X connect 61 0 27 0;
#X connect 61 0 28 0;
#X connect 61 0 29 0;
#X connect 61 0 65 0;
#X connect 62 0 42 0;
#X connect 62 0 43 0;
#X connect 62 0 44 0;
#X connect 62 0 45 0;
#X connect 62 0 38 0;
#X connect 62 0 39 0;
#X connect 62 0 40 0;
#X connect 62 0 65 0;
#X connect 65 0 64 0;
#X connect 66 0 67 0;
#X connect 67 0 0 0;
#X connect 67 0 1 0;
#X connect 67 0 2 0;
#X connect 67 0 3 0;
#X connect 67 0 4 0;
#X connect 67 0 5 0;
#X connect 67 0 6 0;
#X restore 35 70 pd tetra.structures;
#N canvas 0 48 1280 752 random 0;
#X obj 52 216 s \$0-m1;
#X text 51 50 Random;
#X obj 52 100 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 52 169 drunk 11;
#X obj 97 140 random 11;
#X text 157 136 random step size;
#X floatatom 61 193 5 0 0 0 - - -;
#X floatatom 113 165 5 0 0 0 - - -;
#X obj 52 123 metro 200;
#X text 97 193 "staggered" output;
#X obj 52 282 drunk 11;
#X obj 97 253 random 11;
#X text 157 249 random step size;
#X floatatom 61 306 5 0 0 0 - - -;
#X floatatom 113 278 5 0 0 0 - - -;
#X text 97 306 "staggered" output;
#X obj 52 329 s \$0-m2;
#X obj 288 169 drunk 11;
#X obj 333 140 random 11;
#X floatatom 297 193 5 0 0 0 - - -;
#X floatatom 349 165 5 0 0 0 - - -;
#X text 333 193 "staggered" output;
#X obj 288 216 s \$0-m3;
#X obj 288 270 drunk 11;
#X obj 333 241 random 11;
#X floatatom 297 294 5 0 0 0 - - -;
#X floatatom 349 266 5 0 0 0 - - -;
#X text 333 294 "staggered" output;
#X obj 288 317 s \$0-m4;
#X obj 52 74 r \$0-preset.random;
#X obj 266 91 == 0;
#X obj 302 87 gate 1;
#X msg 302 106 0;
#X obj 194 91 cup;
#X obj 237 91 % 2;
#X obj 52 376 s \$0-m5;
#X obj 52 397 s \$0-m6;
#X obj 52 417 s \$0-m7;
#X obj 52 437 s \$0-m8;
#X msg 52 355 0;
#X obj 103 101 r global.bpm;
#X connect 2 0 8 0;
#X connect 2 0 39 0;
#X connect 3 0 0 0;
#X connect 3 0 6 0;
#X connect 4 0 3 2;
#X connect 4 0 7 0;
#X connect 8 0 3 0;
#X connect 8 0 4 0;
#X connect 8 0 11 0;
#X connect 8 0 18 0;
#X connect 8 0 10 0;
#X connect 8 0 17 0;
#X connect 8 0 23 0;
#X connect 8 0 24 0;
#X connect 10 0 13 0;
#X connect 10 0 16 0;
#X connect 11 0 10 2;
#X connect 11 0 14 0;
#X connect 17 0 19 0;
#X connect 17 0 22 0;
#X connect 18 0 17 2;
#X connect 18 0 20 0;
#X connect 23 0 25 0;
#X connect 23 0 28 0;
#X connect 24 0 23 2;
#X connect 24 0 26 0;
#X connect 29 0 2 0;
#X connect 29 0 33 0;
#X connect 30 0 31 0;
#X connect 30 0 31 1;
#X connect 31 0 32 0;
#X connect 32 0 8 0;
#X connect 33 0 34 0;
#X connect 34 0 30 0;
#X connect 39 0 35 0;
#X connect 39 0 36 0;
#X connect 39 0 37 0;
#X connect 39 0 38 0;
#X connect 40 0 8 1;
#X restore 35 95 pd random;
#N canvas 0 48 1280 752 pitch.class 0;
#X floatatom -269 -149 5 0 0 0 - - -;
#X floatatom -236 -97 5 0 0 0 - - -;
#X text -342 -325 pitch class;
#X text -202 -95 interval to last note - pitch class distance;
#X obj -340 -301 r \$0-p;
#X obj -269 -130 s \$0-pc;
#X text -218 -130 to coll;
#X obj -236 -78 s \$0-pcd;
#X text -180 -79 to coll;
#X floatatom -255 -263 5 0 0 0 - - -;
#X floatatom -340 -280 5 0 0 0 - - -;
#X text -218 -264 offset for manual PC0;
#X obj -339 -259 i;
#X floatatom -247 -225 5 0 0 0 - - -;
#X floatatom -339 -237 5 0 0 0 - - -;
#X obj -282 -242 -;
#X obj -255 -286 r pc.zero.set;
#X text -202 -169 not actual pitch \, if displaced by manual IC/0!!
;
#X text -233 -151 actual pitch class;
#X obj -236 -58 s pcd;
#X obj -282 -198 pitch;
#X floatatom 100 -181 5 0 0 0 - - -;
#X obj 100 -158 s \$0-r;
#X text 146 -157 to coll;
#X obj -339 -205 pitch;
#X symbolatom -339 -178 10 0 0 0 - - -;
#X obj -339 -156 s note.name;
#X connect 0 0 5 0;
#X connect 1 0 7 0;
#X connect 1 0 19 0;
#X connect 4 0 10 0;
#X connect 9 0 15 1;
#X connect 10 0 12 0;
#X connect 12 0 14 0;
#X connect 12 0 15 0;
#X connect 12 0 24 0;
#X connect 15 0 13 0;
#X connect 15 0 20 0;
#X connect 16 0 9 0;
#X connect 20 2 0 0;
#X connect 20 3 1 0;
#X connect 20 4 21 0;
#X connect 21 0 22 0;
#X connect 24 1 25 0;
#X connect 25 0 26 0;
#X restore 35 294 pd pitch.class;
#N canvas 0 22 790 713 interval.class 0;
#X obj -379 -34 gate 1;
#X obj -379 -58 == 0;
#X obj -379 13 s \$0-ic;
#X msg -379 -4 0;
#X obj -333 -34 gate 1;
#X msg -333 -4 1;
#X obj -333 -58 == 1;
#X obj -283 -34 gate 1;
#X obj -234 -34 gate 1;
#X obj -186 -34 gate 1;
#X obj -137 -34 gate 1;
#X obj -90 -34 gate 1;
#X obj -41 -34 gate 1;
#X obj -283 -58 == 2;
#X obj -234 -58 == 3;
#X obj -186 -58 == 4;
#X obj -137 -58 == 5;
#X obj -90 -58 == 6;
#X obj -41 -58 == 7;
#X msg -283 -4 2;
#X msg -234 -4 3;
#X msg -186 -4 4;
#X msg -137 -4 5;
#X msg -90 -4 6;
#X msg -41 -4 5;
#X obj 7 -34 gate 1;
#X obj 54 -34 gate 1;
#X obj 103 -34 gate 1;
#X obj 153 -34 gate 1;
#X obj 7 -58 == 8;
#X obj 54 -58 == 9;
#X obj 103 -58 == 10;
#X obj 153 -58 == 11;
#X msg 7 -4 4;
#X msg 54 -4 3;
#X msg 103 -4 2;
#X msg 153 -4 1;
#X text -370 58 pc intervals: 0 / 12 - 1 / 11 - 2 / 10 - 3 / 9 - 4
/ 8 - 5 / 7 - 6 interval classes: 0 1 2 3 4 5 6 - The concept of interval
classes is an abstraction that will prove useful when we begin to consider
the properties of pc and ic sets.;
#X obj -379 -133 abs;
#X floatatom -379 -113 5 0 0 0 - - -;
#X obj -379 -94 % 12;
#X floatatom -379 -74 5 0 0 0 - - -;
#X text -381 -178 Quasi-Interval Class - Note to note basis;
#X text -374 122 Potential further develop into interval vectors: The
interval class vector is a 6-member tally of the number of occurences
of each interval class found in a set. To obtain the tally \, you find
the interval between every possible pairing of notes in a set and increment
the tally of that interval class. For example \, consider the set (2
\, 3 \, 9). There is one occurence of interval class 1 (between the
2 and the 3) \, one occurence of interval class 6 (between the 3 and
the 9) and one occurence of interval class 5 (between the 2 and the
9). Therefore the interval class vector for set (2 \, 3 \, 9) is <1
\, 0 \, 0 \, 0 \, 1 \, 1>.;
#X obj -379 -153 r \$0-pcd;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 1 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 6 0 4 0;
#X connect 6 0 4 1;
#X connect 7 0 19 0;
#X connect 8 0 20 0;
#X connect 9 0 21 0;
#X connect 10 0 22 0;
#X connect 11 0 23 0;
#X connect 12 0 24 0;
#X connect 13 0 7 0;
#X connect 13 0 7 1;
#X connect 14 0 8 0;
#X connect 14 0 8 1;
#X connect 15 0 9 0;
#X connect 15 0 9 1;
#X connect 16 0 10 0;
#X connect 16 0 10 1;
#X connect 17 0 11 0;
#X connect 17 0 11 1;
#X connect 18 0 12 0;
#X connect 18 0 12 1;
#X connect 19 0 2 0;
#X connect 20 0 2 0;
#X connect 21 0 2 0;
#X connect 22 0 2 0;
#X connect 23 0 2 0;
#X connect 24 0 2 0;
#X connect 25 0 33 0;
#X connect 26 0 34 0;
#X connect 27 0 35 0;
#X connect 28 0 36 0;
#X connect 29 0 25 0;
#X connect 29 0 25 1;
#X connect 30 0 26 0;
#X connect 30 0 26 1;
#X connect 31 0 27 0;
#X connect 31 0 27 1;
#X connect 32 0 28 0;
#X connect 32 0 28 1;
#X connect 33 0 2 0;
#X connect 34 0 2 0;
#X connect 35 0 2 0;
#X connect 36 0 2 0;
#X connect 38 0 39 0;
#X connect 39 0 40 0;
#X connect 40 0 41 0;
#X connect 41 0 1 0;
#X connect 41 0 6 0;
#X connect 41 0 13 0;
#X connect 41 0 14 0;
#X connect 41 0 15 0;
#X connect 41 0 16 0;
#X connect 41 0 17 0;
#X connect 41 0 18 0;
#X connect 41 0 29 0;
#X connect 41 0 30 0;
#X connect 41 0 31 0;
#X connect 41 0 32 0;
#X connect 44 0 38 0;
#X restore 35 316 pd interval.class;
#N canvas 0 22 1280 752 basic.space 0;
#X text 56 187 1 C C# D D# E F F# G G# A A# B C;
#X obj 61 219 r \$0-pc;
#X floatatom 61 239 5 0 0 0 - - -;
#X text 260 169 PC 2 \, 5 \, 9 \, 11;
#X text 260 187 PC 1 \, 3 \, 6 \, 8 \, 10;
#X floatatom 61 341 5 0 0 0 - - -;
#X text 74 340 8ve;
#X text 59 420 to coll;
#X obj 61 403 s \$0-bs;
#X obj 61 363 != 0;
#X obj 61 383 gate 1;
#X floatatom 174 339 5 0 0 0 - - -;
#X floatatom 287 339 5 0 0 0 - - -;
#X floatatom 400 341 5 0 0 0 - - -;
#X text 188 339 triadic;
#X text 299 338 diatonic;
#X text 410 340 chromatic;
#X obj 174 359 != 0;
#X obj 287 361 != 0;
#X obj 400 365 != 0;
#X text 171 418 to coll;
#X obj 174 401 s \$0-bs;
#X obj 174 381 gate 1;
#X text 284 417 to coll;
#X obj 287 401 s \$0-bs;
#X obj 287 381 gate 1;
#X obj 400 405 s \$0-bs;
#X obj 400 385 gate 1;
#X text 397 422 to coll;
#X text 116 217 develop to accomodate diffent pitch structures using
offset for modes;
#X obj 61 259 expr if($f1 == 0 \, 4 \, 0) \; if($f1 == 4 | $f1 == 7
\, 3 \, 0) \; if($f1 == 2 | $f1 == 5 | $f1 == 9 | $f1 == 11 \, 2 \,
0) \; if($f1 == 1 | $f1 == 3 | $f1 == 6 | $f1 == 8 | $f1 == 10 \, 1
\, 0);
#X text 56 169 2 C D E F G A B C;
#X text 56 149 3 C E G C PC 4 7;
#X text 57 134 4 C C PC 0;
#X text 57 460 Lerdahl's rule of melodic attraction sees the omission
of 5th space \, "as it works better." (Lerdahl 2001 \, pp. 161 - 162).
;
#X text 57 509 * note this is a melodic (sequential) tonal equation.
simultaneous harmonic structures are not accomodated (p.165);
#X text 648 243 Based on vertical distance relationships (Lerdahl 2001
\, p. 162);
#X text 649 220 Anchoring and Tension (for major diatonic scale);
#X text 647 286 *implement different modes as well as ionian;
#X text 56 79 Organising PC into basic space (MAJOR - i.e. MAJ 3rd
= basic space 3 while MIN 3rd treated as part of chromatic space);
#X text 220 40 * expand to deal with minor space;
#X connect 1 0 2 0;
#X connect 2 0 30 0;
#X connect 5 0 9 0;
#X connect 5 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 11 0 17 0;
#X connect 11 0 22 1;
#X connect 12 0 18 0;
#X connect 12 0 25 1;
#X connect 13 0 19 0;
#X connect 13 0 27 1;
#X connect 17 0 22 0;
#X connect 18 0 25 0;
#X connect 19 0 27 0;
#X connect 22 0 21 0;
#X connect 25 0 24 0;
#X connect 27 0 26 0;
#X connect 30 0 5 0;
#X connect 30 1 11 0;
#X connect 30 2 12 0;
#X connect 30 3 13 0;
#X restore 35 338 pd basic.space;
#N canvas 333 74 500 435 note.offset 0;
#X obj 94 107 timer;
#X obj 83 -17 r g.i;
#X obj 83 5 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 83 24 cup;
#X floatatom 83 66 5 0 0 0 - - -;
#X obj 83 45 % 2;
#X obj 83 82 sel 0;
#X obj 126 82 sel 1;
#X obj 183 107 timer;
#X obj 172 82 sel 1;
#X obj 215 82 sel 0;
#X msg 90 176 \$1 1000;
#X obj 90 198 line;
#X obj 90 285 s glbl.it;
#X obj 90 262 spigot;
#X obj 223 124 average;
#X floatatom 90 218 10 0 0 0 - - -;
#X obj 15 247 tgl 15 0 empty no.sw empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 90 237 i;
#X text 36 245 [on/off];
#X text 82 -58 "Average"/interpolated note offset time controls interpolation
times for other processes;
#X obj 244 254 spigot;
#X obj 298 239 tgl 15 0 empty no.sw empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 313 237 [on/off];
#X obj 244 275 s gt.it;
#X floatatom 94 127 5 0 0 0 - - -;
#X floatatom 183 126 5 0 0 0 - - -;
#X text 69 305 Global Interpolation;
#X text 242 297 Grain Time Interpolation;
#X text 219 179 Contour Interpolation Range;
#X obj 223 159 split 100 10000;
#X connect 0 0 15 0;
#X connect 0 0 25 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 4 0 7 0;
#X connect 4 0 9 0;
#X connect 4 0 10 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 7 0 0 1;
#X connect 8 0 15 0;
#X connect 8 0 26 0;
#X connect 9 0 8 0;
#X connect 10 0 8 1;
#X connect 11 0 12 0;
#X connect 12 0 16 0;
#X connect 14 0 13 0;
#X connect 15 0 30 0;
#X connect 16 0 18 0;
#X connect 17 0 14 1;
#X connect 18 0 14 0;
#X connect 18 0 21 0;
#X connect 21 0 24 0;
#X connect 22 0 21 1;
#X connect 30 0 11 0;
#X restore 35 448 pd note.offset;
#N canvas 567 22 374 291 octave.repeat 0;
#X text -134 41 octaves are played \, do something;
#X obj -106 252 spigot;
#X obj -134 109 cup;
#X text -70 87 simple counter;
#X obj -105 216 != 0;
#X text -74 216 if output does not = 0;
#X obj -73 233 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom -149 220 5 0 0 0 - - -;
#X floatatom -134 151 5 0 0 0 - - -;
#X obj -134 71 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj -134 89 metro 100;
#X obj -134 130 % 10;
#X text -99 151 reading from table;
#X obj -134 188 expr if(test[$f1] % 12 == 0 \, test[$f1] \, 0);
#X connect 2 0 11 0;
#X connect 4 0 6 0;
#X connect 6 0 1 1;
#X connect 7 0 1 0;
#X connect 9 0 10 0;
#X connect 10 0 2 0;
#X connect 11 0 8 0;
#X restore 35 478 pd octave.repeat;
#N canvas 0 22 1280 752 common.tones 0;
#X text 40 16 do something with interval class sets;
#X text 41 46 maybe pitch class sets;
#X text 16 74 see bijective chords and inversions \;;
#X text 16 125 Ix(A)=(Ix(C) \, Ix(E) \, Ix(G)) =(0 \, -4 \, -7)=(0
\, 8 \, 5)=(C \, G# \, F) - inversions;
#X text 17 197 displacement multi-set of 0 \, 1 \, 1;
#X text 16 179 Permute elements to arrive at o(A')=(C \, F \, G#);
#X text 13 224 (C \, E \, G) - (C \, F \, G#) is an efficient voicing
;
#X text 17 298 From this \, we can arrive at an efficient voice leading
by transposition where we transpose by the size of the chord. In this
case \, by 4 If we do this \, then we will arrive at (E \, G# \, C)
\, which is the same by permutation.;
#X text 16 257 Take C E G# each with pc distance of 4 \, divides the
8ve equally;
#X text 15 93 T4(A)=(T4(C) \, T4(E) \, T4(G)) =(0+4 \, 4+4 \, 7+4)=(4
\, 8 \, 11)=(E \, G# \, B) - transposition;
#X text 17 359 based on liebman also.;
#X restore 422 523 pd common.tones;
#N canvas 39 66 1209 656 global.data 0;
#X floatatom 112 110 5 0 0 0 - - -;
#X obj 112 128 int;
#X obj 112 147 split 3300 8800;
#X obj 112 167 / 100;
#X floatatom 112 188 5 0 0 0 - - -;
#X msg 403 501 clear;
#X obj 402 484 bng 15 250 50 0 empty global.reset empty 17 7 0 10 -262144
-1 -1;
#X obj 112 210 s \$0-p;
#X text 420 484 global.reset;
#X text 155 209 pitch;
#X obj 379 326 r \$0-pc;
#X text 377 308 pitch class;
#X obj 462 326 r \$0-pcd;
#X text 459 306 pitch class distance;
#X floatatom 462 347 5 0 0 0 - - -;
#X obj 591 326 r \$0-ic;
#X text 588 306 interval.class;
#X floatatom 379 346 5 0 0 0 - - -;
#X floatatom 591 346 5 0 0 0 - - -;
#X obj 196 298 r \$0-i;
#X obj 196 321 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 704 345 5 0 0 0 - - -;
#X obj 704 326 r \$0-bs;
#X text 702 305 basic.space;
#X obj 239 298 r \$0-p;
#X obj 282 298 r \$0-a;
#X floatatom 456 110 5 0 0 0 - - -;
#X floatatom 456 149 5 0 0 0 - - -;
#X obj 456 171 s \$0-a;
#X text 561 148 relevant ranges;
#X text 497 171 amplitude;
#X text 193 268 store in coll (pitch \, amplitude \, pc \, pcd \, ic
\, string no.);
#X floatatom 794 345 5 0 0 0 - - -;
#X text 792 305 string number;
#X obj 794 326 r \$0-s;
#X text 362 543 Coll data utilised for basic space \, melodic attraction
\, linear completion algorithms for all strings;
#X obj 591 365 s ic.global;
#X obj 379 368 s pc.global;
#X floatatom 112 69 5 0 0 0 - - -;
#X obj 112 88 * 100;
#X floatatom 456 71 5 0 0 0 - - -;
#X text 111 0 Takes MIDI note numbers from individual instances of
[sigmund~] per string \, rather than re-track all pitches.;
#X text 451 194 Plot amplitudes into table for mapping?;
#X obj 144 315 s g.i;
#X obj 972 68 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 1019 116 bng 15 250 50 0 empty global.reset empty 17 7 0 10
-262144 -1 -1;
#X obj 972 172 sel 0;
#X obj 972 193 bng 15 250 50 0 zerocounter empty empty 17 7 0 10 -262144
-1 -1;
#X obj 972 44 r \$0-p;
#X text 112 27 index based on incoming pitch level;
#X text 1036 116 global.reset;
#X text 1062 189 for coll index;
#X obj 1019 189 s \$0-i;
#X obj 972 87 cup;
#X obj 972 129 + 1;
#X floatatom 972 150 5 0 0 0 - - -;
#X obj 972 107 % 7;
#X msg 1019 133 0;
#X text 1080 165 counter;
#X obj 1019 166 s counter;
#X obj 196 379 pipe 1;
#X msg 448 501 write;
#X obj 1027 68 r coll.size;
#X floatatom 1027 91 5 0 0 0 - - -;
#X obj 365 518 coll global;
#C restore;
#X obj 112 49 r gpt.1;
#X floatatom 159 72 5 0 0 0 - - -;
#X obj 159 49 r gpt.2;
#X floatatom 208 72 5 0 0 0 - - -;
#X floatatom 258 72 5 0 0 0 - - -;
#X obj 208 49 r gpt.3;
#X obj 258 49 r gpt.4;
#X floatatom 309 72 5 0 0 0 - - -;
#X obj 309 49 r gpt.5;
#X floatatom 362 72 5 0 0 0 - - -;
#X obj 362 49 r gpt.6;
#X obj 456 52 r gat.1;
#X floatatom 505 74 5 0 0 0 - - -;
#X obj 505 52 r gat.2;
#X floatatom 553 74 5 0 0 0 - - -;
#X floatatom 602 74 5 0 0 0 - - -;
#X obj 553 52 r gat.3;
#X obj 602 52 r gat.4;
#X floatatom 650 74 5 0 0 0 - - -;
#X floatatom 699 74 5 0 0 0 - - -;
#X obj 650 52 r gat.5;
#X obj 699 52 r gat.6;
#X text 529 18 *arrange global pitch and amplitude values in list /improve
intake of numbers;
#N canvas 0 22 329 188 string 0;
#X obj 34 139 s \$0-s;
#X msg 34 96 1;
#X msg 64 96 2;
#X msg 94 96 3;
#X msg 125 97 4;
#X msg 154 97 5;
#X msg 184 97 6;
#X obj 34 46 r si.1;
#X floatatom 34 67 5 0 0 0 - - -;
#X floatatom 79 67 5 0 0 0 - - -;
#X obj 79 46 r si.2;
#X floatatom 124 67 5 0 0 0 - - -;
#X floatatom 169 67 5 0 0 0 - - -;
#X obj 124 46 r si.3;
#X obj 169 46 r si.4;
#X floatatom 214 67 5 0 0 0 - - -;
#X floatatom 259 67 5 0 0 0 - - -;
#X obj 214 46 r si.5;
#X obj 259 46 r si.6;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 9 0 2 0;
#X connect 10 0 9 0;
#X connect 11 0 3 0;
#X connect 12 0 4 0;
#X connect 13 0 11 0;
#X connect 14 0 12 0;
#X connect 15 0 5 0;
#X connect 16 0 6 0;
#X connect 17 0 15 0;
#X connect 18 0 16 0;
#X restore 111 234 pd string;
#N canvas 0 22 1280 752 global.interpolation 0;
#X floatatom -172 -115 5 0 0 0 - - -;
#X text -173 -157 pitch.class;
#X obj -172 -134 r pc.global;
#X floatatom -81 -118 5 0 0 0 - - -;
#X obj -81 -137 r ic.global;
#X obj -81 -99 / 6;
#X obj -172 -96 / 11;
#X obj 201 -139 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 124 -124 random 10;
#X obj 124 -103 / 10;
#X obj 201 -161 metro 500;
#X text -12 -116 select contour data;
#X floatatom -10 -78 5 0 0 0 - - -;
#X text 121 -141 random;
#X obj -141 -62 mux - - -;
#X obj -10 -97 r global.c.mode;
#X floatatom 271 -187 5 0 0 0 - - -;
#X obj 271 -208 r global.bpm;
#X floatatom 124 -78 5 0 0 0 - - -;
#X obj -141 -34 average;
#X obj -141 46 line;
#X obj -74 -13 r glbl.it;
#X obj -141 4 pack 0 0;
#X msg -141 24 \$1 \$2;
#X floatatom -102 143 5 0 0 0 - - -;
#X floatatom -102 204 10 0 0 0 - - -;
#X text -68 183 Further Interpolation;
#X obj -141 121 moses 0;
#X msg 92 114 0 0;
#X text 119 112 stop;
#X msg -102 163 \$1 1000;
#X obj -102 183 line;
#X obj 92 66 sel 0;
#X obj 104 91 s \$0-off;
#X obj -102 225 outlet;
#X msg -34 131 0 1000;
#X obj -141 92 spigot;
#X obj -108 49 r glbl.cntr.sw;
#X obj 201 -182 loadbang;
#X connect 0 0 6 0;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 14 1;
#X connect 6 0 14 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 18 0;
#X connect 10 0 7 0;
#X connect 12 0 14 3;
#X connect 14 0 19 0;
#X connect 15 0 12 0;
#X connect 16 0 10 1;
#X connect 17 0 16 0;
#X connect 18 0 14 2;
#X connect 19 0 22 0;
#X connect 20 0 36 0;
#X connect 21 0 22 1;
#X connect 22 0 23 0;
#X connect 23 0 20 0;
#X connect 24 0 30 0;
#X connect 25 0 34 0;
#X connect 27 1 24 0;
#X connect 28 0 35 0;
#X connect 30 0 31 0;
#X connect 31 0 25 0;
#X connect 32 0 28 0;
#X connect 32 0 33 0;
#X connect 35 0 31 0;
#X connect 36 0 27 0;
#X connect 37 0 36 1;
#X connect 37 0 32 0;
#X connect 38 0 10 0;
#X restore 602 475 pd global.interpolation;
#X obj 602 519 s g.c;
#X floatatom 602 497 5 0 0 0 - - -;
#X obj 898 325 r \$0-r;
#X floatatom 898 346 5 0 0 0 - - -;
#X text 895 306 register;
#X obj 960 387 r nt.off;
#X floatatom 960 410 10 0 0 0 - - -;
#X obj 365 459 pack f f f f f f f f f f;
#X obj 945 442 f;
#X floatatom 945 466 5 0 0 0 - - -;
#X obj 456 90 * 1;
#X obj 456 128 f;
#X text 955 371 note onset of previous note;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 5 0 64 0;
#X connect 6 0 5 0;
#X connect 10 0 17 0;
#X connect 10 0 97 3;
#X connect 12 0 14 0;
#X connect 12 0 97 4;
#X connect 15 0 18 0;
#X connect 15 0 97 5;
#X connect 17 0 37 0;
#X connect 18 0 36 0;
#X connect 19 0 20 0;
#X connect 19 0 43 0;
#X connect 19 0 60 0;
#X connect 22 0 21 0;
#X connect 22 0 97 6;
#X connect 24 0 97 1;
#X connect 25 0 97 2;
#X connect 26 0 101 0;
#X connect 27 0 28 0;
#X connect 34 0 32 0;
#X connect 34 0 97 7;
#X connect 38 0 39 0;
#X connect 39 0 0 0;
#X connect 40 0 100 0;
#X connect 44 0 53 0;
#X connect 45 0 57 0;
#X connect 46 0 47 0;
#X connect 46 1 52 0;
#X connect 48 0 44 0;
#X connect 53 0 56 0;
#X connect 54 0 55 0;
#X connect 55 0 46 0;
#X connect 55 0 59 0;
#X connect 56 0 54 0;
#X connect 57 0 55 0;
#X connect 57 0 53 0;
#X connect 60 0 97 0;
#X connect 61 0 64 0;
#X connect 62 0 63 0;
#X connect 63 0 56 1;
#X connect 65 0 38 0;
#X connect 66 0 39 0;
#X connect 67 0 66 0;
#X connect 68 0 39 0;
#X connect 69 0 39 0;
#X connect 70 0 68 0;
#X connect 71 0 69 0;
#X connect 72 0 39 0;
#X connect 73 0 72 0;
#X connect 74 0 39 0;
#X connect 75 0 74 0;
#X connect 76 0 40 0;
#X connect 77 0 100 0;
#X connect 78 0 77 0;
#X connect 79 0 100 0;
#X connect 80 0 100 0;
#X connect 81 0 79 0;
#X connect 82 0 80 0;
#X connect 83 0 100 0;
#X connect 84 0 100 0;
#X connect 85 0 83 0;
#X connect 86 0 84 0;
#X connect 89 0 91 0;
#X connect 91 0 90 0;
#X connect 92 0 93 0;
#X connect 92 0 97 8;
#X connect 95 0 96 0;
#X connect 96 0 98 0;
#X connect 97 0 64 0;
#X connect 98 0 97 9;
#X connect 98 0 99 0;
#X connect 100 0 26 0;
#X connect 101 0 27 0;
#X restore 37 -13 pd global.data;
#X text 420 467 //Future work;
#X text 35 -40 //Record global data;
#X text 30 267 //Organise pitch data;
#X text 34 17 //Matrix presets;
#X text 33 181 //The math & output;
#X text 130 448 Dictates interpolation time(s);
#N canvas 0 48 1280 752 foreground.pitch 0;
#X floatatom 268 216 5 0 0 0 - - -;
#X obj 349 162 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X obj 64 172 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130 -1
-1;
#X floatatom 64 231 5 0 0 0 - - -;
#X floatatom 268 267 5 0 0 0 - - -;
#X obj 270 330 bng 30 250 50 0 empty empty empty 17 7 0 10 -262130
-1 -1;
#X obj 270 286 int;
#X obj 270 306 gate 0;
#X obj 268 125 tgl 15 0 empty rfa.sw empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 64 212 counter;
#X obj 64 251 >= \$1;
#X obj 268 164 metro 1000;
#X msg 141 234 7;
#X obj 141 211 loadbang;
#X obj 268 192 counter 1;
#X obj 325 137 r glbl.tempo;
#X obj 64 361 s rfa;
#X obj 64 318 line;
#X obj 64 268 gate 1;
#X obj 134 335 sel 0;
#X obj 268 242 >= 1;
#X obj 144 130 r g.i;
#X obj 144 155 spigot;
#X obj 134 354 pipe 50;
#X floatatom 84 341 5 0 0 0 - - -;
#X msg 64 296 0 1000;
#X msg 134 373 0.5 1000;
#X text 57 41 //Collect note count against specified tempo. If $f1
notes are played within metro counter \, the patch will reduce reverb
feedback \, foregrounding of pitch in real-time performance.;
#X connect 0 0 20 0;
#X connect 1 0 14 3;
#X connect 2 0 9 0;
#X connect 3 0 10 0;
#X connect 4 0 6 0;
#X connect 4 0 7 1;
#X connect 5 0 9 3;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 8 0 11 0;
#X connect 8 0 22 1;
#X connect 9 0 3 0;
#X connect 10 0 18 0;
#X connect 10 0 18 1;
#X connect 11 0 14 0;
#X connect 12 0 10 1;
#X connect 13 0 12 0;
#X connect 14 0 0 0;
#X connect 15 0 11 1;
#X connect 17 0 19 0;
#X connect 17 0 16 0;
#X connect 17 0 24 0;
#X connect 18 0 25 0;
#X connect 19 0 23 0;
#X connect 20 0 4 0;
#X connect 21 0 22 0;
#X connect 22 0 2 0;
#X connect 23 0 26 0;
#X connect 25 0 17 0;
#X connect 26 0 17 0;
#X restore 34 507 pd foreground.pitch;
#X text 157 506 Number of notes per spec. tempo;
#N canvas 0 22 570 503 geometric.spaces 0;
#X text 41 23 Geometrical functions;
#X text 38 48 dividing spatial plane in to pitch spaces;
#X text 92 258 http://dmitri.tymoczko.com/ChordGeometries.html;
#X text 35 79 using pc as points in space - pc 6 \, 0 - C to F# is
centre etc.;
#X text 41 164 circular behaviour;
#X text 65 190 http://www.cs.mcgill.ca/~ethul/pub/course/comp644/project/04-02-geometry.html
;
#X text 99 125 mobius idea;
#X text 89 290 associating pitch class space points - 2d mobius strip
\, on a 2d lattice - two-dimensional space (6 \, 0) = (0 \, 0) = centre
;
#X restore 422 494 pd geometric.spaces;
#N canvas 0 22 1280 752 vectors 0;
#X text 11 76 1) how many minor seconds;
#X text 12 95 2) how many major seconds;
#X text 11 112 3) how many minor thirds;
#X text 12 129 4) how many major thirds;
#X text 12 145 5) how many perfect fourths;
#X text 12 162 6) how many tritones;
#X text 12 32 pc 0 1 2;
#X text 65 49 2 1 0 0 0 0;
#X text 11 50 vector =;
#X text 309 283 *only requires one change;
#X text 19 281 (7 - 35) - major scale - vector = 2 5 4 3 6 1;
#X text 18 263 (7 - 23) - 0 2 3 4 5 7 9 = 3 5 4 3 5 1;
#X text 19 298 (7 - 34) - melodic minor asc - vector = 2 5 4 4 4 2
;
#X text 19 245 (7 - 27) - 0 1 2 4 5 7 9 = 3 4 4 4 5 1;
#X text 20 322 12 note tonality;
#X text 20 223 Allen Forte - Atonal Music | Interval Vector Diagram
;
#X restore 422 550 pd vectors;
#X text 492 550 Atonal Vectors;
#X text 30 573 //Euclidean Distance Formula;
#X text 118 358 Simple tonal quantification (pitch/timbre);
#X text 513 578 Utilise permutations of number sets with pattering
resources;
#N canvas 261 195 517 359 embedding 0;
#X obj 33 84 r \$0-pc;
#X floatatom 33 104 5 0 0 0 - - -;
#X floatatom 33 202 5 0 0 0 - - -;
#X floatatom 146 201 5 0 0 0 - - -;
#X floatatom 259 203 5 0 0 0 - - -;
#X floatatom 372 204 5 0 0 0 - - -;
#X text 160 201 triadic;
#X text 271 202 diatonic;
#X text 382 203 chromatic;
#X text 47 202 8ve;
#X obj 33 124 expr if($f1 == 0 \, 1 \, 0) \; if($f1 == 4 | $f1 == 7
\, 2 \, 0) \; if($f1 == 2 | $f1 == 5 | $f1 == 9 | $f1 == 11 \, 3 \,
0) \; if($f1 == 1 | $f1 == 3 | $f1 == 6 | $f1 == 8 | $f1 == 10 \, 4
\, 0);
#X obj 33 224 - 1;
#X obj 146 224 - 1;
#X obj 259 224 - 1;
#X obj 372 224 - 1;
#X text 89 83 (Lerdahl 2001 \, pp. 161 - 162).;
#X obj 33 241 s mt.v;
#X text 32 261 Send current melodic tension value;
#X text 27 31 Melodic Tension (8ve == 0 \, Triadic == 1 \, Diatonic
== 2 \, Chromatic == 3);
#X connect 0 0 1 0;
#X connect 1 0 10 0;
#X connect 2 0 11 0;
#X connect 3 0 12 0;
#X connect 4 0 13 0;
#X connect 5 0 14 0;
#X connect 10 0 2 0;
#X connect 10 1 3 0;
#X connect 10 2 4 0;
#X connect 10 3 5 0;
#X connect 11 0 16 0;
#X connect 12 0 16 0;
#X connect 13 0 16 0;
#X connect 14 0 16 0;
#X restore 35 360 pd embedding;
#X text 34 427 //Basic Algorithms;
#X text 523 524 Examining common tones in simultaneous harmonic structures
;
#N canvas 0 22 397 274 guitar.monitor 0;
#X obj 285 -28 r gpt.1;
#X obj 158 -28 r gpt.2;
#X obj 50 -28 r gpt.3;
#X obj 232 -151 r gpt.4;
#X obj 137 -151 r gpt.5;
#X floatatom 285 -8 5 0 0 0 - - -;
#X floatatom 158 -7 5 0 0 0 - - -;
#X floatatom 50 -8 5 0 0 0 - - -;
#X floatatom 232 -130 5 0 0 0 - - -;
#X floatatom 137 -130 5 0 0 0 - - -;
#X floatatom 48 -132 5 0 0 0 - - -;
#X obj 285 11 - 64;
#X obj 158 12 - 59;
#X obj 50 11 - 55;
#X obj 232 -111 - 50;
#X obj 137 -110 - 45;
#X obj 48 -111 - 40;
#X obj 48 -86 spigot;
#X obj 48 -151 r gpt.6;
#X obj 48 -62 s gis6;
#X obj 137 -87 spigot;
#X obj 137 -63 s gis5;
#X obj 170 -108 r ptf.5;
#X obj 81 -107 r ptf.6;
#X obj 232 -86 spigot;
#X obj 265 -107 r ptf.4;
#X obj 232 -62 s gis4;
#X obj 50 33 spigot;
#X obj 83 12 r ptf.3;
#X obj 50 57 s gis3;
#X obj 158 33 spigot;
#X obj 158 57 s gis2;
#X obj 191 12 r ptf.2;
#X obj 285 31 spigot;
#X obj 285 55 s gis1;
#X obj 318 10 r ptf.1;
#X connect 0 0 5 0;
#X connect 1 0 6 0;
#X connect 2 0 7 0;
#X connect 3 0 8 0;
#X connect 4 0 9 0;
#X connect 5 0 11 0;
#X connect 6 0 12 0;
#X connect 7 0 13 0;
#X connect 8 0 14 0;
#X connect 9 0 15 0;
#X connect 10 0 16 0;
#X connect 11 0 33 0;
#X connect 12 0 30 0;
#X connect 13 0 27 0;
#X connect 14 0 24 0;
#X connect 15 0 20 0;
#X connect 16 0 17 0;
#X connect 17 0 19 0;
#X connect 18 0 10 0;
#X connect 20 0 21 0;
#X connect 22 0 20 1;
#X connect 23 0 17 1;
#X connect 24 0 26 0;
#X connect 25 0 24 1;
#X connect 27 0 29 0;
#X connect 28 0 27 1;
#X connect 30 0 31 0;
#X connect 32 0 30 1;
#X connect 33 0 34 0;
#X connect 35 0 33 1;
#X restore 422 604 pd guitar.monitor;
#X text 131 -16 coll storage;
#X text 547 489 Further exploitation of cognitive equidistance \, fixed
pitch class points in physical space;
#X text 147 317 (Krumhansl \, 1990 \; Lerdahl \, 2001);
#N canvas 0 22 1280 752 tone.proximity 0;
#X text 522 118 more info: http://www.youtube.com/watch?v=TD8j0-4heb0
;
#X text 523 77 x1 ($f1) y1 ($f2) (grid/fuducial 1) + x2 ($f3) y2 ($f4)
(grid/fuducial 2);
#X obj 137 161 r azi.1;
#X obj 137 178 / 360;
#X obj 75 182 / 10;
#X obj 273 175 / 360;
#X obj 209 186 / 10;
#X obj 273 158 r azi.2;
#X obj 75 165 r dist.1;
#X obj 209 169 r dist.2;
#X text 118 114 greater the value \, the further they are apart;
#X floatatom 75 204 5 0 0 0 - - -;
#X obj 75 251 poltocar;
#X obj 209 251 poltocar;
#X obj 137 198 * 6.283;
#X obj 273 195 * 6.283;
#X floatatom 137 218 5 0 0 0 - - -;
#X floatatom 273 214 5 0 0 0 - - -;
#X floatatom 209 207 5 0 0 0 - - -;
#X obj 93 234 t b f;
#X obj 273 234 t b f;
#X text 67 26 //Calculating euclidean distance (2D) between each tone
in xy space;
#X text 65 101 Condition = (if the distance is greater than 0.5 \,
output 1 \, else 0);
#X text 521 25 Ambisonic data needs to be convertedfrom polar to cartesian
in order to use euclidean formula;
#X text 521 56 e.g. azi needs to be converted to 2pi i.e 360 (1) =
6.283?;
#X obj 512 178 / 360;
#X obj 450 182 / 10;
#X obj 648 175 / 360;
#X obj 584 186 / 10;
#X floatatom 450 204 5 0 0 0 - - -;
#X obj 450 251 poltocar;
#X obj 584 251 poltocar;
#X obj 512 198 * 6.283;
#X obj 648 195 * 6.283;
#X floatatom 512 218 5 0 0 0 - - -;
#X floatatom 648 214 5 0 0 0 - - -;
#X floatatom 584 207 5 0 0 0 - - -;
#X obj 468 234 t b f;
#X obj 648 234 t b f;
#X obj 584 169 r dist.3;
#X obj 648 158 r azi.3;
#X obj 890 176 / 360;
#X obj 828 180 / 10;
#X obj 1026 173 / 360;
#X obj 962 184 / 10;
#X floatatom 828 202 5 0 0 0 - - -;
#X obj 828 249 poltocar;
#X obj 962 249 poltocar;
#X obj 890 196 * 6.283;
#X obj 1026 193 * 6.283;
#X floatatom 890 216 5 0 0 0 - - -;
#X floatatom 1026 212 5 0 0 0 - - -;
#X floatatom 962 205 5 0 0 0 - - -;
#X obj 846 232 t b f;
#X obj 1026 232 t b f;
#X obj 962 167 r dist.4;
#X obj 1026 156 r azi.4;
#X obj 141 467 / 360;
#X obj 79 471 / 10;
#X obj 277 464 / 360;
#X obj 213 475 / 10;
#X floatatom 79 493 5 0 0 0 - - -;
#X obj 79 540 poltocar;
#X obj 213 540 poltocar;
#X obj 141 487 * 6.283;
#X obj 277 484 * 6.283;
#X floatatom 141 507 5 0 0 0 - - -;
#X floatatom 277 503 5 0 0 0 - - -;
#X floatatom 213 496 5 0 0 0 - - -;
#X obj 97 523 t b f;
#X obj 277 523 t b f;
#X obj 516 467 / 360;
#X obj 454 471 / 10;
#X obj 652 464 / 360;
#X obj 588 475 / 10;
#X floatatom 454 493 5 0 0 0 - - -;
#X obj 454 540 poltocar;
#X obj 588 540 poltocar;
#X obj 516 487 * 6.283;
#X obj 652 484 * 6.283;
#X floatatom 516 507 5 0 0 0 - - -;
#X floatatom 652 503 5 0 0 0 - - -;
#X floatatom 588 496 5 0 0 0 - - -;
#X obj 472 523 t b f;
#X obj 652 523 t b f;
#X obj 213 458 r dist.5;
#X obj 277 447 r azi.5;
#X obj 588 458 r dist.6;
#X obj 652 443 r azi.6;
#X obj 450 165 r dist.2;
#X obj 512 161 r azi.2;
#X obj 828 163 r dist.3;
#X obj 890 159 r azi.3;
#X obj 79 454 r dist.4;
#X obj 141 450 r azi.4;
#X obj 454 454 r dist.5;
#X obj 516 450 r azi.5;
#X text 67 68 Eucilidian distance forumla = squared root of (x1 - x2)
^ 2 + (y1 - y2) ^ 2;
#N canvas 520 57 727 281 grain.scrub 0;
#X obj 130 75 r nc.1;
#X obj 130 120 sel 1;
#X floatatom 130 95 5 0 0 0 - - -;
#X obj 127 192 s gs.1;
#X obj 197 131 sel 0;
#X obj 35 137 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 390 92 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
0.7;
#X floatatom 516 109 5 0 0 0 - - -;
#X obj 462 142 sel 0 1 2 3;
#X msg 493 166 0.3;
#X msg 557 162 1;
#X obj 462 119 % 5;
#X msg 427 166 0;
#X msg 526 164 0.7;
#X obj 463 82 metro 200;
#X obj 425 105 cup;
#X obj 127 170 line;
#X msg 126 152 0.5 500;
#X msg 197 153 0 500;
#X obj 35 152 s lr.1;
#X connect 0 0 2 0;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 2 0 4 0;
#X connect 4 0 18 0;
#X connect 5 0 17 0;
#X connect 5 0 19 0;
#X connect 6 0 14 0;
#X connect 8 0 12 0;
#X connect 8 1 9 0;
#X connect 8 2 13 0;
#X connect 8 4 10 0;
#X connect 11 0 8 0;
#X connect 11 0 7 0;
#X connect 14 0 15 0;
#X connect 15 0 11 0;
#X connect 16 0 3 0;
#X connect 17 0 16 0;
#X connect 18 0 16 1;
#X restore 828 437 pd grain.scrub;
#X text 826 466 Rhythmic (demarkations) patterning resources;
#X text 825 485 User Interface Functions - what do you want it to do?
Record on collision \, set distance \, scrub through two points \,
select grain;
#X floatatom 75 368 5 0 0 0 - - -;
#X floatatom 75 270 5 0 0 0 - - -;
#X floatatom 120 270 5 0 0 0 - - -;
#X floatatom 209 270 5 0 0 0 - - -;
#X floatatom 254 270 5 0 0 0 - - -;
#X obj 170 286 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 450 370 5 0 0 0 - - -;
#X floatatom 450 270 5 0 0 0 - - -;
#X floatatom 495 270 5 0 0 0 - - -;
#X floatatom 584 270 5 0 0 0 - - -;
#X floatatom 629 270 5 0 0 0 - - -;
#X obj 545 286 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 828 369 5 0 0 0 - - -;
#X floatatom 828 268 5 0 0 0 - - -;
#X floatatom 873 268 5 0 0 0 - - -;
#X floatatom 962 268 5 0 0 0 - - -;
#X floatatom 1007 268 5 0 0 0 - - -;
#X obj 923 284 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 828 331 expr if(sqrt(pow(abs($f1 - $f3) \, 2) + pow(abs($f2
- $f4) \, 2)) < 0.2 \, 1 \, 0);
#X obj 450 333 expr if(sqrt(pow(abs($f1 - $f3) \, 2) + pow(abs($f2
- $f4) \, 2)) < 0.2 \, 1 \, 0);
#X obj 74 408 s nc.1;
#X obj 450 408 s nc.2;
#X obj 828 408 s nc.3;
#X obj 74 388 spigot;
#X obj 450 388 spigot;
#X obj 828 388 spigot;
#X obj 887 373 tgl 15 0 empty ms.sw empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 75 333 expr if(sqrt(pow(abs($f1 - $f3) \, 2) + pow(abs($f2 -
$f4) \, 2)) < 0.01 \, 1 \, 0);
#X obj 80 624 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 79 658 5 0 0 0 - - -;
#X floatatom 79 560 5 0 0 0 - - -;
#X floatatom 124 560 5 0 0 0 - - -;
#X floatatom 213 560 5 0 0 0 - - -;
#X floatatom 258 560 5 0 0 0 - - -;
#X obj 174 576 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 454 658 5 0 0 0 - - -;
#X floatatom 454 560 5 0 0 0 - - -;
#X floatatom 499 560 5 0 0 0 - - -;
#X floatatom 588 560 5 0 0 0 - - -;
#X floatatom 633 560 5 0 0 0 - - -;
#X obj 549 576 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 79 623 expr if(sqrt(pow(abs($f1 - $f3) \, 2) + pow(abs($f2 -
$f4) \, 2)) < 0.2 \, 1 \, 0);
#X obj 454 623 expr if(sqrt(pow(abs($f1 - $f3) \, 2) + pow(abs($f2
- $f4) \, 2)) < 0.2 \, 1 \, 0);
#X obj 79 700 s nc.4;
#X obj 454 700 s nc.5;
#X obj 79 678 spigot;
#X obj 454 678 spigot;
#X connect 2 0 3 0;
#X connect 3 0 14 0;
#X connect 4 0 11 0;
#X connect 5 0 15 0;
#X connect 6 0 18 0;
#X connect 7 0 5 0;
#X connect 8 0 4 0;
#X connect 9 0 6 0;
#X connect 11 0 12 0;
#X connect 12 0 102 0;
#X connect 12 1 103 0;
#X connect 13 0 104 0;
#X connect 13 1 105 0;
#X connect 14 0 16 0;
#X connect 15 0 17 0;
#X connect 16 0 19 0;
#X connect 17 0 20 0;
#X connect 18 0 13 0;
#X connect 19 0 11 0;
#X connect 19 1 12 1;
#X connect 20 0 18 0;
#X connect 20 1 13 1;
#X connect 25 0 32 0;
#X connect 26 0 29 0;
#X connect 27 0 33 0;
#X connect 28 0 36 0;
#X connect 29 0 30 0;
#X connect 30 0 108 0;
#X connect 30 1 109 0;
#X connect 31 0 110 0;
#X connect 31 1 111 0;
#X connect 32 0 34 0;
#X connect 33 0 35 0;
#X connect 34 0 37 0;
#X connect 35 0 38 0;
#X connect 36 0 31 0;
#X connect 37 0 29 0;
#X connect 37 1 30 1;
#X connect 38 0 36 0;
#X connect 38 1 31 1;
#X connect 39 0 28 0;
#X connect 40 0 27 0;
#X connect 41 0 48 0;
#X connect 42 0 45 0;
#X connect 43 0 49 0;
#X connect 44 0 52 0;
#X connect 45 0 46 0;
#X connect 46 0 114 0;
#X connect 46 1 115 0;
#X connect 47 0 116 0;
#X connect 47 1 117 0;
#X connect 48 0 50 0;
#X connect 49 0 51 0;
#X connect 50 0 53 0;
#X connect 51 0 54 0;
#X connect 52 0 47 0;
#X connect 53 0 45 0;
#X connect 53 1 46 1;
#X connect 54 0 52 0;
#X connect 54 1 47 1;
#X connect 55 0 44 0;
#X connect 56 0 43 0;
#X connect 57 0 64 0;
#X connect 58 0 61 0;
#X connect 59 0 65 0;
#X connect 60 0 68 0;
#X connect 61 0 62 0;
#X connect 62 0 131 0;
#X connect 62 1 132 0;
#X connect 63 0 133 0;
#X connect 63 1 134 0;
#X connect 64 0 66 0;
#X connect 65 0 67 0;
#X connect 66 0 69 0;
#X connect 67 0 70 0;
#X connect 68 0 63 0;
#X connect 69 0 61 0;
#X connect 69 1 62 1;
#X connect 70 0 68 0;
#X connect 70 1 63 1;
#X connect 71 0 78 0;
#X connect 72 0 75 0;
#X connect 73 0 79 0;
#X connect 74 0 82 0;
#X connect 75 0 76 0;
#X connect 76 0 137 0;
#X connect 76 1 138 0;
#X connect 77 0 139 0;
#X connect 77 1 140 0;
#X connect 78 0 80 0;
#X connect 79 0 81 0;
#X connect 80 0 83 0;
#X connect 81 0 84 0;
#X connect 82 0 77 0;
#X connect 83 0 75 0;
#X connect 83 1 76 1;
#X connect 84 0 82 0;
#X connect 84 1 77 1;
#X connect 85 0 60 0;
#X connect 86 0 59 0;
#X connect 87 0 74 0;
#X connect 88 0 73 0;
#X connect 89 0 26 0;
#X connect 90 0 25 0;
#X connect 91 0 42 0;
#X connect 92 0 41 0;
#X connect 93 0 58 0;
#X connect 94 0 57 0;
#X connect 95 0 72 0;
#X connect 96 0 71 0;
#X connect 101 0 124 0;
#X connect 102 0 106 0;
#X connect 102 0 128 1;
#X connect 103 0 106 0;
#X connect 103 0 128 0;
#X connect 104 0 106 0;
#X connect 104 0 128 3;
#X connect 105 0 106 0;
#X connect 105 0 128 2;
#X connect 106 0 128 0;
#X connect 107 0 125 0;
#X connect 108 0 112 0;
#X connect 108 0 120 1;
#X connect 109 0 112 0;
#X connect 109 0 120 0;
#X connect 110 0 112 0;
#X connect 110 0 120 3;
#X connect 111 0 112 0;
#X connect 111 0 120 2;
#X connect 112 0 120 0;
#X connect 113 0 126 0;
#X connect 114 0 118 0;
#X connect 114 0 119 1;
#X connect 115 0 118 0;
#X connect 115 0 119 0;
#X connect 116 0 118 0;
#X connect 116 0 119 3;
#X connect 117 0 118 0;
#X connect 117 0 119 2;
#X connect 118 0 119 0;
#X connect 119 0 113 0;
#X connect 120 0 107 0;
#X connect 124 0 121 0;
#X connect 125 0 122 0;
#X connect 126 0 123 0;
#X connect 127 0 124 1;
#X connect 128 0 101 0;
#X connect 130 0 146 0;
#X connect 131 0 135 0;
#X connect 131 0 142 1;
#X connect 132 0 135 0;
#X connect 132 0 142 0;
#X connect 133 0 135 0;
#X connect 133 0 142 3;
#X connect 134 0 135 0;
#X connect 134 0 142 2;
#X connect 135 0 142 0;
#X connect 136 0 147 0;
#X connect 137 0 141 0;
#X connect 137 0 143 1;
#X connect 138 0 141 0;
#X connect 138 0 143 0;
#X connect 139 0 141 0;
#X connect 139 0 143 3;
#X connect 140 0 141 0;
#X connect 140 0 143 2;
#X connect 141 0 143 0;
#X connect 142 0 130 0;
#X connect 143 0 136 0;
#X connect 146 0 144 0;
#X connect 147 0 145 0;
#X restore 34 598 pd tone.proximity;
#N canvas 140 24 304 268 coll.recall 0;
#N canvas 0 22 465 381 note.recall 0;
#X obj 52 -55 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 140 -57 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 232 -59 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 320 -58 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 55 227 unpack 0 0;
#X floatatom 55 249 5 0 0 0 - - -;
#X obj 143 227 unpack 0 0;
#X floatatom 143 249 5 0 0 0 - - -;
#X msg 55 183 5;
#X msg 143 183 6;
#X obj 55 269 s \$0-note5;
#X obj 143 269 s \$0-note6;
#X obj 233 226 unpack 0 0;
#X floatatom 233 248 5 0 0 0 - - -;
#X obj 233 268 s \$0-note7;
#X msg 233 182 7;
#X obj 233 204 coll global;
#C restore;
#X obj 143 205 coll global;
#C restore;
#X obj 55 205 coll global;
#C restore;
#X obj 342 132 r counter;
#X floatatom 342 153 5 0 0 0 - - -;
#X obj 55 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 143 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 233 143 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 55 162 del 10;
#X obj 143 163 del 10;
#X obj 233 161 del 10;
#X msg 52 -15 1;
#X floatatom 52 51 5 0 0 0 - - -;
#X obj 52 71 s \$0-note1;
#X obj 140 27 unpack 0 0;
#X floatatom 140 49 5 0 0 0 - - -;
#X msg 140 -17 2;
#X obj 140 69 s \$0-note2;
#X obj 232 25 unpack 0 0;
#X floatatom 232 47 5 0 0 0 - - -;
#X obj 320 23 unpack 0 0;
#X floatatom 320 45 5 0 0 0 - - -;
#X msg 232 -19 3;
#X msg 320 -21 4;
#X obj 232 67 s \$0-note3;
#X obj 320 65 s \$0-note4;
#X obj 52 29 unpack 0 0;
#X obj 52 7 coll global;
#C restore;
#X obj 140 5 coll global;
#C restore;
#X obj 232 3 coll global;
#C restore;
#X obj 320 1 coll global;
#C restore;
#X obj 52 -37 del 10;
#X obj 140 -39 del 10;
#X obj 232 -40 del 10;
#X obj 320 -41 del 10;
#X obj 52 -76 r \$0-p;
#X obj 140 -76 r \$0-p;
#X obj 232 -78 r \$0-p;
#X obj 320 -78 r \$0-p;
#X obj 55 124 r \$0-p;
#X obj 143 124 r \$0-p;
#X obj 233 123 r \$0-p;
#X obj 342 172 sel 7;
#X connect 0 0 47 0;
#X connect 1 0 48 0;
#X connect 2 0 49 0;
#X connect 3 0 50 0;
#X connect 4 0 5 0;
#X connect 5 0 10 0;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 8 0 18 0;
#X connect 9 0 17 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 15 0 16 0;
#X connect 16 0 12 0;
#X connect 17 0 6 0;
#X connect 18 0 4 0;
#X connect 19 0 20 0;
#X connect 20 0 58 0;
#X connect 21 0 24 0;
#X connect 22 0 25 0;
#X connect 23 0 26 0;
#X connect 24 0 8 0;
#X connect 25 0 9 0;
#X connect 26 0 15 0;
#X connect 27 0 43 0;
#X connect 28 0 29 0;
#X connect 30 0 31 0;
#X connect 31 0 33 0;
#X connect 32 0 44 0;
#X connect 34 0 35 0;
#X connect 35 0 40 0;
#X connect 36 0 37 0;
#X connect 37 0 41 0;
#X connect 38 0 45 0;
#X connect 39 0 46 0;
#X connect 42 0 28 0;
#X connect 43 0 42 0;
#X connect 44 0 30 0;
#X connect 45 0 34 0;
#X connect 46 0 36 0;
#X connect 47 0 27 0;
#X connect 48 0 32 0;
#X connect 49 0 38 0;
#X connect 50 0 39 0;
#X connect 51 0 0 0;
#X connect 52 0 1 0;
#X connect 53 0 2 0;
#X connect 54 0 3 0;
#X connect 55 0 21 0;
#X connect 56 0 22 0;
#X connect 57 0 23 0;
#X restore 25 45 pd note.recall;
#N canvas 344 68 936 558 bs.recall 0;
#X msg 18 61 1;
#X msg 168 62 2;
#X msg 395 60 3;
#X msg 603 60 4;
#X msg 19 234 5;
#X msg 282 235 6;
#X msg 547 236 7;
#X floatatom 123 124 5 0 0 0 - - -;
#X floatatom 273 127 5 0 0 0 - - -;
#X floatatom 500 124 5 0 0 0 - - -;
#X floatatom 708 123 5 0 0 0 - - -;
#X floatatom 387 300 5 0 0 0 - - -;
#X floatatom 652 300 5 0 0 0 - - -;
#X obj 123 144 s \$0-bs1;
#X obj 273 146 s \$0-bs2;
#X obj 387 318 s \$0-bs6;
#X obj 500 144 s \$0-bs3;
#X obj 652 319 s \$0-bs7;
#X obj 708 143 s \$0-bs4;
#X obj 19 202 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 282 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 547 204 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 18 15 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 168 16 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 395 14 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 603 16 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 124 298 5 0 0 0 - - -;
#X obj 124 318 s \$0-bs5;
#X obj 19 278 unpack 0 0 0 0 0 0;
#X obj 18 105 unpack 0 0 0 0 0 0;
#X obj 168 106 unpack 0 0 0 0 0 0;
#X obj 282 279 unpack 0 0 0 0 0 0;
#X obj 547 280 unpack 0 0 0 0 0 0;
#X obj 395 104 unpack 0 0 0 0 0 0;
#X obj 603 104 unpack 0 0 0 0 0 0;
#X obj 18 83 coll global;
#C restore;
#X obj 168 84 coll global;
#C restore;
#X obj 395 82 coll global;
#C restore;
#X obj 603 82 coll global;
#C restore;
#X obj 547 258 coll global;
#C restore;
#X obj 282 257 coll global;
#C restore;
#X obj 19 256 coll global;
#C restore;
#X obj 18 -6 r \$0-p;
#X obj 168 -3 r \$0-p;
#X obj 395 -5 r \$0-p;
#X obj 604 -3 r \$0-p;
#X obj 19 182 r \$0-p;
#X obj 282 183 r \$0-p;
#X obj 547 184 r \$0-p;
#X obj 21 353 r counter;
#X floatatom 21 375 5 0 0 0 - - -;
#X obj 50 217 del 10;
#X obj 18 41 del 10;
#X obj 579 219 del 10;
#X obj 310 218 del 10;
#X obj 168 42 del 10;
#X obj 395 40 del 10;
#X obj 603 41 del 10;
#X connect 0 0 35 0;
#X connect 1 0 36 0;
#X connect 2 0 37 0;
#X connect 3 0 38 0;
#X connect 4 0 41 0;
#X connect 5 0 40 0;
#X connect 6 0 39 0;
#X connect 7 0 13 0;
#X connect 8 0 14 0;
#X connect 9 0 16 0;
#X connect 10 0 18 0;
#X connect 11 0 15 0;
#X connect 12 0 17 0;
#X connect 19 0 51 0;
#X connect 20 0 54 0;
#X connect 21 0 53 0;
#X connect 22 0 52 0;
#X connect 23 0 55 0;
#X connect 24 0 56 0;
#X connect 25 0 57 0;
#X connect 26 0 27 0;
#X connect 28 5 26 0;
#X connect 29 5 7 0;
#X connect 30 5 8 0;
#X connect 31 5 11 0;
#X connect 32 5 12 0;
#X connect 33 5 9 0;
#X connect 34 5 10 0;
#X connect 35 0 29 0;
#X connect 36 0 30 0;
#X connect 37 0 33 0;
#X connect 38 0 34 0;
#X connect 39 0 32 0;
#X connect 40 0 31 0;
#X connect 41 0 28 0;
#X connect 42 0 22 0;
#X connect 43 0 23 0;
#X connect 44 0 24 0;
#X connect 45 0 25 0;
#X connect 46 0 19 0;
#X connect 47 0 20 0;
#X connect 48 0 21 0;
#X connect 49 0 50 0;
#X connect 51 0 4 0;
#X connect 52 0 0 0;
#X connect 53 0 6 0;
#X connect 54 0 5 0;
#X connect 55 0 1 0;
#X connect 56 0 2 0;
#X connect 57 0 3 0;
#X restore 24 67 pd bs.recall;
#N canvas 344 68 936 558 pcd.recall 0;
#X obj 18 32 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 168 33 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 327 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 503 28 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 18 241 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 210 241 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 378 236 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 18 286 5;
#X msg 210 281 6;
#X msg 378 274 7;
#X msg 18 75 1;
#X msg 168 76 2;
#X msg 327 69 3;
#X msg 503 69 4;
#X obj 18 119 unpack 0 0 0 0 0 0;
#X obj 168 120 unpack 0 0 0 0 0 0;
#X obj 327 113 unpack 0 0 0 0 0 0;
#X obj 503 113 unpack 0 0 0 0 0 0;
#X obj 378 318 unpack 0 0 0 0 0 0;
#X obj 210 325 unpack 0 0 0 0 0 0;
#X obj 18 330 unpack 0 0 0 0 0 0;
#X floatatom 230 142 5 0 0 0 - - -;
#X floatatom 390 137 5 0 0 0 - - -;
#X floatatom 566 138 5 0 0 0 - - -;
#X obj 230 162 s \$0-pcd2;
#X obj 390 155 s \$0-pcd3;
#X obj 566 157 s \$0-pcd4;
#X floatatom 81 351 5 0 0 0 - - -;
#X floatatom 273 346 5 0 0 0 - - -;
#X obj 441 358 s \$0-pcd7;
#X obj 81 371 s \$0-pcd5;
#X obj 273 364 s \$0-pcd6;
#X floatatom 441 338 5 0 0 0 - - -;
#X obj 18 97 coll global;
#C restore;
#X obj 18 308 coll global;
#C restore;
#X obj 168 98 coll global;
#C restore;
#X obj 210 303 coll global;
#C restore;
#X obj 327 91 coll global;
#C restore;
#X obj 378 298 coll global;
#C restore;
#X obj 503 91 coll global;
#C restore;
#X floatatom 81 142 5 0 0 0 - - -;
#X obj 81 162 s \$0-pcd1;
#X obj 18 53 del 10;
#X obj 18 11 r \$0-p;
#X obj 18 221 r \$0-p;
#X obj 18 264 del 10;
#X obj 168 14 r \$0-p;
#X obj 168 53 del 10;
#X obj 327 7 r \$0-p;
#X obj 327 47 del 10;
#X obj 504 9 r \$0-p;
#X obj 210 221 r \$0-p;
#X obj 378 215 r \$0-p;
#X obj 63 442 r counter;
#X floatatom 63 466 5 0 0 0 - - -;
#X obj 210 260 del 10;
#X obj 378 254 del 10;
#X obj 503 47 del 10;
#X connect 0 0 42 0;
#X connect 1 0 47 0;
#X connect 2 0 49 0;
#X connect 3 0 57 0;
#X connect 4 0 45 0;
#X connect 5 0 55 0;
#X connect 6 0 56 0;
#X connect 7 0 34 0;
#X connect 8 0 36 0;
#X connect 9 0 38 0;
#X connect 10 0 33 0;
#X connect 11 0 35 0;
#X connect 12 0 37 0;
#X connect 13 0 39 0;
#X connect 14 3 40 0;
#X connect 15 3 21 0;
#X connect 16 3 22 0;
#X connect 17 3 23 0;
#X connect 18 3 32 0;
#X connect 19 3 28 0;
#X connect 20 3 27 0;
#X connect 21 0 24 0;
#X connect 22 0 25 0;
#X connect 23 0 26 0;
#X connect 27 0 30 0;
#X connect 28 0 31 0;
#X connect 32 0 29 0;
#X connect 33 0 14 0;
#X connect 34 0 20 0;
#X connect 35 0 15 0;
#X connect 36 0 19 0;
#X connect 37 0 16 0;
#X connect 38 0 18 0;
#X connect 39 0 17 0;
#X connect 40 0 41 0;
#X connect 42 0 10 0;
#X connect 43 0 0 0;
#X connect 44 0 4 0;
#X connect 45 0 7 0;
#X connect 46 0 1 0;
#X connect 47 0 11 0;
#X connect 48 0 2 0;
#X connect 49 0 12 0;
#X connect 50 0 3 0;
#X connect 51 0 5 0;
#X connect 52 0 6 0;
#X connect 53 0 54 0;
#X connect 55 0 8 0;
#X connect 56 0 9 0;
#X connect 57 0 13 0;
#X restore 24 89 pd pcd.recall;
#X text 23 17 [coll data recall for analysis];
#X text 121 45 MIDI Note Number;
#X text 106 67 Basic Space;
#X text 111 89 Pitch Class Distance;
#N canvas 344 68 936 558 s.recall 0;
#X obj 18 32 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 168 33 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 327 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 503 28 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 18 241 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 210 241 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 378 236 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 18 286 5;
#X msg 210 281 6;
#X msg 378 274 7;
#X msg 18 75 1;
#X msg 168 76 2;
#X msg 327 69 3;
#X msg 503 69 4;
#X obj 18 97 coll global;
#C restore;
#X obj 18 308 coll global;
#C restore;
#X obj 168 98 coll global;
#C restore;
#X obj 210 303 coll global;
#C restore;
#X obj 327 91 coll global;
#C restore;
#X obj 378 298 coll global;
#C restore;
#X obj 503 91 coll global;
#C restore;
#X obj 18 119 unpack 0 0 0 0 0 0 0;
#X floatatom 123 142 5 0 0 0 - - -;
#X obj 123 161 s \$0-s1;
#X obj 168 120 unpack 0 0 0 0 0 0 0;
#X floatatom 273 142 5 0 0 0 - - -;
#X obj 273 161 s \$0-s2;
#X obj 327 113 unpack 0 0 0 0 0 0 0;
#X floatatom 432 139 5 0 0 0 - - -;
#X obj 432 158 s \$0-s3;
#X floatatom 608 138 5 0 0 0 - - -;
#X obj 608 157 s \$0-s4;
#X obj 503 113 unpack 0 0 0 0 0 0 0;
#X obj 18 330 unpack 0 0 0 0 0 0 0;
#X floatatom 123 353 5 0 0 0 - - -;
#X obj 123 374 s \$0-s5;
#X obj 210 325 unpack 0 0 0 0 0 0 0;
#X floatatom 315 344 5 0 0 0 - - -;
#X obj 315 367 s \$0-s6;
#X obj 378 318 unpack 0 0 0 0 0 0 0;
#X obj 483 358 s \$0-s7;
#X floatatom 483 339 5 0 0 0 - - -;
#X obj 18 11 r \$0-p;
#X obj 18 53 del 10;
#X obj 168 14 r \$0-p;
#X obj 168 53 del 10;
#X obj 18 221 r \$0-p;
#X obj 18 264 del 10;
#X obj 210 221 r \$0-p;
#X obj 210 260 del 10;
#X obj 327 7 r \$0-p;
#X obj 327 47 del 10;
#X obj 504 9 r \$0-p;
#X obj 503 47 del 10;
#X obj 378 254 del 10;
#X obj 378 215 r \$0-p;
#X obj 27 412 r counter;
#X floatatom 27 432 5 0 0 0 - - -;
#X connect 0 0 43 0;
#X connect 1 0 45 0;
#X connect 2 0 51 0;
#X connect 3 0 53 0;
#X connect 4 0 47 0;
#X connect 5 0 49 0;
#X connect 6 0 54 0;
#X connect 7 0 15 0;
#X connect 8 0 17 0;
#X connect 9 0 19 0;
#X connect 10 0 14 0;
#X connect 11 0 16 0;
#X connect 12 0 18 0;
#X connect 13 0 20 0;
#X connect 14 0 21 0;
#X connect 15 0 33 0;
#X connect 16 0 24 0;
#X connect 17 0 36 0;
#X connect 18 0 27 0;
#X connect 19 0 39 0;
#X connect 20 0 32 0;
#X connect 21 6 22 0;
#X connect 22 0 23 0;
#X connect 24 6 25 0;
#X connect 25 0 26 0;
#X connect 27 6 28 0;
#X connect 28 0 29 0;
#X connect 30 0 31 0;
#X connect 32 6 30 0;
#X connect 33 6 34 0;
#X connect 34 0 35 0;
#X connect 36 6 37 0;
#X connect 37 0 38 0;
#X connect 39 6 41 0;
#X connect 41 0 40 0;
#X connect 42 0 0 0;
#X connect 43 0 10 0;
#X connect 44 0 1 0;
#X connect 45 0 11 0;
#X connect 46 0 4 0;
#X connect 47 0 7 0;
#X connect 48 0 5 0;
#X connect 49 0 8 0;
#X connect 50 0 2 0;
#X connect 51 0 12 0;
#X connect 52 0 3 0;
#X connect 53 0 13 0;
#X connect 54 0 9 0;
#X connect 55 0 6 0;
#X connect 56 0 57 0;
#X restore 24 111 pd s.recall;
#X text 101 112 String Number;
#N canvas 489 22 473 389 pc.recall 0;
#X obj 18 14 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 112 14 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 204 12 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 297 15 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 19 205 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 114 205 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 209 204 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 18 -7 r g.i;
#X obj 112 -5 r g.i;
#X obj 204 -7 r g.i;
#X obj 297 -5 r g.i;
#X obj 19 185 r g.i;
#X obj 114 185 r g.i;
#X obj 209 184 r g.i;
#X msg 18 62 1;
#X msg 112 62 2;
#X msg 204 60 3;
#X msg 297 60 4;
#X obj 297 104 unpack 0 0 0 0;
#X obj 204 104 unpack 0 0 0 0;
#X obj 112 106 unpack 0 0 0 0;
#X obj 18 106 unpack 0 0 0 0;
#X floatatom 72 130 5 0 0 0 - - -;
#X floatatom 166 130 5 0 0 0 - - -;
#X floatatom 258 128 5 0 0 0 - - -;
#X floatatom 351 128 5 0 0 0 - - -;
#X obj 72 150 s \$0-pc1;
#X obj 166 150 s \$0-pc2;
#X obj 258 148 s \$0-pc3;
#X obj 351 148 s \$0-pc4;
#X obj 18 84 coll global;
#C restore;
#X obj 112 84 coll global;
#C restore;
#X obj 204 82 coll global;
#C restore;
#X obj 297 82 coll global;
#C restore;
#X msg 19 249 5;
#X msg 114 249 6;
#X msg 209 248 7;
#X obj 19 293 unpack 0 0 0 0;
#X obj 114 293 unpack 0 0 0 0;
#X obj 209 292 unpack 0 0 0 0;
#X floatatom 263 319 5 0 0 0 - - -;
#X obj 263 339 s \$0-pc7;
#X floatatom 168 320 5 0 0 0 - - -;
#X obj 168 340 s \$0-pc6;
#X floatatom 73 320 5 0 0 0 - - -;
#X obj 73 340 s \$0-pc5;
#X obj 209 270 coll global;
#C restore;
#X obj 114 271 coll global;
#C restore;
#X obj 19 271 coll global;
#C restore;
#X obj 19 226 del 10;
#X obj 114 226 del 10;
#X obj 209 225 del 10;
#X obj 18 37 del 10;
#X obj 112 37 del 10;
#X obj 204 37 del 10;
#X obj 297 37 del 10;
#X connect 0 0 52 0;
#X connect 1 0 53 0;
#X connect 2 0 54 0;
#X connect 3 0 55 0;
#X connect 4 0 49 0;
#X connect 5 0 50 0;
#X connect 6 0 51 0;
#X connect 7 0 0 0;
#X connect 8 0 1 0;
#X connect 9 0 2 0;
#X connect 10 0 3 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 13 0 6 0;
#X connect 14 0 30 0;
#X connect 15 0 31 0;
#X connect 16 0 32 0;
#X connect 17 0 33 0;
#X connect 18 2 25 0;
#X connect 19 2 24 0;
#X connect 20 2 23 0;
#X connect 21 2 22 0;
#X connect 22 0 26 0;
#X connect 23 0 27 0;
#X connect 24 0 28 0;
#X connect 25 0 29 0;
#X connect 30 0 21 0;
#X connect 31 0 20 0;
#X connect 32 0 19 0;
#X connect 33 0 18 0;
#X connect 34 0 48 0;
#X connect 35 0 47 0;
#X connect 36 0 46 0;
#X connect 37 2 44 0;
#X connect 38 2 42 0;
#X connect 39 2 40 0;
#X connect 40 0 41 0;
#X connect 42 0 43 0;
#X connect 44 0 45 0;
#X connect 46 0 39 0;
#X connect 47 0 38 0;
#X connect 48 0 37 0;
#X connect 49 0 34 0;
#X connect 50 0 35 0;
#X connect 51 0 36 0;
#X connect 52 0 14 0;
#X connect 53 0 15 0;
#X connect 54 0 16 0;
#X connect 55 0 17 0;
#X restore 24 133 pd pc.recall;
#X text 106 131 Pitch Class Recall;
#X text 112 179 Register Recall;
#N canvas 344 68 936 558 reg.recall 0;
#X obj 18 32 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 168 33 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 327 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 503 28 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 18 241 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 210 241 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 378 236 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 18 286 5;
#X msg 210 281 6;
#X msg 378 274 7;
#X msg 18 75 1;
#X msg 168 76 2;
#X msg 327 69 3;
#X msg 503 69 4;
#X obj 18 119 unpack 0 0 0 0 0 0;
#X obj 168 120 unpack 0 0 0 0 0 0;
#X obj 327 113 unpack 0 0 0 0 0 0;
#X obj 503 113 unpack 0 0 0 0 0 0;
#X obj 378 318 unpack 0 0 0 0 0 0;
#X obj 210 325 unpack 0 0 0 0 0 0;
#X obj 18 330 unpack 0 0 0 0 0 0;
#X obj 18 97 coll global;
#C restore;
#X obj 18 308 coll global;
#C restore;
#X obj 168 98 coll global;
#C restore;
#X obj 210 303 coll global;
#C restore;
#X obj 327 91 coll global;
#C restore;
#X obj 378 298 coll global;
#C restore;
#X obj 503 91 coll global;
#C restore;
#X obj 18 53 del 10;
#X obj 18 11 r \$0-p;
#X obj 18 221 r \$0-p;
#X obj 18 264 del 10;
#X obj 168 14 r \$0-p;
#X obj 168 53 del 10;
#X obj 327 7 r \$0-p;
#X obj 327 47 del 10;
#X obj 504 9 r \$0-p;
#X obj 210 221 r \$0-p;
#X obj 378 215 r \$0-p;
#X obj 63 442 r counter;
#X floatatom 63 466 5 0 0 0 - - -;
#X obj 210 260 del 10;
#X obj 378 254 del 10;
#X obj 503 47 del 10;
#X floatatom 123 142 5 0 0 0 - - -;
#X obj 123 162 s \$0-r1;
#X floatatom 273 142 5 0 0 0 - - -;
#X floatatom 432 134 5 0 0 0 - - -;
#X floatatom 608 135 5 0 0 0 - - -;
#X obj 273 162 s \$0-r2;
#X obj 432 152 s \$0-r3;
#X obj 608 154 s \$0-r4;
#X floatatom 123 351 5 0 0 0 - - -;
#X floatatom 315 346 5 0 0 0 - - -;
#X floatatom 483 340 5 0 0 0 - - -;
#X obj 123 371 s \$0-r5;
#X obj 315 364 s \$0-r6;
#X obj 483 360 s \$0-r7;
#X connect 0 0 28 0;
#X connect 1 0 33 0;
#X connect 2 0 35 0;
#X connect 3 0 43 0;
#X connect 4 0 31 0;
#X connect 5 0 41 0;
#X connect 6 0 42 0;
#X connect 7 0 22 0;
#X connect 8 0 24 0;
#X connect 9 0 26 0;
#X connect 10 0 21 0;
#X connect 11 0 23 0;
#X connect 12 0 25 0;
#X connect 13 0 27 0;
#X connect 14 5 44 0;
#X connect 15 5 46 0;
#X connect 16 5 47 0;
#X connect 17 5 48 0;
#X connect 18 5 54 0;
#X connect 19 5 53 0;
#X connect 20 5 52 0;
#X connect 21 0 14 0;
#X connect 22 0 20 0;
#X connect 23 0 15 0;
#X connect 24 0 19 0;
#X connect 25 0 16 0;
#X connect 26 0 18 0;
#X connect 27 0 17 0;
#X connect 28 0 10 0;
#X connect 29 0 0 0;
#X connect 30 0 4 0;
#X connect 31 0 7 0;
#X connect 32 0 1 0;
#X connect 33 0 11 0;
#X connect 34 0 2 0;
#X connect 35 0 12 0;
#X connect 36 0 3 0;
#X connect 37 0 5 0;
#X connect 38 0 6 0;
#X connect 39 0 40 0;
#X connect 41 0 8 0;
#X connect 42 0 9 0;
#X connect 43 0 13 0;
#X connect 44 0 45 0;
#X connect 46 0 49 0;
#X connect 47 0 50 0;
#X connect 48 0 51 0;
#X connect 52 0 55 0;
#X connect 53 0 56 0;
#X connect 54 0 57 0;
#X restore 24 180 pd reg.recall;
#N canvas 489 22 546 416 ic.recall 0;
#X obj 18 14 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 124 16 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 231 7 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 337 9 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 19 205 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 133 204 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 254 204 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 18 -7 r g.i;
#X obj 124 -8 r g.i;
#X obj 231 -12 r g.i;
#X obj 337 -11 r g.i;
#X obj 19 185 r g.i;
#X obj 133 184 r g.i;
#X obj 254 183 r g.i;
#X msg 18 62 1;
#X msg 124 59 2;
#X msg 231 55 3;
#X msg 337 54 4;
#X obj 18 84 coll global;
#C restore;
#X obj 124 81 coll global;
#C restore;
#X obj 231 77 coll global;
#C restore;
#X obj 337 76 coll global;
#C restore;
#X msg 19 249 5;
#X msg 133 248 6;
#X msg 254 247 7;
#X obj 254 269 coll global;
#C restore;
#X obj 133 270 coll global;
#C restore;
#X obj 19 271 coll global;
#C restore;
#X obj 19 226 del 10;
#X obj 133 225 del 10;
#X obj 254 224 del 10;
#X obj 18 37 del 10;
#X obj 124 34 del 10;
#X obj 231 32 del 10;
#X obj 337 31 del 10;
#X text 318 193 banged at every note attack;
#X floatatom 111 130 5 0 0 0 - - -;
#X floatatom 205 130 5 0 0 0 - - -;
#X floatatom 297 128 5 0 0 0 - - -;
#X floatatom 390 128 5 0 0 0 - - -;
#X obj 111 150 s \$0-ic1;
#X obj 205 150 s \$0-ic2;
#X obj 297 148 s \$0-ic3;
#X obj 390 148 s \$0-ic4;
#X obj 18 106 unpack 0 0 0 0 0;
#X obj 124 103 unpack 0 0 0 0 0;
#X obj 231 99 unpack 0 0 0 0 0;
#X obj 337 98 unpack 0 0 0 0 0;
#X obj 19 293 unpack 0 0 0 0 0;
#X obj 133 292 unpack 0 0 0 0 0;
#X obj 254 291 unpack 0 0 0 0 0;
#X floatatom 347 316 5 0 0 0 - - -;
#X floatatom 226 319 5 0 0 0 - - -;
#X floatatom 112 320 5 0 0 0 - - -;
#X obj 112 340 s \$0-ic5;
#X obj 226 339 s \$0-ic6;
#X obj 347 336 s \$0-ic7;
#X connect 0 0 31 0;
#X connect 1 0 32 0;
#X connect 2 0 33 0;
#X connect 3 0 34 0;
#X connect 4 0 28 0;
#X connect 5 0 29 0;
#X connect 6 0 30 0;
#X connect 7 0 0 0;
#X connect 8 0 1 0;
#X connect 9 0 2 0;
#X connect 10 0 3 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 13 0 6 0;
#X connect 14 0 18 0;
#X connect 15 0 19 0;
#X connect 16 0 20 0;
#X connect 17 0 21 0;
#X connect 18 0 44 0;
#X connect 19 0 45 0;
#X connect 20 0 46 0;
#X connect 21 0 47 0;
#X connect 22 0 27 0;
#X connect 23 0 26 0;
#X connect 24 0 25 0;
#X connect 25 0 50 0;
#X connect 26 0 49 0;
#X connect 27 0 48 0;
#X connect 28 0 22 0;
#X connect 29 0 23 0;
#X connect 30 0 24 0;
#X connect 31 0 14 0;
#X connect 32 0 15 0;
#X connect 33 0 16 0;
#X connect 34 0 17 0;
#X connect 36 0 40 0;
#X connect 37 0 41 0;
#X connect 38 0 42 0;
#X connect 39 0 43 0;
#X connect 44 4 36 0;
#X connect 45 4 37 0;
#X connect 46 4 38 0;
#X connect 47 4 39 0;
#X connect 48 4 53 0;
#X connect 49 4 52 0;
#X connect 50 4 51 0;
#X connect 51 0 56 0;
#X connect 52 0 55 0;
#X connect 53 0 54 0;
#X restore 25 157 pd ic.recall;
#X text 110 157 Interval Class;
#X restore 35 382 pd coll.recall;
#N canvas 0 24 1280 752 modal.structures 0;
#X obj 97 -18 r \$0-set2;
#X floatatom 5 -55 5 0 0 0 - - -;
#X floatatom 85 -55 5 0 0 0 - - -;
#X floatatom 169 -56 5 0 0 0 - - -;
#X floatatom 249 -56 5 0 0 0 - - -;
#X floatatom 336 -57 5 0 0 0 - - -;
#X floatatom 407 -57 5 0 0 0 - - -;
#X floatatom 483 -58 5 0 0 0 - - -;
#X obj 17 -17 r \$0-set1;
#X obj 185 -19 r \$0-set3;
#X obj 267 -19 r \$0-set4;
#X obj 346 -19 r \$0-set5;
#X obj 417 -20 r \$0-set6;
#X obj 500 -20 r \$0-set7;
#X obj 5 -77 r \$0-pc1;
#X obj 85 -77 r \$0-pc2;
#X obj 169 -78 r \$0-pc3;
#X obj 249 -78 r \$0-pc4;
#X obj 336 -78 r \$0-pc5;
#X obj 407 -79 r \$0-pc6;
#X obj 483 -80 r \$0-pc7;
#X obj 5 -34 == \$1;
#X obj 169 -36 == \$1;
#X obj 85 -35 == \$1;
#X obj 249 -36 == \$1;
#X obj 407 -37 == \$1;
#X obj 336 -36 == \$1;
#X obj 483 -38 == \$1;
#X floatatom 17 3 5 0 0 0 - - -;
#X floatatom 97 2 5 0 0 0 - - -;
#X floatatom 185 2 5 0 0 0 - - -;
#X floatatom 267 1 5 0 0 0 - - -;
#X floatatom 346 1 5 0 0 0 - - -;
#X floatatom 417 0 5 0 0 0 - - -;
#X floatatom 500 0 5 0 0 0 - - -;
#X obj 5 84 expr if($f1 + $f2 + $f3 + $f4 + $f5 + $f6 + $f7 == 7 \,
1 \, 0) \;;
#X obj -82 -109 r g.i;
#X obj 3 237 knob 32 32 0 1 0 0 empty empty empty 0 -8 0 8 -262144
-1 -1 0 1;
#X obj -32 147 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 3 216 line;
#X msg 70 255 0 2000;
#X obj 70 233 pipe 1000;
#X obj 70 214 gate 1;
#X obj -82 -88 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -50 -23 del 5;
#X obj 5 130 sel 1;
#X obj 3 284 s modal.ramp;
#X msg 3 194 1 1000;
#X obj 70 194 == 1;
#X connect 0 0 23 1;
#X connect 0 0 29 0;
#X connect 1 0 21 0;
#X connect 2 0 23 0;
#X connect 3 0 22 0;
#X connect 4 0 24 0;
#X connect 5 0 26 0;
#X connect 6 0 25 0;
#X connect 7 0 27 0;
#X connect 8 0 21 1;
#X connect 8 0 28 0;
#X connect 9 0 22 1;
#X connect 9 0 30 0;
#X connect 10 0 24 1;
#X connect 10 0 31 0;
#X connect 11 0 26 1;
#X connect 11 0 32 0;
#X connect 12 0 25 1;
#X connect 12 0 33 0;
#X connect 13 0 27 1;
#X connect 13 0 34 0;
#X connect 14 0 1 0;
#X connect 15 0 2 0;
#X connect 16 0 3 0;
#X connect 17 0 4 0;
#X connect 18 0 5 0;
#X connect 19 0 6 0;
#X connect 20 0 7 0;
#X connect 21 0 35 0;
#X connect 22 0 35 2;
#X connect 23 0 35 1;
#X connect 24 0 35 3;
#X connect 25 0 35 5;
#X connect 26 0 35 4;
#X connect 27 0 35 6;
#X connect 35 0 45 0;
#X connect 36 0 43 0;
#X connect 37 0 46 0;
#X connect 37 0 48 0;
#X connect 38 0 47 0;
#X connect 39 0 37 0;
#X connect 40 0 39 0;
#X connect 41 0 40 0;
#X connect 42 0 41 0;
#X connect 43 0 44 0;
#X connect 44 0 35 0;
#X connect 45 0 38 0;
#X connect 47 0 39 0;
#X connect 48 0 42 0;
#X connect 48 0 42 1;
#X restore 33 207 pd modal.structures;
#N canvas 0 25 1280 752 tetra.structures 0;
#X obj 285 -16 r \$0-set2;
#X floatatom 159 -57 5 0 0 0 - - -;
#X floatatom 238 -57 5 0 0 0 - - -;
#X floatatom 322 -58 5 0 0 0 - - -;
#X floatatom 402 -58 5 0 0 0 - - -;
#X obj 202 -11 r \$0-set1;
#X obj 364 -17 r \$0-set3;
#X obj 464 -27 r \$0-set4;
#X obj 159 -79 r \$0-pc1;
#X obj 238 -79 r \$0-pc2;
#X obj 322 -80 r \$0-pc3;
#X obj 402 -80 r \$0-pc4;
#X obj 159 -36 == \$1;
#X obj 322 -38 == \$1;
#X obj 238 -37 == \$1;
#X obj 402 -38 == \$1;
#X floatatom 202 9 5 0 0 0 - - -;
#X floatatom 285 4 5 0 0 0 - - -;
#X floatatom 364 4 5 0 0 0 - - -;
#X floatatom 464 -7 5 0 0 0 - - -;
#X obj 155 80 expr if($f1 + $f2 + $f3 + $f4 == 4 \, 1 \, 0) \;;
#X text 112 -140 index bangs equation;
#X obj 117 -118 r g.i;
#X obj 117 -90 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 155 103 5 0 0 0 - - -;
#X text 191 103 trigger process;
#X obj 155 147 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 92 -5 5 0 0 0 - - -;
#X floatatom 201 -39 5 0 0 0 - - -;
#X obj 155 125 sel 1;
#X obj 182 207 knob 32 32 0 1 0 0 empty empty empty 0 -8 0 8 -262144
-1 -1 0 1;
#X obj 182 186 line;
#X msg 255 231 0 2000;
#X obj 255 211 pipe 1000;
#X obj 255 192 gate 1;
#X obj 117 -70 del 5;
#X msg 182 164 1 1000;
#X obj 255 172 == 1;
#X obj 182 258 s tetra.ramp;
#X obj 182 145 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X connect 0 0 14 1;
#X connect 0 0 17 0;
#X connect 1 0 12 0;
#X connect 2 0 14 0;
#X connect 3 0 13 0;
#X connect 4 0 15 0;
#X connect 5 0 12 1;
#X connect 5 0 16 0;
#X connect 6 0 13 1;
#X connect 6 0 18 0;
#X connect 7 0 15 1;
#X connect 7 0 19 0;
#X connect 8 0 1 0;
#X connect 9 0 2 0;
#X connect 10 0 3 0;
#X connect 11 0 4 0;
#X connect 12 0 27 0;
#X connect 12 0 20 0;
#X connect 13 0 20 2;
#X connect 14 0 28 0;
#X connect 14 0 20 1;
#X connect 15 0 20 3;
#X connect 20 0 24 0;
#X connect 22 0 23 0;
#X connect 23 0 35 0;
#X connect 24 0 29 0;
#X connect 26 0 36 0;
#X connect 29 0 26 0;
#X connect 30 0 37 0;
#X connect 30 0 38 0;
#X connect 31 0 30 0;
#X connect 32 0 31 0;
#X connect 33 0 32 0;
#X connect 34 0 33 0;
#X connect 35 0 20 0;
#X connect 36 0 31 0;
#X connect 37 0 34 0;
#X connect 37 0 34 1;
#X restore 33 233 pd tetra.structures;
#N canvas 95 199 826 564 mono.pt 0;
#X obj 98 87 r ptf.1;
#X floatatom 98 107 5 0 0 0 - - -;
#X floatatom 161 108 5 0 0 0 - - -;
#X floatatom 224 108 5 0 0 0 - - -;
#X obj 224 88 r ptf.3;
#X obj 161 88 r ptf.2;
#X floatatom 287 106 5 0 0 0 - - -;
#X floatatom 350 107 5 0 0 0 - - -;
#X floatatom 413 108 5 0 0 0 - - -;
#X obj 287 86 r ptf.4;
#X obj 350 87 r ptf.5;
#X obj 413 88 r ptf.6;
#X obj 98 128 expr if($f1 + $f2 + $f3 + $f4 + $f5 + $f6 >= 2 \, 1 \,
0);
#X floatatom 98 145 5 0 0 0 - - -;
#X obj 98 201 spigot;
#X obj 169 186 tgl 15 0 empty mto empty 17 7 0 10 -262144 -1 -1 0 1
;
#X text 193 167 single melody tracking only;
#X obj 98 228 s mto.sw;
#X obj 98 161 sel 0;
#X msg 98 184 1;
#X msg 126 184 0;
#X obj 202 191 loadbang;
#X msg 202 211 1;
#X connect 0 0 1 0;
#X connect 1 0 12 0;
#X connect 2 0 12 1;
#X connect 3 0 12 2;
#X connect 4 0 3 0;
#X connect 5 0 2 0;
#X connect 6 0 12 3;
#X connect 7 0 12 4;
#X connect 8 0 12 5;
#X connect 9 0 6 0;
#X connect 10 0 7 0;
#X connect 11 0 8 0;
#X connect 12 0 13 0;
#X connect 13 0 18 0;
#X connect 14 0 17 0;
#X connect 15 0 14 1;
#X connect 18 0 19 0;
#X connect 18 1 20 0;
#X connect 19 0 14 0;
#X connect 20 0 14 0;
#X connect 21 0 22 0;
#X connect 22 0 17 0;
#X restore 35 535 pd mono.pt;
#X text 537 606 Extracting further musical figuration via pitch tracking
;
#X text 142 477 Not finished?;
#X text 106 534 stricter mono-tracking/based on amp;
#X text 32 619 If tones are \$1 distance apart \, do something! (grain
scrub/complete);
#N canvas 0 22 505 162 melodic.tension 0;
#N canvas 0 22 450 300 freq.ramps 0;
#X obj 48 55 r mt.v;
#X floatatom 48 78 5 0 0 0 - - -;
#X text 46 11 Send to partch to emphasise frequency regions to incite
greater relaxation and/or tension.;
#X obj 47 220 s p.1;
#X obj 47 146 line;
#X msg 44 121 $f1 $f2;
#X text 44 255 Establishing a relationship between tonal quantification
and real-time timbral synthesis processes.;
#X connect 0 0 1 0;
#X restore 23 63 pd freq.ramps;
#X text 112 58 Establishing a relationship between tonal quantification
and real-time timbral synthesis processes.;
#X text 24 22 (cf. [pd embedding]);
#X text 69 122 Trigger gliss on partch and sweep on +soundhack;
#X restore 422 433 pd melodic.tension;
#X text 558 431 Based on depth of embedding (pitch/timbre processes)
;
#X text 561 80 Inverse-squared law (pitch/space processes);
#X text 549 50 Linear Completion based on commonalites in "basic space"
;
#N canvas 0 22 562 417 relative.closure 0;
#X text 70 -83 (e.g. p0 - p1 - p2 - chromatic movement complete on
diatonic level);
#X text 70 -50 (e.g. p0 - p2 - p4) - complete on traidic level;
#X text 121 252 If complete on various levels = trigger a process;
#X text 311 166 compare spaces in sequence;
#X obj 29 117 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 29 93 r g.i;
#X floatatom 124 222 5 0 0 0 - - -;
#X floatatom 173 221 5 0 0 0 - - -;
#X floatatom 215 223 5 0 0 0 - - -;
#X floatatom 259 224 5 0 0 0 - - -;
#X floatatom 297 222 5 0 0 0 - - -;
#X floatatom 337 223 5 0 0 0 - - -;
#X obj 144 132 expr if($f1 > $f2 \, 1 \, 0) \; if($f2 > $f3 \, 1 \,
0) \; if($f3 > $f4 \, 1 \, 0) \; if($f4 > $f5 \, 1 \, 0) \; if($f5
> $f6 \, 1 \, 0) \; if($f6 > $f7 \, 1 \, 0) \;;
#X text 73 -130 Relative Melodic Closure - comparisons based on melodic
motion on different levels of basic space (Lerdahl 2001 \, p. 53);
#X text 26 133 bangs equation;
#X text 26 148 every time;
#X text 21 163 a note is played;
#X text 72 -25 If a space moves to a higher level of basic space \,
one can assume linear completion has occurred \, leading to a more
stable melodic point. If the linear motion leads to a lower value of
basic space \, one may assume that melodic motion has led to a less
stable point in pitch space \, than the previous note.;
#X obj 70 75 r \$0-bs1;
#X obj 125 75 r \$0-bs2;
#X obj 180 75 r \$0-bs3;
#X obj 235 75 r \$0-bs4;
#X obj 290 75 r \$0-bs5;
#X obj 345 75 r \$0-bs6;
#X obj 401 75 r \$0-bs7;
#X floatatom 70 95 5 0 0 0 - - -;
#X floatatom 125 96 5 0 0 0 - - -;
#X floatatom 180 96 5 0 0 0 - - -;
#X floatatom 235 96 5 0 0 0 - - -;
#X floatatom 290 96 5 0 0 0 - - -;
#X floatatom 345 95 5 0 0 0 - - -;
#X floatatom 401 95 5 0 0 0 - - -;
#X connect 4 0 12 0;
#X connect 5 0 4 0;
#X connect 12 0 6 0;
#X connect 12 1 7 0;
#X connect 12 2 8 0;
#X connect 12 3 9 0;
#X connect 12 4 10 0;
#X connect 12 5 11 0;
#X connect 18 0 25 0;
#X connect 19 0 26 0;
#X connect 20 0 27 0;
#X connect 21 0 28 0;
#X connect 22 0 29 0;
#X connect 23 0 30 0;
#X connect 24 0 31 0;
#X connect 25 0 12 0;
#X connect 26 0 12 1;
#X connect 27 0 12 2;
#X connect 28 0 12 3;
#X connect 29 0 12 4;
#X connect 30 0 12 5;
#X connect 31 0 12 6;
#X restore 426 51 pd relative.closure;
#N canvas 0 22 552 400 melodic.gestures 0;
#N canvas 0 34 1280 752 ma.c1 0;
#X obj 266 133 % 360;
#X obj 266 109 + 180;
#X obj 251 66 random 360;
#X floatatom 266 88 5 0 0 0 - - -;
#X floatatom 266 150 5 0 0 0 - - -;
#X obj 251 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 305 87 Generate random points in 360 degrees;
#X obj 251 170 f;
#X text 785 246 bang based on first adjacent string formula;
#X text 782 447 what string note was played on;
#X obj 804 101 % 360;
#X obj 804 34 random 360;
#X floatatom 804 56 5 0 0 0 - - -;
#X obj 804 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 744 118 f;
#X obj 251 244 line;
#X obj 521 245 line;
#X obj 241 293 spigot;
#X obj 521 293 spigot;
#X obj 718 278 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 340 302 - 1;
#X obj 620 302 - 1;
#X floatatom 754 286 5 0 0 0 - - -;
#X obj 241 449 line;
#X obj 521 449 line;
#X obj 230 474 spigot;
#X obj 521 474 spigot;
#X obj 620 483 - 1;
#X floatatom 725 467 5 0 0 0 - - -;
#X obj 725 448 r \$0-s1;
#X obj 754 267 r \$0-s7;
#X msg 521 224 \$1 1000;
#X text 517 26 distance is randomised (0 - 10);
#X obj 718 248 reverse;
#X obj 718 226 == \$1;
#X obj 718 186 r \$0-s1;
#X obj 764 209 r \$0-s7;
#X obj 718 206 pipe 1;
#X obj 804 -1 sel 0;
#X obj 958 184 random 10;
#X obj 601 58 r ma.t;
#X obj 601 75 sel 1;
#X obj 646 75 sel 0;
#X msg 601 92 2;
#X msg 628 92 180;
#X msg 655 92 180;
#X msg 688 92 2;
#X obj 191 -136 r counter;
#X obj 191 -116 sel 1;
#X obj 251 3 sel 1;
#X obj 205 104 f;
#X obj 870 184 f;
#X obj 205 129 pipe 1;
#X obj 241 196 pipe 1;
#X obj 329 483 - 1;
#X obj 773 109 + 1;
#X obj 309 -89 r ma.thres;
#X floatatom 152 -119 5 0 0 0 - - -;
#X obj 870 207 pipe 1;
#X text 243 577 Output to ambisonic panner abstraction(s);
#X obj 230 559 s az.1;
#X obj 276 559 s az.2;
#X obj 322 559 s az.3;
#X obj 367 559 s az.4;
#X obj 414 559 s az.5;
#X obj 462 559 s az.6;
#X obj 230 542 demux - - - - - -;
#X obj 521 542 demux - - - - - -;
#X obj 521 559 s ad.1;
#X obj 567 559 s ad.2;
#X obj 613 559 s ad.3;
#X obj 658 559 s ad.4;
#X obj 705 559 s ad.5;
#X obj 753 559 s ad.6;
#X obj 521 515 spigot;
#X obj 230 515 spigot;
#X obj 708 500 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X text 385 -91 If current melodic attraction value = less than threshold
- then spatialise whatever channel note a and b where on apart by equidistant
divisions of 2D space (providing they are played on different strings
- otherwise \, no spatialisation will occur);
#X obj 241 380 s az.1;
#X obj 287 380 s az.2;
#X obj 333 380 s az.3;
#X obj 378 380 s az.4;
#X obj 425 380 s az.5;
#X obj 473 380 s az.6;
#X obj 241 363 demux - - - - - -;
#X obj 521 363 demux - - - - - -;
#X obj 522 380 s ad.1;
#X obj 568 380 s ad.2;
#X obj 614 380 s ad.3;
#X obj 659 380 s ad.4;
#X obj 706 380 s ad.5;
#X obj 754 380 s ad.6;
#X obj 521 332 spigot;
#X obj 241 332 spigot;
#X obj 719 317 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X floatatom 251 -17 5 0 0 0 - - -;
#X floatatom 192 532 5 0 0 0 - - -;
#X floatatom 466 532 5 0 0 0 - - -;
#X floatatom 804 122 5 0 0 0 - - -;
#X floatatom 647 54 5 0 0 0 - - -;
#X obj 190 -96 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 190 -33 f;
#X msg 251 224 \$1 1000;
#X floatatom 309 -49 5 0 0 0 - - -;
#X floatatom 262 -44 5 0 0 0 - - -;
#X text 395 -141 Adding assym.ratio to current melodic attraction value
;
#X text 394 -126 greater the value \, the closer tones will be together
in 2d space;
#X obj 248 -113 r asymm.1;
#X floatatom 263 -93 5 0 0 0 - - -;
#X text 254 -160 range 0 to 16;
#X msg 241 429 \$1 1000;
#X msg 521 428 \$1 1000;
#X obj 345 -156 == 0;
#X obj 344 -137 sel 1;
#X msg 317 -120 16;
#X obj 419 48 random 10;
#X floatatom 418 115 5 0 0 0 - - -;
#X obj 419 72 split 4 10;
#X obj 958 208 split 4 10;
#X obj 190 -54 del 100;
#X obj 248 -72 >= 0.9;
#X obj 344 -116 pipe 5;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 0 50 1;
#X connect 4 0 7 1;
#X connect 5 0 2 0;
#X connect 5 0 7 0;
#X connect 5 0 50 0;
#X connect 7 0 53 0;
#X connect 10 0 14 1;
#X connect 10 0 98 0;
#X connect 11 0 12 0;
#X connect 12 0 55 0;
#X connect 12 0 51 1;
#X connect 13 0 11 0;
#X connect 13 0 14 0;
#X connect 13 0 39 0;
#X connect 13 0 51 0;
#X connect 14 0 110 0;
#X connect 15 0 17 0;
#X connect 16 0 18 0;
#X connect 17 0 93 0;
#X connect 18 0 92 0;
#X connect 19 0 18 1;
#X connect 19 0 17 1;
#X connect 19 0 26 1;
#X connect 19 0 25 1;
#X connect 20 0 84 1;
#X connect 21 0 85 1;
#X connect 22 0 21 0;
#X connect 22 0 20 0;
#X connect 23 0 25 0;
#X connect 24 0 26 0;
#X connect 25 0 75 0;
#X connect 26 0 74 0;
#X connect 27 0 67 1;
#X connect 28 0 27 0;
#X connect 28 0 54 0;
#X connect 29 0 28 0;
#X connect 30 0 22 0;
#X connect 31 0 16 0;
#X connect 33 0 19 0;
#X connect 34 0 33 0;
#X connect 35 0 37 0;
#X connect 36 0 34 1;
#X connect 37 0 34 0;
#X connect 38 0 13 0;
#X connect 39 0 118 0;
#X connect 40 0 41 0;
#X connect 40 0 42 0;
#X connect 40 0 99 0;
#X connect 41 0 43 0;
#X connect 41 0 44 0;
#X connect 42 0 45 0;
#X connect 42 0 46 0;
#X connect 43 0 1 1;
#X connect 44 0 55 1;
#X connect 45 0 1 1;
#X connect 46 0 55 1;
#X connect 47 0 48 0;
#X connect 47 0 57 0;
#X connect 48 0 100 0;
#X connect 49 0 5 0;
#X connect 49 0 115 0;
#X connect 50 0 52 0;
#X connect 51 0 58 0;
#X connect 52 0 102 0;
#X connect 53 0 110 0;
#X connect 54 0 66 1;
#X connect 55 0 10 0;
#X connect 56 0 103 0;
#X connect 56 0 120 1;
#X connect 58 0 102 0;
#X connect 66 0 60 0;
#X connect 66 1 61 0;
#X connect 66 2 62 0;
#X connect 66 3 63 0;
#X connect 66 4 64 0;
#X connect 66 5 65 0;
#X connect 67 0 68 0;
#X connect 67 1 69 0;
#X connect 67 2 70 0;
#X connect 67 3 71 0;
#X connect 67 4 72 0;
#X connect 67 5 73 0;
#X connect 74 0 67 0;
#X connect 74 0 97 0;
#X connect 75 0 66 0;
#X connect 75 0 96 0;
#X connect 76 0 74 1;
#X connect 76 0 75 1;
#X connect 84 0 78 0;
#X connect 84 1 79 0;
#X connect 84 2 80 0;
#X connect 84 3 81 0;
#X connect 84 4 82 0;
#X connect 84 5 83 0;
#X connect 85 0 86 0;
#X connect 85 1 87 0;
#X connect 85 2 88 0;
#X connect 85 3 89 0;
#X connect 85 4 90 0;
#X connect 85 5 91 0;
#X connect 92 0 85 0;
#X connect 93 0 84 0;
#X connect 94 0 92 1;
#X connect 94 0 93 1;
#X connect 95 0 49 0;
#X connect 95 0 38 0;
#X connect 100 0 119 0;
#X connect 101 0 95 0;
#X connect 102 0 15 0;
#X connect 107 0 108 0;
#X connect 107 0 120 0;
#X connect 107 0 112 0;
#X connect 110 0 23 0;
#X connect 111 0 24 0;
#X connect 112 0 113 0;
#X connect 113 0 114 0;
#X connect 114 0 121 0;
#X connect 115 0 117 0;
#X connect 116 0 31 0;
#X connect 117 0 116 0;
#X connect 118 0 111 0;
#X connect 118 0 31 0;
#X connect 119 0 101 0;
#X connect 120 0 101 1;
#X connect 120 0 104 0;
#X connect 121 0 120 0;
#X restore 22 69 pd ma.c1;
#N canvas 0 48 1280 752 ma.c2 0;
#X obj 266 133 % 360;
#X obj 266 109 + 180;
#X obj 251 66 random 360;
#X floatatom 266 88 5 0 0 0 - - -;
#X floatatom 266 150 5 0 0 0 - - -;
#X obj 251 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 305 87 Generate random points in 360 degrees;
#X obj 251 170 f;
#X text 785 246 bang based on first adjacent string formula;
#X text 782 447 what string note was played on;
#X obj 521 46 random 10;
#X obj 804 101 % 360;
#X obj 804 34 random 360;
#X floatatom 804 56 5 0 0 0 - - -;
#X obj 804 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 744 118 f;
#X obj 251 244 line;
#X obj 521 245 line;
#X obj 241 293 spigot;
#X obj 521 293 spigot;
#X obj 718 278 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 340 302 - 1;
#X obj 620 302 - 1;
#X floatatom 754 286 5 0 0 0 - - -;
#X obj 241 449 line;
#X obj 521 449 line;
#X obj 230 474 spigot;
#X obj 521 474 spigot;
#X obj 620 483 - 1;
#X floatatom 725 467 5 0 0 0 - - -;
#X msg 521 224 \$1 1000;
#X text 517 26 distance is randomised (0 - 10);
#X obj 718 248 reverse;
#X obj 718 226 == \$1;
#X obj 718 206 pipe 1;
#X obj 804 -1 sel 0;
#X obj 958 184 random 10;
#X obj 601 58 r ma.t;
#X obj 601 75 sel 1;
#X obj 646 75 sel 0;
#X msg 601 92 2;
#X msg 628 92 180;
#X msg 655 92 180;
#X msg 688 92 2;
#X obj 191 -136 r counter;
#X obj 251 3 sel 1;
#X obj 205 104 f;
#X obj 870 184 f;
#X obj 205 129 pipe 1;
#X obj 241 196 pipe 1;
#X obj 329 483 - 1;
#X obj 773 109 + 1;
#X obj 309 -89 r ma.thres;
#X floatatom 152 -119 5 0 0 0 - - -;
#X floatatom 201 -77 5 0 0 0 - - -;
#X obj 870 207 pipe 1;
#X text 243 577 Output to ambisonic panner abstraction(s);
#X obj 230 559 s az.1;
#X obj 276 559 s az.2;
#X obj 322 559 s az.3;
#X obj 367 559 s az.4;
#X obj 414 559 s az.5;
#X obj 462 559 s az.6;
#X obj 230 542 demux - - - - - -;
#X obj 521 542 demux - - - - - -;
#X obj 521 559 s ad.1;
#X obj 567 559 s ad.2;
#X obj 613 559 s ad.3;
#X obj 658 559 s ad.4;
#X obj 705 559 s ad.5;
#X obj 753 559 s ad.6;
#X obj 521 515 spigot;
#X obj 230 515 spigot;
#X obj 708 500 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X text 433 -110 If current melodic attraction value = less than threshold
- then spatialise whatever channel note a and b where on apart by equidistant
divisions of 2D space (providing they are played on different strings
- otherwise \, no spatialisation will occur);
#X obj 241 380 s az.1;
#X obj 287 380 s az.2;
#X obj 333 380 s az.3;
#X obj 378 380 s az.4;
#X obj 425 380 s az.5;
#X obj 473 380 s az.6;
#X obj 241 363 demux - - - - - -;
#X obj 521 363 demux - - - - - -;
#X obj 522 380 s ad.1;
#X obj 568 380 s ad.2;
#X obj 614 380 s ad.3;
#X obj 659 380 s ad.4;
#X obj 706 380 s ad.5;
#X obj 754 380 s ad.6;
#X obj 521 332 spigot;
#X obj 241 332 spigot;
#X obj 719 317 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X floatatom 251 -17 5 0 0 0 - - -;
#X floatatom 192 532 5 0 0 0 - - -;
#X floatatom 466 532 5 0 0 0 - - -;
#X floatatom 807 148 5 0 0 0 - - -;
#X floatatom 647 54 5 0 0 0 - - -;
#X obj 190 -96 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 190 -33 f;
#X msg 251 224 \$1 1000;
#X msg 241 429 \$1 500;
#X msg 521 428 \$1 500;
#X obj 191 -116 sel 2;
#X obj 718 186 r \$0-s2;
#X obj 764 209 r \$0-s1;
#X obj 754 267 r \$0-s1;
#X obj 725 448 r \$0-s2;
#X obj 248 -94 r asymm.2;
#X obj 328 -160 == 0;
#X obj 327 -141 sel 1;
#X msg 300 -124 16;
#X obj 327 -120 pipe 5;
#X obj 248 -72 >= 0.9;
#X text 363 -154 treat octave as greatest attractional value (16);
#X obj 521 143 split 4 10;
#X obj 958 207 split 4 10;
#X obj 190 -54 del 100;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 0 46 1;
#X connect 4 0 7 1;
#X connect 5 0 2 0;
#X connect 5 0 10 0;
#X connect 5 0 7 0;
#X connect 5 0 46 0;
#X connect 7 0 49 0;
#X connect 10 0 114 0;
#X connect 11 0 15 1;
#X connect 11 0 95 0;
#X connect 12 0 13 0;
#X connect 13 0 51 0;
#X connect 13 0 47 1;
#X connect 14 0 12 0;
#X connect 14 0 15 0;
#X connect 14 0 36 0;
#X connect 14 0 47 0;
#X connect 15 0 100 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 90 0;
#X connect 19 0 89 0;
#X connect 20 0 19 1;
#X connect 20 0 18 1;
#X connect 20 0 27 1;
#X connect 20 0 26 1;
#X connect 21 0 81 1;
#X connect 22 0 82 1;
#X connect 23 0 22 0;
#X connect 23 0 21 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 26 0 72 0;
#X connect 27 0 71 0;
#X connect 28 0 64 1;
#X connect 29 0 28 0;
#X connect 29 0 50 0;
#X connect 30 0 17 0;
#X connect 32 0 20 0;
#X connect 33 0 32 0;
#X connect 34 0 33 0;
#X connect 35 0 14 0;
#X connect 36 0 115 0;
#X connect 37 0 38 0;
#X connect 37 0 39 0;
#X connect 37 0 96 0;
#X connect 38 0 40 0;
#X connect 38 0 41 0;
#X connect 39 0 42 0;
#X connect 39 0 43 0;
#X connect 40 0 1 1;
#X connect 41 0 51 1;
#X connect 42 0 1 1;
#X connect 43 0 51 1;
#X connect 44 0 53 0;
#X connect 44 0 102 0;
#X connect 45 0 5 0;
#X connect 46 0 48 0;
#X connect 47 0 55 0;
#X connect 48 0 99 0;
#X connect 49 0 100 0;
#X connect 50 0 63 1;
#X connect 51 0 11 0;
#X connect 52 0 112 1;
#X connect 55 0 99 0;
#X connect 63 0 57 0;
#X connect 63 1 58 0;
#X connect 63 2 59 0;
#X connect 63 3 60 0;
#X connect 63 4 61 0;
#X connect 63 5 62 0;
#X connect 64 0 65 0;
#X connect 64 1 66 0;
#X connect 64 2 67 0;
#X connect 64 3 68 0;
#X connect 64 4 69 0;
#X connect 64 5 70 0;
#X connect 71 0 64 0;
#X connect 71 0 94 0;
#X connect 72 0 63 0;
#X connect 72 0 93 0;
#X connect 73 0 71 1;
#X connect 73 0 72 1;
#X connect 81 0 75 0;
#X connect 81 1 76 0;
#X connect 81 2 77 0;
#X connect 81 3 78 0;
#X connect 81 4 79 0;
#X connect 81 5 80 0;
#X connect 82 0 83 0;
#X connect 82 1 84 0;
#X connect 82 2 85 0;
#X connect 82 3 86 0;
#X connect 82 4 87 0;
#X connect 82 5 88 0;
#X connect 89 0 82 0;
#X connect 90 0 81 0;
#X connect 91 0 89 1;
#X connect 91 0 90 1;
#X connect 92 0 45 0;
#X connect 92 0 35 0;
#X connect 97 0 116 0;
#X connect 98 0 92 0;
#X connect 99 0 16 0;
#X connect 100 0 24 0;
#X connect 101 0 25 0;
#X connect 102 0 97 0;
#X connect 103 0 34 0;
#X connect 104 0 33 1;
#X connect 105 0 23 0;
#X connect 106 0 29 0;
#X connect 107 0 54 0;
#X connect 107 0 112 0;
#X connect 107 0 108 0;
#X connect 108 0 109 0;
#X connect 109 0 110 0;
#X connect 110 0 111 0;
#X connect 111 0 112 0;
#X connect 112 0 98 1;
#X connect 114 0 30 0;
#X connect 114 0 101 0;
#X connect 115 0 101 0;
#X connect 115 0 30 0;
#X connect 116 0 98 0;
#X restore 22 92 pd ma.c2;
#N canvas 0 22 1280 752 ma.c3 0;
#X obj 266 133 % 360;
#X obj 266 109 + 180;
#X obj 251 66 random 360;
#X floatatom 266 88 5 0 0 0 - - -;
#X floatatom 266 150 5 0 0 0 - - -;
#X obj 251 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 305 87 Generate random points in 360 degrees;
#X obj 251 170 f;
#X text 785 246 bang based on first adjacent string formula;
#X text 782 447 what string note was played on;
#X obj 521 46 random 10;
#X obj 804 101 % 360;
#X obj 804 34 random 360;
#X floatatom 804 56 5 0 0 0 - - -;
#X obj 804 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 744 118 f;
#X obj 251 244 line;
#X obj 521 245 line;
#X obj 241 293 spigot;
#X obj 521 293 spigot;
#X obj 718 278 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 340 302 - 1;
#X obj 620 302 - 1;
#X floatatom 754 286 5 0 0 0 - - -;
#X obj 241 449 line;
#X obj 521 449 line;
#X obj 230 474 spigot;
#X obj 521 474 spigot;
#X obj 620 483 - 1;
#X floatatom 725 467 5 0 0 0 - - -;
#X msg 521 224 \$1 1000;
#X text 517 26 distance is randomised (0 - 10);
#X obj 718 248 reverse;
#X obj 718 226 == \$1;
#X obj 718 206 pipe 1;
#X obj 804 -1 sel 0;
#X obj 958 184 random 10;
#X obj 601 58 r ma.t;
#X obj 601 75 sel 1;
#X obj 646 75 sel 0;
#X msg 601 92 2;
#X msg 628 92 180;
#X msg 655 92 180;
#X msg 688 92 2;
#X obj 191 -136 r counter;
#X obj 251 3 sel 1;
#X obj 205 104 f;
#X obj 870 184 f;
#X obj 205 129 pipe 1;
#X obj 241 196 pipe 1;
#X obj 329 483 - 1;
#X obj 773 109 + 1;
#X obj 309 -89 r ma.thres;
#X floatatom 152 -119 5 0 0 0 - - -;
#X floatatom 201 -77 5 0 0 0 - - -;
#X obj 870 207 pipe 1;
#X text 243 577 Output to ambisonic panner abstraction(s);
#X obj 230 559 s az.1;
#X obj 276 559 s az.2;
#X obj 322 559 s az.3;
#X obj 367 559 s az.4;
#X obj 414 559 s az.5;
#X obj 462 559 s az.6;
#X obj 230 542 demux - - - - - -;
#X obj 521 542 demux - - - - - -;
#X obj 521 559 s ad.1;
#X obj 567 559 s ad.2;
#X obj 613 559 s ad.3;
#X obj 658 559 s ad.4;
#X obj 705 559 s ad.5;
#X obj 753 559 s ad.6;
#X obj 521 515 spigot;
#X obj 230 515 spigot;
#X obj 708 500 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X text 422 -126 If current melodic attraction value = less than threshold
- then spatialise whatever channel note a and b where on apart by equidistant
divisions of 2D space (providing they are played on different strings
- otherwise \, no spatialisation will occur);
#X obj 241 380 s az.1;
#X obj 287 380 s az.2;
#X obj 333 380 s az.3;
#X obj 378 380 s az.4;
#X obj 425 380 s az.5;
#X obj 473 380 s az.6;
#X obj 241 363 demux - - - - - -;
#X obj 521 363 demux - - - - - -;
#X obj 522 380 s ad.1;
#X obj 568 380 s ad.2;
#X obj 614 380 s ad.3;
#X obj 659 380 s ad.4;
#X obj 706 380 s ad.5;
#X obj 754 380 s ad.6;
#X obj 521 332 spigot;
#X obj 241 332 spigot;
#X obj 719 317 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X floatatom 251 -17 5 0 0 0 - - -;
#X floatatom 192 532 5 0 0 0 - - -;
#X floatatom 466 532 5 0 0 0 - - -;
#X floatatom 807 148 5 0 0 0 - - -;
#X floatatom 647 54 5 0 0 0 - - -;
#X obj 190 -96 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 190 -33 f;
#X msg 251 224 \$1 1000;
#X msg 241 429 \$1 500;
#X msg 521 428 \$1 500;
#X obj 191 -116 sel 3;
#X obj 718 186 r \$0-s3;
#X obj 754 267 r \$0-s2;
#X obj 725 448 r \$0-s3;
#X obj 764 209 r \$0-s2;
#X obj 248 -94 r asymm.3;
#X obj 190 -54 del 100;
#X obj 309 -164 == 0;
#X obj 308 -145 sel 1;
#X msg 281 -128 16;
#X obj 308 -124 pipe 5;
#X obj 248 -72 >= 0.9;
#X obj 521 143 split 4 10;
#X obj 959 207 split 4 10;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 0 46 1;
#X connect 4 0 7 1;
#X connect 5 0 2 0;
#X connect 5 0 10 0;
#X connect 5 0 7 0;
#X connect 5 0 46 0;
#X connect 7 0 49 0;
#X connect 10 0 114 0;
#X connect 11 0 15 1;
#X connect 11 0 95 0;
#X connect 12 0 13 0;
#X connect 13 0 51 0;
#X connect 13 0 47 1;
#X connect 14 0 12 0;
#X connect 14 0 15 0;
#X connect 14 0 36 0;
#X connect 14 0 47 0;
#X connect 15 0 100 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 90 0;
#X connect 19 0 89 0;
#X connect 20 0 19 1;
#X connect 20 0 18 1;
#X connect 20 0 27 1;
#X connect 20 0 26 1;
#X connect 21 0 81 1;
#X connect 22 0 82 1;
#X connect 23 0 22 0;
#X connect 23 0 21 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 26 0 72 0;
#X connect 27 0 71 0;
#X connect 28 0 64 1;
#X connect 29 0 28 0;
#X connect 29 0 50 0;
#X connect 30 0 17 0;
#X connect 32 0 20 0;
#X connect 33 0 32 0;
#X connect 34 0 33 0;
#X connect 35 0 14 0;
#X connect 36 0 115 0;
#X connect 37 0 38 0;
#X connect 37 0 39 0;
#X connect 37 0 96 0;
#X connect 38 0 40 0;
#X connect 38 0 41 0;
#X connect 39 0 42 0;
#X connect 39 0 43 0;
#X connect 40 0 1 1;
#X connect 41 0 51 1;
#X connect 42 0 1 1;
#X connect 43 0 51 1;
#X connect 44 0 53 0;
#X connect 44 0 102 0;
#X connect 45 0 5 0;
#X connect 46 0 48 0;
#X connect 47 0 55 0;
#X connect 48 0 99 0;
#X connect 49 0 100 0;
#X connect 50 0 63 1;
#X connect 51 0 11 0;
#X connect 52 0 113 1;
#X connect 55 0 99 0;
#X connect 63 0 57 0;
#X connect 63 1 58 0;
#X connect 63 2 59 0;
#X connect 63 3 60 0;
#X connect 63 4 61 0;
#X connect 63 5 62 0;
#X connect 64 0 65 0;
#X connect 64 1 66 0;
#X connect 64 2 67 0;
#X connect 64 3 68 0;
#X connect 64 4 69 0;
#X connect 64 5 70 0;
#X connect 71 0 64 0;
#X connect 71 0 94 0;
#X connect 72 0 63 0;
#X connect 72 0 93 0;
#X connect 73 0 71 1;
#X connect 73 0 72 1;
#X connect 81 0 75 0;
#X connect 81 1 76 0;
#X connect 81 2 77 0;
#X connect 81 3 78 0;
#X connect 81 4 79 0;
#X connect 81 5 80 0;
#X connect 82 0 83 0;
#X connect 82 1 84 0;
#X connect 82 2 85 0;
#X connect 82 3 86 0;
#X connect 82 4 87 0;
#X connect 82 5 88 0;
#X connect 89 0 82 0;
#X connect 90 0 81 0;
#X connect 91 0 89 1;
#X connect 91 0 90 1;
#X connect 92 0 45 0;
#X connect 92 0 35 0;
#X connect 97 0 108 0;
#X connect 98 0 92 0;
#X connect 99 0 16 0;
#X connect 100 0 24 0;
#X connect 101 0 25 0;
#X connect 102 0 97 0;
#X connect 103 0 34 0;
#X connect 104 0 23 0;
#X connect 105 0 29 0;
#X connect 106 0 33 1;
#X connect 107 0 54 0;
#X connect 107 0 109 0;
#X connect 107 0 113 0;
#X connect 108 0 98 0;
#X connect 109 0 110 0;
#X connect 110 0 111 0;
#X connect 111 0 112 0;
#X connect 112 0 113 0;
#X connect 113 0 98 1;
#X connect 114 0 30 0;
#X connect 114 0 101 0;
#X connect 115 0 101 0;
#X connect 115 0 30 0;
#X restore 22 115 pd ma.c3;
#N canvas 0 48 1280 752 ma.c4 0;
#X obj 266 133 % 360;
#X obj 266 109 + 180;
#X obj 251 66 random 360;
#X floatatom 266 88 5 0 0 0 - - -;
#X floatatom 266 150 5 0 0 0 - - -;
#X obj 251 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 305 87 Generate random points in 360 degrees;
#X obj 251 170 f;
#X text 785 246 bang based on first adjacent string formula;
#X text 782 447 what string note was played on;
#X obj 521 46 random 10;
#X obj 804 101 % 360;
#X obj 804 34 random 360;
#X floatatom 804 56 5 0 0 0 - - -;
#X obj 804 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 744 118 f;
#X obj 251 244 line;
#X obj 521 245 line;
#X obj 241 293 spigot;
#X obj 521 293 spigot;
#X obj 718 278 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 340 302 - 1;
#X obj 620 302 - 1;
#X floatatom 754 286 5 0 0 0 - - -;
#X obj 241 449 line;
#X obj 521 449 line;
#X obj 230 474 spigot;
#X obj 521 474 spigot;
#X obj 620 483 - 1;
#X floatatom 725 467 5 0 0 0 - - -;
#X msg 521 224 \$1 1000;
#X text 517 26 distance is randomised (0 - 10);
#X obj 718 248 reverse;
#X obj 718 226 == \$1;
#X obj 718 206 pipe 1;
#X obj 804 -1 sel 0;
#X obj 958 184 random 10;
#X obj 601 58 r ma.t;
#X obj 601 75 sel 1;
#X obj 646 75 sel 0;
#X msg 601 92 2;
#X msg 628 92 180;
#X msg 655 92 180;
#X msg 688 92 2;
#X obj 191 -136 r counter;
#X obj 251 3 sel 1;
#X obj 205 104 f;
#X obj 870 184 f;
#X obj 205 129 pipe 1;
#X obj 241 196 pipe 1;
#X obj 329 483 - 1;
#X obj 773 109 + 1;
#X obj 309 -89 r ma.thres;
#X floatatom 152 -119 5 0 0 0 - - -;
#X floatatom 201 -77 5 0 0 0 - - -;
#X obj 870 207 pipe 1;
#X text 243 577 Output to ambisonic panner abstraction(s);
#X obj 230 559 s az.1;
#X obj 276 559 s az.2;
#X obj 322 559 s az.3;
#X obj 367 559 s az.4;
#X obj 414 559 s az.5;
#X obj 462 559 s az.6;
#X obj 230 542 demux - - - - - -;
#X obj 521 542 demux - - - - - -;
#X obj 521 559 s ad.1;
#X obj 567 559 s ad.2;
#X obj 613 559 s ad.3;
#X obj 658 559 s ad.4;
#X obj 705 559 s ad.5;
#X obj 753 559 s ad.6;
#X obj 521 515 spigot;
#X obj 230 515 spigot;
#X obj 708 500 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X text 422 -126 If current melodic attraction value = less than threshold
- then spatialise whatever channel note a and b where on apart by equidistant
divisions of 2D space (providing they are played on different strings
- otherwise \, no spatialisation will occur);
#X obj 241 380 s az.1;
#X obj 287 380 s az.2;
#X obj 333 380 s az.3;
#X obj 378 380 s az.4;
#X obj 425 380 s az.5;
#X obj 473 380 s az.6;
#X obj 241 363 demux - - - - - -;
#X obj 521 363 demux - - - - - -;
#X obj 522 380 s ad.1;
#X obj 568 380 s ad.2;
#X obj 614 380 s ad.3;
#X obj 659 380 s ad.4;
#X obj 706 380 s ad.5;
#X obj 754 380 s ad.6;
#X obj 521 332 spigot;
#X obj 241 332 spigot;
#X obj 719 317 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X floatatom 251 -17 5 0 0 0 - - -;
#X floatatom 192 532 5 0 0 0 - - -;
#X floatatom 466 532 5 0 0 0 - - -;
#X floatatom 807 148 5 0 0 0 - - -;
#X floatatom 647 54 5 0 0 0 - - -;
#X obj 190 -96 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 190 -33 f;
#X msg 251 224 \$1 1000;
#X msg 241 429 \$1 500;
#X msg 521 428 \$1 500;
#X obj 191 -116 sel 4;
#X obj 718 186 r \$0-s4;
#X obj 764 209 r \$0-s3;
#X obj 754 267 r \$0-s3;
#X obj 725 448 r \$0-s4;
#X obj 248 -94 r asymm.4;
#X obj 190 -54 del 100;
#X obj 248 -72 >= 0.9;
#X obj 294 -163 == 0;
#X obj 293 -144 sel 1;
#X msg 266 -127 16;
#X obj 293 -123 pipe 5;
#X obj 521 143 split 4 10;
#X obj 958 207 split 4 10;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 0 46 1;
#X connect 4 0 7 1;
#X connect 5 0 2 0;
#X connect 5 0 10 0;
#X connect 5 0 7 0;
#X connect 5 0 46 0;
#X connect 7 0 49 0;
#X connect 10 0 114 0;
#X connect 11 0 15 1;
#X connect 11 0 95 0;
#X connect 12 0 13 0;
#X connect 13 0 51 0;
#X connect 13 0 47 1;
#X connect 14 0 12 0;
#X connect 14 0 15 0;
#X connect 14 0 36 0;
#X connect 14 0 47 0;
#X connect 15 0 100 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 90 0;
#X connect 19 0 89 0;
#X connect 20 0 19 1;
#X connect 20 0 18 1;
#X connect 20 0 27 1;
#X connect 20 0 26 1;
#X connect 21 0 81 1;
#X connect 22 0 82 1;
#X connect 23 0 22 0;
#X connect 23 0 21 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 26 0 72 0;
#X connect 27 0 71 0;
#X connect 28 0 64 1;
#X connect 29 0 28 0;
#X connect 29 0 50 0;
#X connect 30 0 17 0;
#X connect 32 0 20 0;
#X connect 33 0 32 0;
#X connect 34 0 33 0;
#X connect 35 0 14 0;
#X connect 36 0 115 0;
#X connect 37 0 38 0;
#X connect 37 0 39 0;
#X connect 37 0 96 0;
#X connect 38 0 40 0;
#X connect 38 0 41 0;
#X connect 39 0 42 0;
#X connect 39 0 43 0;
#X connect 40 0 1 1;
#X connect 41 0 51 1;
#X connect 42 0 1 1;
#X connect 43 0 51 1;
#X connect 44 0 53 0;
#X connect 44 0 102 0;
#X connect 45 0 5 0;
#X connect 46 0 48 0;
#X connect 47 0 55 0;
#X connect 48 0 99 0;
#X connect 49 0 100 0;
#X connect 50 0 63 1;
#X connect 51 0 11 0;
#X connect 52 0 109 1;
#X connect 55 0 99 0;
#X connect 63 0 57 0;
#X connect 63 1 58 0;
#X connect 63 2 59 0;
#X connect 63 3 60 0;
#X connect 63 4 61 0;
#X connect 63 5 62 0;
#X connect 64 0 65 0;
#X connect 64 1 66 0;
#X connect 64 2 67 0;
#X connect 64 3 68 0;
#X connect 64 4 69 0;
#X connect 64 5 70 0;
#X connect 71 0 64 0;
#X connect 71 0 94 0;
#X connect 72 0 63 0;
#X connect 72 0 93 0;
#X connect 73 0 71 1;
#X connect 73 0 72 1;
#X connect 81 0 75 0;
#X connect 81 1 76 0;
#X connect 81 2 77 0;
#X connect 81 3 78 0;
#X connect 81 4 79 0;
#X connect 81 5 80 0;
#X connect 82 0 83 0;
#X connect 82 1 84 0;
#X connect 82 2 85 0;
#X connect 82 3 86 0;
#X connect 82 4 87 0;
#X connect 82 5 88 0;
#X connect 89 0 82 0;
#X connect 90 0 81 0;
#X connect 91 0 89 1;
#X connect 91 0 90 1;
#X connect 92 0 45 0;
#X connect 92 0 35 0;
#X connect 97 0 108 0;
#X connect 98 0 92 0;
#X connect 99 0 16 0;
#X connect 100 0 24 0;
#X connect 101 0 25 0;
#X connect 102 0 97 0;
#X connect 103 0 34 0;
#X connect 104 0 33 1;
#X connect 105 0 23 0;
#X connect 106 0 29 0;
#X connect 107 0 54 0;
#X connect 107 0 109 0;
#X connect 107 0 110 0;
#X connect 108 0 98 0;
#X connect 109 0 98 1;
#X connect 110 0 111 0;
#X connect 111 0 112 0;
#X connect 112 0 113 0;
#X connect 113 0 109 0;
#X connect 114 0 30 0;
#X connect 114 0 101 0;
#X connect 115 0 101 0;
#X connect 115 0 30 0;
#X restore 22 138 pd ma.c4;
#N canvas 0 48 1280 752 ma.c5 0;
#X obj 266 133 % 360;
#X obj 266 109 + 180;
#X obj 251 66 random 360;
#X floatatom 266 88 5 0 0 0 - - -;
#X floatatom 266 150 5 0 0 0 - - -;
#X obj 251 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 305 87 Generate random points in 360 degrees;
#X obj 251 170 f;
#X text 785 246 bang based on first adjacent string formula;
#X text 782 447 what string note was played on;
#X obj 521 46 random 10;
#X obj 804 101 % 360;
#X obj 804 34 random 360;
#X floatatom 804 56 5 0 0 0 - - -;
#X obj 804 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 744 118 f;
#X obj 251 244 line;
#X obj 521 245 line;
#X obj 241 293 spigot;
#X obj 521 293 spigot;
#X obj 718 278 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 340 302 - 1;
#X obj 620 302 - 1;
#X floatatom 754 286 5 0 0 0 - - -;
#X obj 241 449 line;
#X obj 521 449 line;
#X obj 230 474 spigot;
#X obj 521 474 spigot;
#X obj 620 483 - 1;
#X floatatom 725 467 5 0 0 0 - - -;
#X msg 521 224 \$1 1000;
#X text 517 26 distance is randomised (0 - 10);
#X obj 718 248 reverse;
#X obj 718 226 == \$1;
#X obj 718 206 pipe 1;
#X obj 804 -1 sel 0;
#X obj 958 184 random 10;
#X obj 601 58 r ma.t;
#X obj 601 75 sel 1;
#X obj 646 75 sel 0;
#X msg 601 92 2;
#X msg 628 92 180;
#X msg 655 92 180;
#X msg 688 92 2;
#X obj 191 -136 r counter;
#X obj 251 3 sel 1;
#X obj 205 104 f;
#X obj 870 184 f;
#X obj 205 129 pipe 1;
#X obj 241 196 pipe 1;
#X obj 329 483 - 1;
#X obj 773 109 + 1;
#X obj 309 -89 r ma.thres;
#X floatatom 152 -119 5 0 0 0 - - -;
#X floatatom 201 -77 5 0 0 0 - - -;
#X obj 870 207 pipe 1;
#X text 243 577 Output to ambisonic panner abstraction(s);
#X obj 230 559 s az.1;
#X obj 276 559 s az.2;
#X obj 322 559 s az.3;
#X obj 367 559 s az.4;
#X obj 414 559 s az.5;
#X obj 462 559 s az.6;
#X obj 230 542 demux - - - - - -;
#X obj 521 542 demux - - - - - -;
#X obj 521 559 s ad.1;
#X obj 567 559 s ad.2;
#X obj 613 559 s ad.3;
#X obj 658 559 s ad.4;
#X obj 705 559 s ad.5;
#X obj 753 559 s ad.6;
#X obj 521 515 spigot;
#X obj 230 515 spigot;
#X obj 708 500 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X text 422 -126 If current melodic attraction value = less than threshold
- then spatialise whatever channel note a and b where on apart by equidistant
divisions of 2D space (providing they are played on different strings
- otherwise \, no spatialisation will occur);
#X obj 241 380 s az.1;
#X obj 287 380 s az.2;
#X obj 333 380 s az.3;
#X obj 378 380 s az.4;
#X obj 425 380 s az.5;
#X obj 473 380 s az.6;
#X obj 241 363 demux - - - - - -;
#X obj 521 363 demux - - - - - -;
#X obj 522 380 s ad.1;
#X obj 568 380 s ad.2;
#X obj 614 380 s ad.3;
#X obj 659 380 s ad.4;
#X obj 706 380 s ad.5;
#X obj 754 380 s ad.6;
#X obj 521 332 spigot;
#X obj 241 332 spigot;
#X obj 719 317 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X floatatom 251 -17 5 0 0 0 - - -;
#X floatatom 192 532 5 0 0 0 - - -;
#X floatatom 466 532 5 0 0 0 - - -;
#X floatatom 807 148 5 0 0 0 - - -;
#X floatatom 647 54 5 0 0 0 - - -;
#X obj 190 -96 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 190 -33 f;
#X msg 251 224 \$1 1000;
#X msg 241 429 \$1 500;
#X msg 521 428 \$1 500;
#X obj 191 -116 sel 5;
#X obj 718 186 r \$0-s5;
#X obj 764 209 r \$0-s4;
#X obj 754 267 r \$0-s4;
#X obj 725 448 r \$0-s5;
#X obj 248 -94 r asymm.5;
#X obj 521 143 split 4 10;
#X obj 958 207 split 4 10;
#X obj 306 -162 == 0;
#X obj 305 -143 sel 1;
#X msg 278 -126 16;
#X obj 305 -122 pipe 5;
#X obj 248 -72 >= 0.9;
#X obj 190 -54 del 100;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 0 46 1;
#X connect 4 0 7 1;
#X connect 5 0 2 0;
#X connect 5 0 10 0;
#X connect 5 0 7 0;
#X connect 5 0 46 0;
#X connect 7 0 49 0;
#X connect 10 0 108 0;
#X connect 11 0 15 1;
#X connect 11 0 95 0;
#X connect 12 0 13 0;
#X connect 13 0 51 0;
#X connect 13 0 47 1;
#X connect 14 0 12 0;
#X connect 14 0 15 0;
#X connect 14 0 36 0;
#X connect 14 0 47 0;
#X connect 15 0 100 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 90 0;
#X connect 19 0 89 0;
#X connect 20 0 19 1;
#X connect 20 0 18 1;
#X connect 20 0 27 1;
#X connect 20 0 26 1;
#X connect 21 0 81 1;
#X connect 22 0 82 1;
#X connect 23 0 22 0;
#X connect 23 0 21 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 26 0 72 0;
#X connect 27 0 71 0;
#X connect 28 0 64 1;
#X connect 29 0 28 0;
#X connect 29 0 50 0;
#X connect 30 0 17 0;
#X connect 32 0 20 0;
#X connect 33 0 32 0;
#X connect 34 0 33 0;
#X connect 35 0 14 0;
#X connect 36 0 109 0;
#X connect 37 0 38 0;
#X connect 37 0 39 0;
#X connect 37 0 96 0;
#X connect 38 0 40 0;
#X connect 38 0 41 0;
#X connect 39 0 42 0;
#X connect 39 0 43 0;
#X connect 40 0 1 1;
#X connect 41 0 51 1;
#X connect 42 0 1 1;
#X connect 43 0 51 1;
#X connect 44 0 53 0;
#X connect 44 0 102 0;
#X connect 45 0 5 0;
#X connect 46 0 48 0;
#X connect 47 0 55 0;
#X connect 48 0 99 0;
#X connect 49 0 100 0;
#X connect 50 0 63 1;
#X connect 51 0 11 0;
#X connect 52 0 114 1;
#X connect 55 0 99 0;
#X connect 63 0 57 0;
#X connect 63 1 58 0;
#X connect 63 2 59 0;
#X connect 63 3 60 0;
#X connect 63 4 61 0;
#X connect 63 5 62 0;
#X connect 64 0 65 0;
#X connect 64 1 66 0;
#X connect 64 2 67 0;
#X connect 64 3 68 0;
#X connect 64 4 69 0;
#X connect 64 5 70 0;
#X connect 71 0 64 0;
#X connect 71 0 94 0;
#X connect 72 0 63 0;
#X connect 72 0 93 0;
#X connect 73 0 71 1;
#X connect 73 0 72 1;
#X connect 81 0 75 0;
#X connect 81 1 76 0;
#X connect 81 2 77 0;
#X connect 81 3 78 0;
#X connect 81 4 79 0;
#X connect 81 5 80 0;
#X connect 82 0 83 0;
#X connect 82 1 84 0;
#X connect 82 2 85 0;
#X connect 82 3 86 0;
#X connect 82 4 87 0;
#X connect 82 5 88 0;
#X connect 89 0 82 0;
#X connect 90 0 81 0;
#X connect 91 0 89 1;
#X connect 91 0 90 1;
#X connect 92 0 45 0;
#X connect 92 0 35 0;
#X connect 97 0 115 0;
#X connect 98 0 92 0;
#X connect 99 0 16 0;
#X connect 100 0 24 0;
#X connect 101 0 25 0;
#X connect 102 0 97 0;
#X connect 103 0 34 0;
#X connect 104 0 33 1;
#X connect 105 0 23 0;
#X connect 106 0 29 0;
#X connect 107 0 54 0;
#X connect 107 0 110 0;
#X connect 107 0 114 0;
#X connect 108 0 30 0;
#X connect 108 0 101 0;
#X connect 109 0 101 0;
#X connect 109 0 30 0;
#X connect 110 0 111 0;
#X connect 111 0 112 0;
#X connect 112 0 113 0;
#X connect 113 0 114 0;
#X connect 114 0 98 1;
#X connect 115 0 98 0;
#X restore 22 161 pd ma.c5;
#N canvas 0 22 1280 752 ma.c6 0;
#X obj 266 133 % 360;
#X obj 266 109 + 180;
#X obj 251 66 random 360;
#X floatatom 266 88 5 0 0 0 - - -;
#X floatatom 266 150 5 0 0 0 - - -;
#X obj 251 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 305 87 Generate random points in 360 degrees;
#X obj 251 170 f;
#X text 785 246 bang based on first adjacent string formula;
#X text 782 447 what string note was played on;
#X obj 521 46 random 10;
#X obj 804 101 % 360;
#X obj 804 34 random 360;
#X floatatom 804 56 5 0 0 0 - - -;
#X obj 804 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 744 118 f;
#X obj 251 244 line;
#X obj 521 245 line;
#X obj 241 293 spigot;
#X obj 521 293 spigot;
#X obj 718 278 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 340 302 - 1;
#X obj 620 302 - 1;
#X floatatom 754 286 5 0 0 0 - - -;
#X obj 241 449 line;
#X obj 521 449 line;
#X obj 230 474 spigot;
#X obj 521 474 spigot;
#X obj 620 483 - 1;
#X floatatom 725 467 5 0 0 0 - - -;
#X msg 521 224 \$1 1000;
#X text 517 26 distance is randomised (0 - 10);
#X obj 718 248 reverse;
#X obj 718 226 == \$1;
#X obj 718 206 pipe 1;
#X obj 804 -1 sel 0;
#X obj 958 184 random 10;
#X obj 601 58 r ma.t;
#X obj 601 75 sel 1;
#X obj 646 75 sel 0;
#X msg 601 92 2;
#X msg 628 92 180;
#X msg 655 92 180;
#X msg 688 92 2;
#X obj 191 -136 r counter;
#X obj 251 3 sel 1;
#X obj 205 104 f;
#X obj 870 184 f;
#X obj 205 129 pipe 1;
#X obj 241 196 pipe 1;
#X obj 329 483 - 1;
#X obj 773 109 + 1;
#X obj 309 -89 r ma.thres;
#X floatatom 152 -119 5 0 0 0 - - -;
#X floatatom 201 -77 5 0 0 0 - - -;
#X obj 870 207 pipe 1;
#X text 243 577 Output to ambisonic panner abstraction(s);
#X obj 230 559 s az.1;
#X obj 276 559 s az.2;
#X obj 322 559 s az.3;
#X obj 367 559 s az.4;
#X obj 414 559 s az.5;
#X obj 462 559 s az.6;
#X obj 230 542 demux - - - - - -;
#X obj 521 542 demux - - - - - -;
#X obj 521 559 s ad.1;
#X obj 567 559 s ad.2;
#X obj 613 559 s ad.3;
#X obj 658 559 s ad.4;
#X obj 705 559 s ad.5;
#X obj 753 559 s ad.6;
#X obj 521 515 spigot;
#X obj 230 515 spigot;
#X obj 708 500 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X text 422 -126 If current melodic attraction value = less than threshold
- then spatialise whatever channel note a and b where on apart by equidistant
divisions of 2D space (providing they are played on different strings
- otherwise \, no spatialisation will occur);
#X obj 241 380 s az.1;
#X obj 287 380 s az.2;
#X obj 333 380 s az.3;
#X obj 378 380 s az.4;
#X obj 425 380 s az.5;
#X obj 473 380 s az.6;
#X obj 241 363 demux - - - - - -;
#X obj 521 363 demux - - - - - -;
#X obj 522 380 s ad.1;
#X obj 568 380 s ad.2;
#X obj 614 380 s ad.3;
#X obj 659 380 s ad.4;
#X obj 706 380 s ad.5;
#X obj 754 380 s ad.6;
#X obj 521 332 spigot;
#X obj 241 332 spigot;
#X obj 719 317 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X floatatom 251 -17 5 0 0 0 - - -;
#X floatatom 192 532 5 0 0 0 - - -;
#X floatatom 466 532 5 0 0 0 - - -;
#X floatatom 807 148 5 0 0 0 - - -;
#X floatatom 647 54 5 0 0 0 - - -;
#X obj 190 -96 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 190 -33 f;
#X msg 251 224 \$1 1000;
#X msg 241 429 \$1 500;
#X msg 521 428 \$1 500;
#X obj 191 -116 sel 6;
#X obj 718 186 r \$0-s6;
#X obj 764 209 r \$0-s5;
#X obj 754 267 r \$0-s5;
#X obj 725 448 r \$0-s6;
#X obj 248 -94 r asymm.6;
#X obj 190 -54 del 100;
#X obj 248 -72 >= 0.9;
#X obj 307 -167 == 0;
#X obj 306 -148 sel 1;
#X msg 279 -131 16;
#X obj 306 -127 pipe 5;
#X obj 521 143 split 4 10;
#X obj 958 207 split 4 10;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 0 46 1;
#X connect 4 0 7 1;
#X connect 5 0 2 0;
#X connect 5 0 10 0;
#X connect 5 0 7 0;
#X connect 5 0 46 0;
#X connect 7 0 49 0;
#X connect 10 0 114 0;
#X connect 11 0 15 1;
#X connect 11 0 95 0;
#X connect 12 0 13 0;
#X connect 13 0 51 0;
#X connect 13 0 47 1;
#X connect 14 0 12 0;
#X connect 14 0 15 0;
#X connect 14 0 36 0;
#X connect 14 0 47 0;
#X connect 15 0 100 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 90 0;
#X connect 19 0 89 0;
#X connect 20 0 19 1;
#X connect 20 0 18 1;
#X connect 20 0 27 1;
#X connect 20 0 26 1;
#X connect 21 0 81 1;
#X connect 22 0 82 1;
#X connect 23 0 22 0;
#X connect 23 0 21 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 26 0 72 0;
#X connect 27 0 71 0;
#X connect 28 0 64 1;
#X connect 29 0 28 0;
#X connect 29 0 50 0;
#X connect 30 0 17 0;
#X connect 32 0 20 0;
#X connect 33 0 32 0;
#X connect 34 0 33 0;
#X connect 35 0 14 0;
#X connect 36 0 115 0;
#X connect 37 0 38 0;
#X connect 37 0 39 0;
#X connect 37 0 96 0;
#X connect 38 0 40 0;
#X connect 38 0 41 0;
#X connect 39 0 42 0;
#X connect 39 0 43 0;
#X connect 40 0 1 1;
#X connect 41 0 51 1;
#X connect 42 0 1 1;
#X connect 43 0 51 1;
#X connect 44 0 53 0;
#X connect 44 0 102 0;
#X connect 45 0 5 0;
#X connect 46 0 48 0;
#X connect 47 0 55 0;
#X connect 48 0 99 0;
#X connect 49 0 100 0;
#X connect 50 0 63 1;
#X connect 51 0 11 0;
#X connect 52 0 109 1;
#X connect 55 0 99 0;
#X connect 63 0 57 0;
#X connect 63 1 58 0;
#X connect 63 2 59 0;
#X connect 63 3 60 0;
#X connect 63 4 61 0;
#X connect 63 5 62 0;
#X connect 64 0 65 0;
#X connect 64 1 66 0;
#X connect 64 2 67 0;
#X connect 64 3 68 0;
#X connect 64 4 69 0;
#X connect 64 5 70 0;
#X connect 71 0 64 0;
#X connect 71 0 94 0;
#X connect 72 0 63 0;
#X connect 72 0 93 0;
#X connect 73 0 71 1;
#X connect 73 0 72 1;
#X connect 81 0 75 0;
#X connect 81 1 76 0;
#X connect 81 2 77 0;
#X connect 81 3 78 0;
#X connect 81 4 79 0;
#X connect 81 5 80 0;
#X connect 82 0 83 0;
#X connect 82 1 84 0;
#X connect 82 2 85 0;
#X connect 82 3 86 0;
#X connect 82 4 87 0;
#X connect 82 5 88 0;
#X connect 89 0 82 0;
#X connect 90 0 81 0;
#X connect 91 0 89 1;
#X connect 91 0 90 1;
#X connect 92 0 45 0;
#X connect 92 0 35 0;
#X connect 97 0 108 0;
#X connect 98 0 92 0;
#X connect 99 0 16 0;
#X connect 100 0 24 0;
#X connect 101 0 25 0;
#X connect 102 0 97 0;
#X connect 103 0 34 0;
#X connect 104 0 33 1;
#X connect 105 0 23 0;
#X connect 106 0 29 0;
#X connect 107 0 54 0;
#X connect 107 0 109 0;
#X connect 107 0 110 0;
#X connect 108 0 98 0;
#X connect 109 0 98 1;
#X connect 110 0 111 0;
#X connect 111 0 112 0;
#X connect 112 0 113 0;
#X connect 113 0 109 0;
#X connect 114 0 30 0;
#X connect 114 0 101 0;
#X connect 115 0 101 0;
#X connect 115 0 30 0;
#X restore 22 183 pd ma.c6;
#N canvas 0 22 1280 752 ma.c7 0;
#X obj 266 133 % 360;
#X obj 266 109 + 180;
#X obj 251 66 random 360;
#X floatatom 266 88 5 0 0 0 - - -;
#X floatatom 266 150 5 0 0 0 - - -;
#X obj 251 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 305 87 Generate random points in 360 degrees;
#X obj 251 170 f;
#X text 785 246 bang based on first adjacent string formula;
#X text 782 447 what string note was played on;
#X obj 521 46 random 10;
#X obj 804 101 % 360;
#X obj 804 34 random 360;
#X floatatom 804 56 5 0 0 0 - - -;
#X obj 804 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 744 118 f;
#X obj 251 244 line;
#X obj 521 245 line;
#X obj 241 293 spigot;
#X obj 521 293 spigot;
#X obj 718 278 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 340 302 - 1;
#X obj 620 302 - 1;
#X floatatom 754 286 5 0 0 0 - - -;
#X obj 241 449 line;
#X obj 521 449 line;
#X obj 230 474 spigot;
#X obj 521 474 spigot;
#X obj 620 483 - 1;
#X floatatom 725 467 5 0 0 0 - - -;
#X msg 521 224 \$1 1000;
#X text 517 26 distance is randomised (0 - 10);
#X obj 718 248 reverse;
#X obj 718 226 == \$1;
#X obj 718 206 pipe 1;
#X obj 804 -1 sel 0;
#X obj 958 184 random 10;
#X obj 601 58 r ma.t;
#X obj 601 75 sel 1;
#X obj 646 75 sel 0;
#X msg 601 92 2;
#X msg 628 92 180;
#X msg 655 92 180;
#X msg 688 92 2;
#X obj 191 -136 r counter;
#X obj 251 3 sel 1;
#X obj 205 104 f;
#X obj 870 184 f;
#X obj 205 129 pipe 1;
#X obj 241 196 pipe 1;
#X obj 329 483 - 1;
#X obj 773 109 + 1;
#X obj 309 -89 r ma.thres;
#X floatatom 152 -119 5 0 0 0 - - -;
#X floatatom 201 -77 5 0 0 0 - - -;
#X obj 870 207 pipe 1;
#X text 243 577 Output to ambisonic panner abstraction(s);
#X obj 230 559 s az.1;
#X obj 276 559 s az.2;
#X obj 322 559 s az.3;
#X obj 367 559 s az.4;
#X obj 414 559 s az.5;
#X obj 462 559 s az.6;
#X obj 230 542 demux - - - - - -;
#X obj 521 542 demux - - - - - -;
#X obj 521 559 s ad.1;
#X obj 567 559 s ad.2;
#X obj 613 559 s ad.3;
#X obj 658 559 s ad.4;
#X obj 705 559 s ad.5;
#X obj 753 559 s ad.6;
#X obj 521 515 spigot;
#X obj 230 515 spigot;
#X obj 708 500 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X text 422 -126 If current melodic attraction value = less than threshold
- then spatialise whatever channel note a and b where on apart by equidistant
divisions of 2D space (providing they are played on different strings
- otherwise \, no spatialisation will occur);
#X obj 241 380 s az.1;
#X obj 287 380 s az.2;
#X obj 333 380 s az.3;
#X obj 378 380 s az.4;
#X obj 425 380 s az.5;
#X obj 473 380 s az.6;
#X obj 241 363 demux - - - - - -;
#X obj 521 363 demux - - - - - -;
#X obj 522 380 s ad.1;
#X obj 568 380 s ad.2;
#X obj 614 380 s ad.3;
#X obj 659 380 s ad.4;
#X obj 706 380 s ad.5;
#X obj 754 380 s ad.6;
#X obj 521 332 spigot;
#X obj 241 332 spigot;
#X obj 719 317 tgl 15 0 empty lerdahl.sw empty 17 7 0 10 -262144 -1
-1 0 1;
#X floatatom 251 -17 5 0 0 0 - - -;
#X floatatom 192 532 5 0 0 0 - - -;
#X floatatom 466 532 5 0 0 0 - - -;
#X floatatom 807 148 5 0 0 0 - - -;
#X floatatom 647 54 5 0 0 0 - - -;
#X obj 190 -96 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 190 -33 f;
#X msg 251 224 \$1 1000;
#X msg 241 429 \$1 500;
#X msg 521 428 \$1 500;
#X obj 191 -116 sel 7;
#X obj 718 186 r \$0-s7;
#X obj 764 209 r \$0-s6;
#X obj 754 267 r \$0-s6;
#X obj 725 448 r \$0-s7;
#X obj 248 -94 r asymm.7;
#X obj 248 -72 >= 0.9;
#X obj 190 -54 del 100;
#X obj 279 -171 == 0;
#X obj 278 -152 sel 1;
#X msg 251 -135 16;
#X obj 278 -131 pipe 5;
#X obj 521 143 split 4 10;
#X obj 958 207 split 4 10;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 0 46 1;
#X connect 4 0 7 1;
#X connect 5 0 2 0;
#X connect 5 0 10 0;
#X connect 5 0 7 0;
#X connect 5 0 46 0;
#X connect 7 0 49 0;
#X connect 10 0 114 0;
#X connect 11 0 15 1;
#X connect 11 0 95 0;
#X connect 12 0 13 0;
#X connect 13 0 51 0;
#X connect 13 0 47 1;
#X connect 14 0 12 0;
#X connect 14 0 15 0;
#X connect 14 0 36 0;
#X connect 14 0 47 0;
#X connect 15 0 100 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 90 0;
#X connect 19 0 89 0;
#X connect 20 0 19 1;
#X connect 20 0 18 1;
#X connect 20 0 27 1;
#X connect 20 0 26 1;
#X connect 21 0 81 1;
#X connect 22 0 82 1;
#X connect 23 0 22 0;
#X connect 23 0 21 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 26 0 72 0;
#X connect 27 0 71 0;
#X connect 28 0 64 1;
#X connect 29 0 28 0;
#X connect 29 0 50 0;
#X connect 30 0 17 0;
#X connect 32 0 20 0;
#X connect 33 0 32 0;
#X connect 34 0 33 0;
#X connect 35 0 14 0;
#X connect 36 0 115 0;
#X connect 37 0 38 0;
#X connect 37 0 39 0;
#X connect 37 0 96 0;
#X connect 38 0 40 0;
#X connect 38 0 41 0;
#X connect 39 0 42 0;
#X connect 39 0 43 0;
#X connect 40 0 1 1;
#X connect 41 0 51 1;
#X connect 42 0 1 1;
#X connect 43 0 51 1;
#X connect 44 0 53 0;
#X connect 44 0 102 0;
#X connect 45 0 5 0;
#X connect 46 0 48 0;
#X connect 47 0 55 0;
#X connect 48 0 99 0;
#X connect 49 0 100 0;
#X connect 50 0 63 1;
#X connect 51 0 11 0;
#X connect 52 0 108 1;
#X connect 55 0 99 0;
#X connect 63 0 57 0;
#X connect 63 1 58 0;
#X connect 63 2 59 0;
#X connect 63 3 60 0;
#X connect 63 4 61 0;
#X connect 63 5 62 0;
#X connect 64 0 65 0;
#X connect 64 1 66 0;
#X connect 64 2 67 0;
#X connect 64 3 68 0;
#X connect 64 4 69 0;
#X connect 64 5 70 0;
#X connect 71 0 64 0;
#X connect 71 0 94 0;
#X connect 72 0 63 0;
#X connect 72 0 93 0;
#X connect 73 0 71 1;
#X connect 73 0 72 1;
#X connect 81 0 75 0;
#X connect 81 1 76 0;
#X connect 81 2 77 0;
#X connect 81 3 78 0;
#X connect 81 4 79 0;
#X connect 81 5 80 0;
#X connect 82 0 83 0;
#X connect 82 1 84 0;
#X connect 82 2 85 0;
#X connect 82 3 86 0;
#X connect 82 4 87 0;
#X connect 82 5 88 0;
#X connect 89 0 82 0;
#X connect 90 0 81 0;
#X connect 91 0 89 1;
#X connect 91 0 90 1;
#X connect 92 0 45 0;
#X connect 92 0 35 0;
#X connect 97 0 109 0;
#X connect 98 0 92 0;
#X connect 99 0 16 0;
#X connect 100 0 24 0;
#X connect 101 0 25 0;
#X connect 102 0 97 0;
#X connect 103 0 34 0;
#X connect 104 0 33 1;
#X connect 105 0 23 0;
#X connect 106 0 29 0;
#X connect 107 0 54 0;
#X connect 107 0 108 0;
#X connect 107 0 110 0;
#X connect 108 0 98 1;
#X connect 109 0 98 0;
#X connect 110 0 111 0;
#X connect 111 0 112 0;
#X connect 112 0 113 0;
#X connect 113 0 108 0;
#X connect 114 0 30 0;
#X connect 114 0 101 0;
#X connect 115 0 101 0;
#X connect 115 0 30 0;
#X restore 22 206 pd ma.c7;
#X text 20 28 Spatial gestures based on (sequential) tonal pitch space
quantification;
#X text 101 88 melodic attraction \, asymm done.;
#X text 102 139 use assymetry ratio rather than melodic attraction
value for spatial relationships (asymm.\$1);
#X text 19 230 Consecutive octaves will produce a value of 16;
#X text 20 248 and will thus be treated as greatest possible attraction
\, thus tones should travel together in 2d space;
#X restore 422 356 pd melodic.gestures;
#X text 556 355 Implement time dependent algorithm based on perceived
time between movements in PC space;
#X text 421 120 To further improve upon cognitive model \, produces
tendency and implicative denial values to allow further callibration
;
#X text 425 -15 //Tonal Pitch Space - tonal attraction - relate to
guitar theory - (Cognitive Models based on Quantification of pitch
relationships);
#N canvas 170 58 782 572 find.tonic 0;
#X floatatom 56 212 5 0 0 0 - - -;
#X text 101 191 Receive incoming pitch;
#N canvas 788 335 450 300 pair 0;
#X obj 160 89 inlet;
#X floatatom 160 109 5 0 0 0 - - -;
#X obj 160 130 t f b f;
#X obj 160 154 f;
#X obj 160 179 pack;
#X obj 160 202 outlet;
#X text 33 25 Based on the following tutorial: http://algorithmiccomposer.blogspot.com/2010/05/algorithmic-composition-tutorial-markov.html
;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 1;
#X connect 2 1 3 0;
#X connect 2 2 4 1;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X restore 56 253 pd pair;
#X msg 56 275 merge \$1 \$2;
#X msg 151 279 clear;
#X obj 56 191 r \$0-p;
#X obj 56 296 coll markov;
#C restore;
#N canvas 671 152 539 411 mpgen 0;
#X obj 80 131 length;
#X obj 80 151 t b f;
#X obj 80 174 random;
#X obj 80 107 coll markov;
#C restore;
#X obj 80 82 t f f;
#X obj 198 19 coll markov;
#C restore;
#X obj 80 58 f;
#X obj 80 11 inlet;
#X obj 80 35 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 198 42 5 0 0 0 - - -;
#X msg 198 -2 next;
#X obj 198 -27 inlet;
#X text 125 131 Looks for list length of certain MIDI number in coll
;
#X obj 86 238 pack;
#X obj 86 281 coll markov;
#C restore;
#X msg 86 260 nth \$2 \$1;
#X floatatom 86 302 5 0 0 0 - - -;
#X obj 187 318 outlet;
#X obj 80 195 + 1;
#X obj 209 255 unpack;
#X floatatom 292 295 5 0 0 0 - - -;
#X floatatom 291 272 5 0 0 0 - - -;
#X text 261 272 goto;
#X text 219 295 pick number;
#X text 328 295 in list;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 2 0 18 0;
#X connect 3 0 0 0;
#X connect 4 0 3 0;
#X connect 4 1 13 1;
#X connect 5 0 9 0;
#X connect 6 0 4 0;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 9 0 6 1;
#X connect 10 0 5 0;
#X connect 11 0 10 0;
#X connect 13 0 15 0;
#X connect 13 0 19 0;
#X connect 14 0 16 0;
#X connect 15 0 14 0;
#X connect 16 0 17 0;
#X connect 18 0 13 0;
#X connect 19 0 20 0;
#X connect 19 1 21 0;
#X restore 58 392 pd mpgen;
#X obj 58 345 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 28 380 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 134 369 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 151 369 start new pitch;
#X floatatom 58 412 5 0 0 0 - - -;
#X obj 56 232 int;
#X obj 151 257 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 58 363 metro 300;
#X obj 58 433 pitch;
#X floatatom 71 456 5 0 0 0 - - -;
#X text 56 166 CORROBORATE WITH MARKOV CHAIN;
#X obj 173 478 r tcf;
#X obj 116 518 s tcf.p;
#X obj 116 472 spigot;
#X obj 236 412 r tf.p;
#X obj 58 135 s tf.p;
#X text 213 477 switch;
#X text 55 -13 "Because a piece's overall tonal context is its tonic
\, it is necessary first to develop a method for finding the tonic
(Lerdahl 2001 \, p. 193 \; cf. Krumhansl 1990).;
#X obj 116 495 spigot;
#X obj 557 144 r stf;
#X obj 381 114 timer;
#X floatatom 381 139 5 0 0 0 - - -;
#X text 423 113 Producing time from last note attack;
#X obj 381 197 sel 0 1;
#X text 57 83 CONSIDER THE BASIC SPACE;
#X text 404 57 CONSIDER TIME BETWEEN NOTE ATTACKS;
#X text 197 277 Specified time frame in which to reset Markov chain
;
#X obj 381 161 expr if($f1 >= $f2 \, 1 \, 0);
#X obj 400 242 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 22 450 300 note 0;
#X obj 122 90 r si.1;
#X obj 155 198 outlet;
#X obj 168 88 r si.2;
#X obj 217 88 r si.3;
#X obj 263 86 r si.4;
#X obj 124 118 r si.5;
#X obj 219 116 r si.7;
#X obj 172 118 r si.6;
#X obj 172 164 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 135 57 * make these more accurate;
#X connect 0 0 8 0;
#X connect 2 0 8 0;
#X connect 3 0 8 0;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X restore 408 78 pd note offsets;
#X text 251 134 Sent to global coll;
#X obj 294 155 s nt.off;
#N canvas 291 44 832 670 bs.comparison 0;
#X obj 79 361 outlet;
#X obj 77 137 r \$0-bs1;
#X obj 77 172 mux _ _ _ _ _ _ _;
#X obj 132 137 r \$0-bs2;
#X obj 105 120 r \$0-bs3;
#X obj 119 103 r \$0-bs4;
#X obj 42 155 r \$0-bs5;
#X obj 98 155 r \$0-bs6;
#X obj 153 155 r \$0-bs7;
#X text 79 398 (1) If single pitches are under consideration \, prefer
the interpretation that places the pitches at the highest locations
in the current basic space configuration (Lerdahl 2001 \, p. 198).
;
#X obj 208 234 r sbs;
#X floatatom 84 194 5 0 0 0 - - -;
#X obj 217 85 r counter;
#X obj 217 104 sel 1 2 3 4 5 6 7;
#X floatatom 280 179 5 0 0 0 - - -;
#X floatatom 281 85 5 0 0 0 - - -;
#X msg 221 126 6;
#X msg 227 145 0;
#X msg 254 126 1;
#X msg 256 146 2;
#X msg 289 126 3;
#X msg 295 145 4;
#X msg 326 136 5;
#X text 160 60 (previous note);
#X obj 411 129 r \$0-bs1;
#X obj 411 164 mux _ _ _ _ _ _ _;
#X obj 545 76 r counter;
#X obj 466 129 r \$0-bs2;
#X obj 439 112 r \$0-bs3;
#X obj 453 95 r \$0-bs4;
#X obj 376 147 r \$0-bs5;
#X obj 432 147 r \$0-bs6;
#X obj 487 147 r \$0-bs7;
#X floatatom 412 187 5 0 0 0 - - -;
#X obj 545 95 sel 1 2 3 4 5 6 7;
#X msg 549 117 0;
#X msg 555 136 1;
#X msg 582 117 2;
#X msg 584 137 3;
#X msg 617 117 4;
#X msg 623 136 5;
#X msg 654 127 6;
#X floatatom 608 170 5 0 0 0 - - -;
#X floatatom 609 76 5 0 0 0 - - -;
#X text 533 45 (current note - BS);
#X floatatom 122 327 5 0 0 0 - - -;
#X obj 208 263 i;
#X floatatom 244 280 5 0 0 0 - - -;
#X text 248 233 receive minimum basic space (min of 1);
#X text 78 464 This system can afford to be a little less comprehensive
\, given the improvisatory performance style (non tonal chromaticism
| pedal point playing).;
#X text 491 604 cf. Bregman 1990 \, p. 476 - melodic anchoring;
#X text 29 6 Decrease in the basic space \, i.e. if next tone becomes
less stable in current basic space configuration - consider changing
pitch class zero based on most repeating note;
#X text 95 593 "These melodic fragments indicate that the choice with
the least overall embedding in the basic space guides the provisional
assignment of tonic orientation";
#X text 429 638 one of many factors in finding the tonic;
#X obj 79 296 expr $f1 < $f2 && $f1 < $f3;
#X text 302 272 $f1 (current tone) $f2 (previous tone) + $f3 (minimum
basic space \, specified by the user. Expression = if current tone's
basic space is less than the previous tone's basic space (i.e. if the
pitch sequence has moved to a less stable tonal context) AND the current
space is less than embedding specified by the user THEN produce 1 (criteria
satisfied) ELSE 0 (in order to work with expression concerning Markov
chain.;
#X text 79 514 if basic spaces are the same? they are part of the same
collection \, so expression assumes current tone combination apart
of the same collection \, and tonic finder assumes an inertial state
;
#X text 427 2 "a tone cannot be anchored by one that precedes it" (bregman
1990 \, p. 475).;
#X obj 105 254 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 3 0 2 1;
#X connect 4 0 2 2;
#X connect 5 0 2 3;
#X connect 6 0 2 4;
#X connect 7 0 2 5;
#X connect 8 0 2 6;
#X connect 10 0 46 0;
#X connect 11 0 54 1;
#X connect 12 0 13 0;
#X connect 12 0 15 0;
#X connect 13 0 16 0;
#X connect 13 1 17 0;
#X connect 13 2 18 0;
#X connect 13 3 19 0;
#X connect 13 4 20 0;
#X connect 13 5 21 0;
#X connect 13 6 22 0;
#X connect 14 0 2 7;
#X connect 16 0 14 0;
#X connect 17 0 14 0;
#X connect 18 0 14 0;
#X connect 19 0 14 0;
#X connect 20 0 14 0;
#X connect 21 0 14 0;
#X connect 22 0 14 0;
#X connect 24 0 25 0;
#X connect 25 0 33 0;
#X connect 26 0 34 0;
#X connect 26 0 43 0;
#X connect 27 0 25 1;
#X connect 28 0 25 2;
#X connect 29 0 25 3;
#X connect 30 0 25 4;
#X connect 31 0 25 5;
#X connect 32 0 25 6;
#X connect 33 0 54 0;
#X connect 34 0 35 0;
#X connect 34 1 36 0;
#X connect 34 2 37 0;
#X connect 34 3 38 0;
#X connect 34 4 39 0;
#X connect 34 5 40 0;
#X connect 34 6 41 0;
#X connect 35 0 42 0;
#X connect 36 0 42 0;
#X connect 37 0 42 0;
#X connect 38 0 42 0;
#X connect 39 0 42 0;
#X connect 40 0 42 0;
#X connect 41 0 42 0;
#X connect 42 0 25 7;
#X connect 46 0 47 0;
#X connect 46 0 54 2;
#X connect 54 0 0 0;
#X connect 54 0 45 0;
#X connect 58 0 54 0;
#X restore 58 111 pd bs.comparison;
#X floatatom 290 429 5 0 0 0 - - -;
#X text 58 481 new pc 0?;
#X text 433 191 if time exceeds user threshold \, consider changing
pitch class zero;
#X obj 58 324 r tcf;
#X text 407 95 Note offset controls reset and printout of each time
elapsed;
#X floatatom 15 450 5 0 0 0 - - -;
#N canvas 0 22 964 701 more 0;
#X text 70 -214 Moreover \, characteristics other than specific intervals
have been indicated as additional cues for key perceptionfor example
\, two and three tone transitions (Krumhansl \, 1979 \, 1990 \, 2000)
\; a grouping of consecutive pitches on the basis of pitch proximity
(Deutsch \, 1984) \; a combination of specific intervals (e.g. \, Vos
\, 2000) \; the pitch of the last tone of a sequence (Lamont \, 1998
\; Parncutt & Bregman \, 2000) \; both the pitches of the opening tone
and the last tone of a sequence (Cuddy \, Cohen \, & Mewhort \, 1981
\; Dowling \, 1991) \; a combination of specific pitches (e.g. \, Bharucha
\, 1984 \; Cuddy et al. \, 1981 \; Povel & Jansen \, 2001 \, 2002)
\; and pitch salience and sensory memory decay (Huron & Parncutt \,
1993).;
#X text 11 -245 Consider intervals... &;
#X text 134 21 RIE MATSUNAGA AND JUN-ICHI ABE Department of Psychology
\, Hokkaido University;
#X text 114 73 Pitch salience depends on the degree to which partials
are harmonic;
#X text 250 141 See melodic anchor....;
#X text 242 165 Look at japanese paper on identifying tonic in sequence
;
#X text 244 193 pitch salience (degree of consonance and dissoance)
;
#X text 208 260 see david huron paper concerns pitch salience and echoic
memory;
#N canvas 0 22 1135 725 huron 0;
#X obj 159 152 image huron1.gif;
#X obj 240 488 image huron2.gif;
#X obj 766 482 image huron3.gif;
#X text 413 626 under < 90s versus > 120s;
#X restore 126 233 pd huron;
#X text 60 312 The following algorithm assumes that "when a single
note of chord sounds itself in isolation \, the listener assumes that
it is the tonic. for the shortest distance from an event is to itself"
(Lerdahl 2001 \, p. 194).;
#X text 60 371 Tonal Anchor - "This implies that tonality is flexible
and in continuous flux as a line evolves. Within the progress of the
line itself \, temporary points of tonality may be established as anchors"
(liebman p. 55);
#X text 458 300 "criterion includes the familiar claim that stated
or implied diatonic collection is a factor in finding the tonic. For
if a (partial) collection fits at a diatonic level etc.";
#X text 457 361 rare intervals \, because they do not happen very often
may tell us more about what the collection might be versus a more stable
position in the space;
#X text 459 411 the elements of the presumed collection are given the
least embedded interpretation in the space (p. 194).;
#X restore 59 54 pd more info;
#X obj 134 333 sel 1;
#X obj 149 450 expr $f1 == $f2 == $f3;
#N canvas 561 153 496 219 interval 0;
#X obj 196 180 outlet;
#X text 27 34 0 = unison \, 8ve;
#X text 27 119 6 = tritone;
#X text 27 50 1 = minor 2/maj7th;
#X text 27 66 2 = major 2/min 7th;
#X text 27 80 3 = min 3rd/maj 6th;
#X text 27 107 5 = p4/p5;
#X text 27 95 4 = mj 3rd/minor 6th;
#X obj 196 133 mux _ _ _ _ _ _ _;
#X obj 330 45 r counter;
#X floatatom 196 156 5 0 0 0 - - -;
#X obj 330 64 sel 1 2 3 4 5 6 7;
#X msg 334 86 0;
#X msg 340 105 1;
#X msg 367 86 2;
#X msg 369 106 3;
#X msg 402 86 4;
#X msg 408 105 5;
#X msg 439 96 6;
#X floatatom 393 139 5 0 0 0 - - -;
#X floatatom 394 45 5 0 0 0 - - -;
#X obj 161 116 r \$0-ic5;
#X obj 238 64 r \$0-ic4;
#X obj 224 81 r \$0-ic3;
#X obj 196 98 r \$0-ic1;
#X obj 217 116 r \$0-ic6;
#X obj 251 98 r \$0-ic2;
#X obj 272 116 r \$0-ic7;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 9 0 20 0;
#X connect 10 0 0 0;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 11 2 14 0;
#X connect 11 3 15 0;
#X connect 11 4 16 0;
#X connect 11 5 17 0;
#X connect 11 6 18 0;
#X connect 12 0 19 0;
#X connect 13 0 19 0;
#X connect 14 0 19 0;
#X connect 15 0 19 0;
#X connect 16 0 19 0;
#X connect 17 0 19 0;
#X connect 18 0 19 0;
#X connect 19 0 8 7;
#X connect 21 0 8 4;
#X connect 22 0 8 3;
#X connect 23 0 8 2;
#X connect 24 0 8 0;
#X connect 25 0 8 5;
#X connect 26 0 8 1;
#X connect 27 0 8 6;
#X restore 353 434 pd interval;
#X floatatom 304 472 5 0 0 0 - - -;
#X text 353 474 If current interval is not a tritone then do not change
tonic \, assuming interval may be apart of a diatonic \, triadic \,
or 8ve collection (including minor second);
#X text 429 430 Consider Interval Class?;
#X text 355 329 //HOW IT WORKS?? So \, if the basic space of current
tone is less than previous tone \, the time elapsed from previous note
attack exceeds threshold \, and the current interval class is a tritone
- then change to most prominent note in markov chain matrix;
#X obj 353 455 expr if($f1 == 6 \, 1 \, 0);
#X floatatom 133 128 5 0 0 0 - - -;
#X floatatom 167 141 5 0 0 0 - - -;
#X connect 0 0 13 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 6 0;
#X connect 5 0 0 0;
#X connect 7 0 12 0;
#X connect 8 0 15 0;
#X connect 10 0 7 1;
#X connect 12 0 16 0;
#X connect 13 0 2 0;
#X connect 14 0 4 0;
#X connect 15 0 9 0;
#X connect 15 0 7 0;
#X connect 16 0 46 0;
#X connect 16 2 17 0;
#X connect 17 0 21 0;
#X connect 19 0 26 1;
#X connect 21 0 26 0;
#X connect 22 0 41 0;
#X connect 22 0 49 1;
#X connect 26 0 20 0;
#X connect 27 0 35 1;
#X connect 28 0 29 0;
#X connect 29 0 35 0;
#X connect 29 0 39 0;
#X connect 31 1 36 0;
#X connect 35 0 31 0;
#X connect 35 0 49 0;
#X connect 36 0 14 0;
#X connect 37 0 28 1;
#X connect 37 0 28 0;
#X connect 40 0 23 0;
#X connect 40 0 56 0;
#X connect 44 0 8 0;
#X connect 48 0 10 0;
#X connect 49 0 21 1;
#X connect 49 0 48 0;
#X connect 49 0 8 0;
#X connect 50 0 55 0;
#X connect 55 0 51 0;
#X connect 55 0 49 2;
#X restore 424 259 pd find.tonic;
#X text 515 254 Lerdahl + First order markov chain used to select/find
tonal centre;
#X text 511 192 Considering step-wise reversal motion and melodic continuity
;
#N canvas 0 22 751 444 more.info 0;
#X text 74 116 Overall \, the point of this cognitive model is to "capture
the interaction of melodic attraction and melodic direction in a stepwise
context" in real-time sequential pitch structure. And why linear completion
is important to tonal concepts \, such as voice leading (Lerdahl 2001
\, p. 171).;
#X text 74 193 To attend to harmonic/simultaneous structures \, pitch
tracker and instrument resonance would need to be improved;
#X text 77 226 Jackendoff 1991 \; Foder 1983 - "unconscious processing
of music continues on blindly" - Is there some link between expectation
algorithm \, and memory? If expectations are further away in pitch
space \, then slow interpolation time Lerdahl 2006?;
#X text 167 357 tend.\$1 (tendency offset);
#X text 169 320 ma.c\$1 (melodic attraction value);
#X text 168 338 man.c\$1 (assymetry ratio offset);
#X text 167 373 deni.\$1 (denial offset);
#X text 77 36 The author must consider what values potentially generated
by Lerdahl's melodic rules would be most useful in the context of a
live performance system - conceptually speaking - in order to establish
a compositional narrative between TSP \, spatialisation via ambisonics
\, and other synthesis parameters;
#X restore 796 -9 pd more.info;
#X text 420 314 //Resultant timbral and spatial gestures (cognitively
equidistant gestures?);
#N canvas 0 22 1280 752 melodic.attraction 0;
#X text 112 75 Based on s2/s1 * 1/npow2;
#X text 310 29 * based on Newton's "inverse-square law" - Whereby the
gravitational attraction between masses is inversely proportional to
the square distance of the distance between them (Lerdahl 2001 \, p.
163).;
#X text 1015 521 1 C C# D D# E F F# G G# A A# B C;
#X text 1015 503 2 C D E F G A B C;
#X text 1015 483 3 C E G C PC 4 7;
#X text 1015 466 4 C C PC 0;
#N canvas 0 22 531 704 lerdahl.notes 0;
#X text 72 375 ATTRACTIONAL ASYMMETRIES (Lerdahl 2001 \, p. 167);
#X text 76 635 This equation accounts for ascending and descending
pitch sets and relative attraction between tones;
#X text 74 571 See also: An attractional approach to harmony & voice
leading attractions (p. 173).;
#X text 72 423 * cite bregman in terms of anchoring a note and synder
in terms of choosing a 7 note phrases as a maximum to work with;
#X text 70 399 *applicable to interval classes;
#X text 73 462 implement swarm function.... everything centred \, attenuate
amplitude (increase distance) \, then group based on melodic attraction
;
#X text 73 508 implement blending - interpolate tension data to allow
for blending using reverb to resolve beating issues between tensions.
i.e. increase reverb on chc if tension is high \, reduce if tension
is low etc....;
#X text 75 617 Melodic attraction based on basic space and pc distance
;
#X text 73 52 Where p1 and p2 are not equal (p1 -> p2) = the attraction
of p1 to p2;
#X text 73 88 s1 = anchoring strength of p1 & s2 = anchoring strength
of p2 in the current basic space configuration. n = number of semitone
intervals between p1 and p2;
#X text 73 24 MELODIC ATTRACTION = (p1 -> p2) = s2/s1 X 1/n(sqrt);
#X text 73 322 Send value for melodic attraction between each note
in pitch set;
#X text 72 275 Greater the number \, greater the attraction (p. 164)
;
#X text 72 144 Quantifying melodic attraction (context of PC 0 = C)
;
#X text 41 176 e.g. (B -> C) = 4/2 X 1/1(pow2) = 4/2 = 2;
#X text 72 200 (A -> G) = 3/2 X 1/2(pow2) = 3/8 = 0.375;
#X text 72 223 (F -> G) = 3/2 X 1/2(pow2) = 1.5 x 0.25 = 0.375;
#X text 73 248 (C -> F#) = 1/4 x 1/6(pow2) = 0.25 x 1/36 = 0.0069444
;
#X text 73 289 melodic attraction based on basic space and pc distance
;
#X text 72 306 Should I omit 8ve equivalencies?? Otherwise == 0;
#X restore 1016 554 pd lerdahl.notes;
#X floatatom 116 130 5 0 0 0 - - -;
#X obj 116 110 r counter;
#X obj 212 159 abs;
#X floatatom 212 257 5 0 0 0 - - -;
#X floatatom 89 299 10 0 0 0 - - -;
#X obj 212 178 pow 2;
#X floatatom 212 119 5 0 0 0 - - -;
#X obj 212 140 % 12;
#X floatatom 262 157 5 0 0 0 - - -;
#X text 1013 434 where pc 0 = C;
#X text 102 656 0.5 = aggregate tonal melodic attraction;
#X obj 89 321 s ma.c1;
#X obj 89 275 expr $f2 / $f3 * $f4 \;;
#X obj 535 158 abs;
#X floatatom 412 302 10 0 0 0 - - -;
#X obj 535 179 pow 2;
#X floatatom 535 120 5 0 0 0 - - -;
#X obj 535 141 % 12;
#X floatatom 585 158 5 0 0 0 - - -;
#X floatatom 412 213 5 0 0 0 - - -;
#X text 411 179 new;
#X floatatom 473 220 5 0 0 0 - - -;
#X text 470 189 previous;
#X obj 412 278 expr $f2 / $f3 * $f4 \;;
#X obj 412 193 r \$0-bs2;
#X obj 473 203 r \$0-bs1;
#X obj 412 324 s ma.c2;
#X obj 852 160 abs;
#X floatatom 729 306 10 0 0 0 - - -;
#X obj 852 181 pow 2;
#X floatatom 852 122 5 0 0 0 - - -;
#X obj 852 143 % 12;
#X floatatom 902 160 5 0 0 0 - - -;
#X floatatom 729 217 5 0 0 0 - - -;
#X text 728 183 new;
#X floatatom 790 224 5 0 0 0 - - -;
#X text 787 193 previous;
#X obj 729 282 expr $f2 / $f3 * $f4 \;;
#X obj 1175 164 abs;
#X floatatom 1052 309 10 0 0 0 - - -;
#X obj 1175 185 pow 2;
#X floatatom 1175 126 5 0 0 0 - - -;
#X obj 1175 147 % 12;
#X floatatom 1225 164 5 0 0 0 - - -;
#X floatatom 1052 220 5 0 0 0 - - -;
#X text 1051 186 new;
#X floatatom 1113 227 5 0 0 0 - - -;
#X text 1110 196 previous;
#X obj 1052 285 expr $f2 / $f3 * $f4 \;;
#X obj 729 197 r \$0-bs3;
#X obj 790 207 r \$0-bs2;
#X obj 729 329 s ma.c3;
#X obj 1052 331 s ma.c4;
#X obj 1052 200 r \$0-bs4;
#X obj 1113 210 r \$0-bs3;
#X obj 208 413 abs;
#X floatatom 85 557 10 0 0 0 - - -;
#X obj 208 434 pow 2;
#X floatatom 208 375 5 0 0 0 - - -;
#X obj 208 396 % 12;
#X floatatom 258 413 5 0 0 0 - - -;
#X floatatom 85 468 5 0 0 0 - - -;
#X text 84 434 new;
#X floatatom 146 475 5 0 0 0 - - -;
#X text 143 444 previous;
#X obj 85 533 expr $f2 / $f3 * $f4 \;;
#X obj 531 416 abs;
#X floatatom 408 560 10 0 0 0 - - -;
#X obj 531 437 pow 2;
#X floatatom 531 378 5 0 0 0 - - -;
#X obj 531 399 % 12;
#X floatatom 581 416 5 0 0 0 - - -;
#X floatatom 408 471 5 0 0 0 - - -;
#X text 407 437 new;
#X floatatom 469 478 5 0 0 0 - - -;
#X text 466 447 previous;
#X obj 408 536 expr $f2 / $f3 * $f4 \;;
#X obj 85 580 s ma.c5;
#X obj 85 448 r \$0-bs5;
#X obj 146 458 r \$0-bs4;
#X obj 408 582 s ma.c6;
#X obj 408 451 r \$0-bs6;
#X obj 469 461 r \$0-bs5;
#X obj 859 409 abs;
#X floatatom 736 557 10 0 0 0 - - -;
#X obj 859 430 pow 2;
#X floatatom 859 371 5 0 0 0 - - -;
#X obj 859 392 % 12;
#X floatatom 909 409 5 0 0 0 - - -;
#X floatatom 736 468 5 0 0 0 - - -;
#X text 735 434 new;
#X floatatom 797 475 5 0 0 0 - - -;
#X text 794 444 previous;
#X obj 736 533 expr $f2 / $f3 * $f4 \;;
#X obj 736 579 s ma.c7;
#X obj 736 448 r \$0-bs7;
#X obj 797 458 r \$0-bs6;
#X obj 20 176 sel 1;
#X obj 20 197 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 366 205 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 366 163 5 0 0 0 - - -;
#X obj 366 143 r counter;
#X obj 366 184 sel 2;
#X obj 685 221 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 685 179 5 0 0 0 - - -;
#X obj 685 159 r counter;
#X obj 685 200 sel 3;
#X obj 1000 229 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 1000 187 5 0 0 0 - - -;
#X obj 1000 167 r counter;
#X obj 1000 208 sel 4;
#X obj 34 475 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 34 433 5 0 0 0 - - -;
#X obj 34 413 r counter;
#X obj 34 454 sel 5;
#X obj 359 479 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 359 437 5 0 0 0 - - -;
#X obj 359 417 r counter;
#X obj 359 458 sel 6;
#X obj 694 481 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 694 439 5 0 0 0 - - -;
#X obj 694 419 r counter;
#X obj 694 460 sel 7;
#X obj 20 217 del 50;
#X obj 366 232 del 50;
#X obj 685 242 del 50;
#X obj 1000 251 del 50;
#X obj 34 496 del 50;
#X obj 359 501 del 50;
#X obj 694 503 del 50;
#X text 778 31 Repeating unisons produce zero!;
#X text 813 59 could be mapped to spatial inertia....;
#X obj 212 98 r \$0-pcd1;
#X obj 535 99 r \$0-pcd2;
#X obj 852 101 r \$0-pcd3;
#X obj 1175 105 r \$0-pcd4;
#X obj 208 356 r \$0-pcd5;
#X obj 531 356 r \$0-pcd6;
#X obj 859 350 r \$0-pcd7;
#X floatatom 535 260 5 0 0 0 - - -;
#X obj 535 239 /;
#X msg 535 220 1;
#X floatatom 852 262 5 0 0 0 - - -;
#X floatatom 1175 265 5 0 0 0 - - -;
#X floatatom 208 514 5 0 0 0 - - -;
#X floatatom 531 517 5 0 0 0 - - -;
#X floatatom 859 514 5 0 0 0 - - -;
#X floatatom 79 197 5 0 0 0 - - -;
#X text 78 163 new;
#X obj 79 177 r \$0-bs1;
#X text 137 176 previous;
#X obj 140 190 r \$0-bs7;
#X floatatom 161 207 5 0 0 0 - - -;
#X obj 535 199 t b f;
#X obj 212 238 /;
#X msg 212 219 1;
#X obj 212 198 t b f;
#X obj 852 241 /;
#X msg 852 222 1;
#X obj 852 201 t b f;
#X obj 1175 246 /;
#X msg 1175 227 1;
#X obj 1175 206 t b f;
#X obj 208 494 /;
#X msg 208 475 1;
#X obj 208 454 t b f;
#X obj 531 497 /;
#X msg 531 478 1;
#X obj 531 457 t b f;
#X obj 859 492 /;
#X msg 859 473 1;
#X obj 859 452 t b f;
#X connect 7 0 104 0;
#X connect 8 0 7 0;
#X connect 9 0 12 0;
#X connect 10 0 19 3;
#X connect 11 0 18 0;
#X connect 12 0 163 0;
#X connect 13 0 14 0;
#X connect 14 0 9 0;
#X connect 14 0 15 0;
#X connect 19 0 11 0;
#X connect 20 0 22 0;
#X connect 21 0 33 0;
#X connect 22 0 160 0;
#X connect 23 0 24 0;
#X connect 24 0 20 0;
#X connect 24 0 25 0;
#X connect 26 0 30 1;
#X connect 28 0 30 2;
#X connect 30 0 21 0;
#X connect 31 0 26 0;
#X connect 32 0 28 0;
#X connect 34 0 36 0;
#X connect 35 0 58 0;
#X connect 36 0 166 0;
#X connect 37 0 38 0;
#X connect 38 0 34 0;
#X connect 38 0 39 0;
#X connect 40 0 44 1;
#X connect 42 0 44 2;
#X connect 44 0 35 0;
#X connect 45 0 47 0;
#X connect 46 0 59 0;
#X connect 47 0 169 0;
#X connect 48 0 49 0;
#X connect 49 0 45 0;
#X connect 49 0 50 0;
#X connect 51 0 55 1;
#X connect 53 0 55 2;
#X connect 55 0 46 0;
#X connect 56 0 40 0;
#X connect 57 0 42 0;
#X connect 60 0 51 0;
#X connect 61 0 53 0;
#X connect 62 0 64 0;
#X connect 63 0 84 0;
#X connect 64 0 172 0;
#X connect 65 0 66 0;
#X connect 66 0 62 0;
#X connect 66 0 67 0;
#X connect 68 0 72 1;
#X connect 70 0 72 2;
#X connect 72 0 63 0;
#X connect 73 0 75 0;
#X connect 74 0 87 0;
#X connect 75 0 175 0;
#X connect 76 0 77 0;
#X connect 77 0 73 0;
#X connect 77 0 78 0;
#X connect 79 0 83 1;
#X connect 81 0 83 2;
#X connect 83 0 74 0;
#X connect 85 0 68 0;
#X connect 86 0 70 0;
#X connect 88 0 79 0;
#X connect 89 0 81 0;
#X connect 90 0 92 0;
#X connect 91 0 101 0;
#X connect 92 0 178 0;
#X connect 93 0 94 0;
#X connect 94 0 90 0;
#X connect 94 0 95 0;
#X connect 96 0 100 1;
#X connect 98 0 100 2;
#X connect 100 0 91 0;
#X connect 102 0 96 0;
#X connect 103 0 98 0;
#X connect 104 0 105 0;
#X connect 105 0 130 0;
#X connect 106 0 131 0;
#X connect 107 0 109 0;
#X connect 108 0 107 0;
#X connect 109 0 106 0;
#X connect 110 0 132 0;
#X connect 111 0 113 0;
#X connect 112 0 111 0;
#X connect 113 0 110 0;
#X connect 114 0 133 0;
#X connect 115 0 117 0;
#X connect 116 0 115 0;
#X connect 117 0 114 0;
#X connect 118 0 134 0;
#X connect 119 0 121 0;
#X connect 120 0 119 0;
#X connect 121 0 118 0;
#X connect 122 0 135 0;
#X connect 123 0 125 0;
#X connect 124 0 123 0;
#X connect 125 0 122 0;
#X connect 126 0 136 0;
#X connect 127 0 129 0;
#X connect 128 0 127 0;
#X connect 129 0 126 0;
#X connect 130 0 19 0;
#X connect 131 0 30 0;
#X connect 132 0 44 0;
#X connect 133 0 55 0;
#X connect 134 0 72 0;
#X connect 135 0 83 0;
#X connect 136 0 100 0;
#X connect 139 0 13 0;
#X connect 140 0 23 0;
#X connect 141 0 37 0;
#X connect 142 0 48 0;
#X connect 143 0 65 0;
#X connect 144 0 76 0;
#X connect 145 0 93 0;
#X connect 146 0 30 3;
#X connect 147 0 146 0;
#X connect 148 0 147 0;
#X connect 149 0 44 3;
#X connect 150 0 55 3;
#X connect 151 0 72 3;
#X connect 152 0 83 3;
#X connect 153 0 100 3;
#X connect 154 0 19 1;
#X connect 156 0 154 0;
#X connect 158 0 19 2;
#X connect 158 0 159 0;
#X connect 160 0 148 0;
#X connect 160 1 147 1;
#X connect 161 0 10 0;
#X connect 162 0 161 0;
#X connect 163 0 162 0;
#X connect 163 1 161 1;
#X connect 164 0 149 0;
#X connect 165 0 164 0;
#X connect 166 0 165 0;
#X connect 166 1 164 1;
#X connect 167 0 150 0;
#X connect 168 0 167 0;
#X connect 169 0 168 0;
#X connect 169 1 167 1;
#X connect 170 0 151 0;
#X connect 171 0 170 0;
#X connect 172 0 171 0;
#X connect 172 1 170 1;
#X connect 173 0 152 0;
#X connect 174 0 173 0;
#X connect 175 0 174 0;
#X connect 175 1 173 1;
#X connect 176 0 153 0;
#X connect 177 0 176 0;
#X connect 178 0 177 0;
#X connect 178 1 176 1;
#X restore 425 82 pd melodic.attraction;
#N canvas 0 22 1280 752 tendency 0;
#X text -696 -4 Compare to stepwise diatonic motion either side of
tone e.g. E to F produces a lower MA going to G than back in the opposite
direction \, to E in the context of I/C = 0 - then subtract the value
= and this will give a value for tendency to go from F to G = 1 - 1.5
= -0.5;
#X text -694 -218 The following formula begins by assigning the value
of 1 to what Lerdahl refers to as an "inertial tendency" The next step
is to add the melodic inertia and attraction values for each tone together
if the direction is the same \, or subtract the expectation values
(tendency) if the direction is not the same. e.g. tendency = inertia
(1) (+/-) melodic attraction = 1 + 1.5 = 2.5;
#X text -696 168 This algorithm does not take into account all factors
that influence overall melodic tendency \, such as motivic or elaborational
pattern \, but covers inertial and attractional vectors in a stepwise
context;
#N canvas 148 216 727 521 tend.t1 0;
#X obj 429 248 r counter;
#X floatatom 429 269 5 0 0 0 - - -;
#X obj -32 100 * \$1;
#X floatatom -32 121 5 0 0 0 - - -;
#X obj 14 83 r iert.os;
#X obj -32 140 s tend.1;
#X text 87 72 This expression will output the "tendency" (p. 171) to
go to this tone;
#X floatatom -32 71 5 0 0 0 - - -;
#X obj 289 -19 r asymm.ma7;
#X floatatom 289 1 5 0 0 0 - - -;
#X floatatom -32 -5 10 0 0 0 - - -;
#X obj -32 -28 r man.c1;
#X text -35 -49 MA C.Tone;
#N canvas 0 22 450 300 potential.development 0;
#X text 23 -71 is the melodic motion the same?;
#X obj 144 -44 r \$0-pcd1;
#X obj 28 -41 r \$0-pcd7;
#X obj 144 -23 > 0;
#X obj 28 -20 > 0;
#X obj 144 0 sel 1;
#X obj 28 1 sel 1;
#X msg 28 23 1;
#X msg 55 23 0;
#X msg 144 22 1;
#X msg 175 22 0;
#X obj 28 45 i;
#X obj 145 48 i;
#X text 30 -59 from 6 to 7;
#X text 144 -61 from 7 to 1;
#X floatatom 62 -24 5 0 0 0 - - -;
#X floatatom 185 -27 5 0 0 0 - - -;
#X text 7 77 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 && $f4 !=
$f3 \, 1 - $f1 \, 0));
#X text 3 117 Further corroborating realised pitch motion may be essential
as stepwise reversal may be less than current melodic attraction value
obtained by breaking continuity of melodic motion;
#X connect 1 0 3 0;
#X connect 1 0 16 0;
#X connect 2 0 4 0;
#X connect 2 0 15 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 9 0;
#X connect 5 1 10 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X restore -34 400 pd potential.development;
#X text 287 -39 MA from note 7 and 6 (asymm) == stepwise reversal;
#X obj -7 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj -32 45 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 \, 1 - $f2
\, 0));
#X text -35 302 If attraction values are the same \, the expression
will produce zero.;
#X text 33 127 The system will treat the "tendency" value as a differential/spatial
offset;
#X text -36 335 If the realised tone configuration is less than the
stepwise reversal \, the expression will subtract the (wasted) potential
from the "melodic inertia" value of 1 \, producing a smaller value.
;
#X text -35 182 If current melodic attraction is more than stepwise
reversal calculated by previous assymetry ratio algorithm \, then add
melodic inertia to melodic attraction value (tendency) ELSE if current
melodic attraction value is less than stepwise reversal \, and provides
a greater attraction (in the opposite melodic direction) which disrupts
melodic continuity \, THEN subtract melodic attraction from melodic
inertia.;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 2 1;
#X connect 7 0 2 0;
#X connect 8 0 9 0;
#X connect 9 0 16 1;
#X connect 10 0 15 0;
#X connect 10 0 16 0;
#X connect 11 0 10 0;
#X connect 16 0 7 0;
#X restore -692 -109 pd tend.t1;
#N canvas 148 216 727 521 tend.t2 0;
#X obj 429 248 r counter;
#X floatatom 429 269 5 0 0 0 - - -;
#X obj -32 100 * \$1;
#X floatatom -32 121 5 0 0 0 - - -;
#X obj 14 83 r iert.os;
#X text 87 72 This expression will output the "tendency" (p. 171) to
go to this tone;
#X floatatom -32 71 5 0 0 0 - - -;
#X floatatom 289 1 5 0 0 0 - - -;
#X floatatom -32 -5 10 0 0 0 - - -;
#X text -35 -49 MA C.Tone;
#N canvas 0 22 450 300 potential.development 0;
#X text 23 -71 is the melodic motion the same?;
#X obj 144 -44 r \$0-pcd1;
#X obj 28 -41 r \$0-pcd7;
#X obj 144 -23 > 0;
#X obj 28 -20 > 0;
#X obj 144 0 sel 1;
#X obj 28 1 sel 1;
#X msg 28 23 1;
#X msg 55 23 0;
#X msg 144 22 1;
#X msg 175 22 0;
#X obj 28 45 i;
#X obj 145 48 i;
#X text 30 -59 from 6 to 7;
#X text 144 -61 from 7 to 1;
#X floatatom 62 -24 5 0 0 0 - - -;
#X floatatom 185 -27 5 0 0 0 - - -;
#X text 7 77 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 && $f4 !=
$f3 \, 1 - $f1 \, 0));
#X text 3 117 Further corroborating realised pitch motion may be essential
as stepwise reversal may be less than current melodic attraction value
obtained by breaking continuity of melodic motion;
#X connect 1 0 3 0;
#X connect 1 0 16 0;
#X connect 2 0 4 0;
#X connect 2 0 15 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 9 0;
#X connect 5 1 10 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X restore -34 400 pd potential.development;
#X obj -7 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj -32 45 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 \, 1 - $f2
\, 0));
#X text -35 302 If attraction values are the same \, the expression
will produce zero.;
#X text 33 127 The system will treat the "tendency" value as a differential/spatial
offset;
#X text -36 335 If the realised tone configuration is less than the
stepwise reversal \, the expression will subtract the (wasted) potential
from the "melodic inertia" value of 1 \, producing a smaller value.
;
#X text -35 182 If current melodic attraction is more than stepwise
reversal calculated by previous assymetry ratio algorithm \, then add
melodic inertia to melodic attraction value (tendency) ELSE if current
melodic attraction value is less than stepwise reversal \, and provides
a greater attraction (in the opposite melodic direction) which disrupts
melodic continuity \, THEN subtract melodic attraction from melodic
inertia.;
#X obj -32 -28 r man.c2;
#X obj 289 -19 r asymm.ma1;
#X obj -32 140 s tend.2;
#X text 287 -39 MA from note 1 and 7 (asymm) == stepwise reversal;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 19 0;
#X connect 4 0 2 1;
#X connect 6 0 2 0;
#X connect 7 0 12 1;
#X connect 8 0 11 0;
#X connect 8 0 12 0;
#X connect 12 0 6 0;
#X connect 17 0 8 0;
#X connect 18 0 7 0;
#X restore -692 -87 pd tend.t2;
#X text -696 68 The following algorithm compares current to next tone
against previous step-wise motion. If current melodic attraction between
current and next tone is greater than previous stepwise motion provided
by assymetry algorithm and thus the melodic motion/continuity continues
in the same direct (relative to gestalt psychology of good continuation)
then add melodic interia \, else subtract.;
#N canvas 148 216 727 521 tend.t3 0;
#X obj 429 248 r counter;
#X floatatom 429 269 5 0 0 0 - - -;
#X obj -32 100 * \$1;
#X floatatom -32 121 5 0 0 0 - - -;
#X obj 14 83 r iert.os;
#X text 87 72 This expression will output the "tendency" (p. 171) to
go to this tone;
#X floatatom -32 71 5 0 0 0 - - -;
#X floatatom 289 1 5 0 0 0 - - -;
#X floatatom -32 -5 10 0 0 0 - - -;
#X text -35 -49 MA C.Tone;
#N canvas 0 22 450 300 potential.development 0;
#X text 23 -71 is the melodic motion the same?;
#X obj 144 -44 r \$0-pcd1;
#X obj 28 -41 r \$0-pcd7;
#X obj 144 -23 > 0;
#X obj 28 -20 > 0;
#X obj 144 0 sel 1;
#X obj 28 1 sel 1;
#X msg 28 23 1;
#X msg 55 23 0;
#X msg 144 22 1;
#X msg 175 22 0;
#X obj 28 45 i;
#X obj 145 48 i;
#X text 30 -59 from 6 to 7;
#X text 144 -61 from 7 to 1;
#X floatatom 62 -24 5 0 0 0 - - -;
#X floatatom 185 -27 5 0 0 0 - - -;
#X text 7 77 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 && $f4 !=
$f3 \, 1 - $f1 \, 0));
#X text 3 117 Further corroborating realised pitch motion may be essential
as stepwise reversal may be less than current melodic attraction value
obtained by breaking continuity of melodic motion;
#X connect 1 0 3 0;
#X connect 1 0 16 0;
#X connect 2 0 4 0;
#X connect 2 0 15 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 9 0;
#X connect 5 1 10 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X restore -34 400 pd potential.development;
#X obj -7 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj -32 45 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 \, 1 - $f2
\, 0));
#X text -35 302 If attraction values are the same \, the expression
will produce zero.;
#X text 33 127 The system will treat the "tendency" value as a differential/spatial
offset;
#X text -36 335 If the realised tone configuration is less than the
stepwise reversal \, the expression will subtract the (wasted) potential
from the "melodic inertia" value of 1 \, producing a smaller value.
;
#X text -35 182 If current melodic attraction is more than stepwise
reversal calculated by previous assymetry ratio algorithm \, then add
melodic inertia to melodic attraction value (tendency) ELSE if current
melodic attraction value is less than stepwise reversal \, and provides
a greater attraction (in the opposite melodic direction) which disrupts
melodic continuity \, THEN subtract melodic attraction from melodic
inertia.;
#X obj -32 -28 r man.c3;
#X obj 289 -19 r asymm.ma2;
#X obj -32 140 s tend.3;
#X text 287 -39 MA from note 2 and 1 (asymm) == stepwise reversal;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 19 0;
#X connect 4 0 2 1;
#X connect 6 0 2 0;
#X connect 7 0 12 1;
#X connect 8 0 11 0;
#X connect 8 0 12 0;
#X connect 12 0 6 0;
#X connect 17 0 8 0;
#X connect 18 0 7 0;
#X restore -692 -65 pd tend.t3;
#N canvas 148 216 727 521 tend.t4 0;
#X obj 429 248 r counter;
#X floatatom 429 269 5 0 0 0 - - -;
#X obj -32 100 * \$1;
#X floatatom -32 121 5 0 0 0 - - -;
#X obj 14 83 r iert.os;
#X text 87 72 This expression will output the "tendency" (p. 171) to
go to this tone;
#X floatatom -32 71 5 0 0 0 - - -;
#X floatatom 289 1 5 0 0 0 - - -;
#X floatatom -32 -5 10 0 0 0 - - -;
#X text -35 -49 MA C.Tone;
#N canvas 0 22 450 300 potential.development 0;
#X text 23 -71 is the melodic motion the same?;
#X obj 144 -44 r \$0-pcd1;
#X obj 28 -41 r \$0-pcd7;
#X obj 144 -23 > 0;
#X obj 28 -20 > 0;
#X obj 144 0 sel 1;
#X obj 28 1 sel 1;
#X msg 28 23 1;
#X msg 55 23 0;
#X msg 144 22 1;
#X msg 175 22 0;
#X obj 28 45 i;
#X obj 145 48 i;
#X text 30 -59 from 6 to 7;
#X text 144 -61 from 7 to 1;
#X floatatom 62 -24 5 0 0 0 - - -;
#X floatatom 185 -27 5 0 0 0 - - -;
#X text 7 77 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 && $f4 !=
$f3 \, 1 - $f1 \, 0));
#X text 3 117 Further corroborating realised pitch motion may be essential
as stepwise reversal may be less than current melodic attraction value
obtained by breaking continuity of melodic motion;
#X connect 1 0 3 0;
#X connect 1 0 16 0;
#X connect 2 0 4 0;
#X connect 2 0 15 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 9 0;
#X connect 5 1 10 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X restore -34 400 pd potential.development;
#X obj -7 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj -32 45 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 \, 1 - $f2
\, 0));
#X text -35 302 If attraction values are the same \, the expression
will produce zero.;
#X text 33 127 The system will treat the "tendency" value as a differential/spatial
offset;
#X text -36 335 If the realised tone configuration is less than the
stepwise reversal \, the expression will subtract the (wasted) potential
from the "melodic inertia" value of 1 \, producing a smaller value.
;
#X text -35 182 If current melodic attraction is more than stepwise
reversal calculated by previous assymetry ratio algorithm \, then add
melodic inertia to melodic attraction value (tendency) ELSE if current
melodic attraction value is less than stepwise reversal \, and provides
a greater attraction (in the opposite melodic direction) which disrupts
melodic continuity \, THEN subtract melodic attraction from melodic
inertia.;
#X obj -32 -28 r man.c4;
#X obj 289 -19 r asymm.ma3;
#X obj -32 140 s tend.4;
#X text 287 -39 MA from note 3 and 2 (asymm) == stepwise reversal;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 19 0;
#X connect 4 0 2 1;
#X connect 6 0 2 0;
#X connect 7 0 12 1;
#X connect 8 0 11 0;
#X connect 8 0 12 0;
#X connect 12 0 6 0;
#X connect 17 0 8 0;
#X connect 18 0 7 0;
#X restore -692 -43 pd tend.t4;
#X text -689 -385 //Melodic Inertia + MA = Tendency value - Produces
"tendency" in relation to melodic continuity;
#N canvas 148 216 727 521 tend.t5 0;
#X obj 429 248 r counter;
#X floatatom 429 269 5 0 0 0 - - -;
#X obj -32 100 * \$1;
#X floatatom -32 121 5 0 0 0 - - -;
#X obj 14 83 r iert.os;
#X text 87 72 This expression will output the "tendency" (p. 171) to
go to this tone;
#X floatatom -32 71 5 0 0 0 - - -;
#X floatatom 289 1 5 0 0 0 - - -;
#X floatatom -32 -5 10 0 0 0 - - -;
#X text -35 -49 MA C.Tone;
#N canvas 0 22 450 300 potential.development 0;
#X text 23 -71 is the melodic motion the same?;
#X obj 144 -44 r \$0-pcd1;
#X obj 28 -41 r \$0-pcd7;
#X obj 144 -23 > 0;
#X obj 28 -20 > 0;
#X obj 144 0 sel 1;
#X obj 28 1 sel 1;
#X msg 28 23 1;
#X msg 55 23 0;
#X msg 144 22 1;
#X msg 175 22 0;
#X obj 28 45 i;
#X obj 145 48 i;
#X text 30 -59 from 6 to 7;
#X text 144 -61 from 7 to 1;
#X floatatom 62 -24 5 0 0 0 - - -;
#X floatatom 185 -27 5 0 0 0 - - -;
#X text 7 77 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 && $f4 !=
$f3 \, 1 - $f1 \, 0));
#X text 3 117 Further corroborating realised pitch motion may be essential
as stepwise reversal may be less than current melodic attraction value
obtained by breaking continuity of melodic motion;
#X connect 1 0 3 0;
#X connect 1 0 16 0;
#X connect 2 0 4 0;
#X connect 2 0 15 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 9 0;
#X connect 5 1 10 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X restore -34 400 pd potential.development;
#X obj -7 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj -32 45 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 \, 1 - $f2
\, 0));
#X text -35 302 If attraction values are the same \, the expression
will produce zero.;
#X text 33 127 The system will treat the "tendency" value as a differential/spatial
offset;
#X text -36 335 If the realised tone configuration is less than the
stepwise reversal \, the expression will subtract the (wasted) potential
from the "melodic inertia" value of 1 \, producing a smaller value.
;
#X text -35 182 If current melodic attraction is more than stepwise
reversal calculated by previous assymetry ratio algorithm \, then add
melodic inertia to melodic attraction value (tendency) ELSE if current
melodic attraction value is less than stepwise reversal \, and provides
a greater attraction (in the opposite melodic direction) which disrupts
melodic continuity \, THEN subtract melodic attraction from melodic
inertia.;
#X obj -32 -28 r man.c5;
#X obj 289 -19 r asymm.ma4;
#X obj -32 140 s tend.5;
#X text 287 -39 MA from note 4 and 3 (asymm) == stepwise reversal;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 19 0;
#X connect 4 0 2 1;
#X connect 6 0 2 0;
#X connect 7 0 12 1;
#X connect 8 0 11 0;
#X connect 8 0 12 0;
#X connect 12 0 6 0;
#X connect 17 0 8 0;
#X connect 18 0 7 0;
#X restore -618 -109 pd tend.t5;
#N canvas 148 216 727 521 tend.t6 0;
#X obj 429 248 r counter;
#X floatatom 429 269 5 0 0 0 - - -;
#X obj -32 100 * \$1;
#X floatatom -32 121 5 0 0 0 - - -;
#X obj 14 83 r iert.os;
#X text 87 72 This expression will output the "tendency" (p. 171) to
go to this tone;
#X floatatom -32 71 5 0 0 0 - - -;
#X floatatom 289 1 5 0 0 0 - - -;
#X floatatom -32 -5 10 0 0 0 - - -;
#X text -35 -49 MA C.Tone;
#N canvas 0 22 450 300 potential.development 0;
#X text 23 -71 is the melodic motion the same?;
#X obj 144 -44 r \$0-pcd1;
#X obj 28 -41 r \$0-pcd7;
#X obj 144 -23 > 0;
#X obj 28 -20 > 0;
#X obj 144 0 sel 1;
#X obj 28 1 sel 1;
#X msg 28 23 1;
#X msg 55 23 0;
#X msg 144 22 1;
#X msg 175 22 0;
#X obj 28 45 i;
#X obj 145 48 i;
#X text 30 -59 from 6 to 7;
#X text 144 -61 from 7 to 1;
#X floatatom 62 -24 5 0 0 0 - - -;
#X floatatom 185 -27 5 0 0 0 - - -;
#X text 7 77 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 && $f4 !=
$f3 \, 1 - $f1 \, 0));
#X text 3 117 Further corroborating realised pitch motion may be essential
as stepwise reversal may be less than current melodic attraction value
obtained by breaking continuity of melodic motion;
#X connect 1 0 3 0;
#X connect 1 0 16 0;
#X connect 2 0 4 0;
#X connect 2 0 15 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 9 0;
#X connect 5 1 10 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X restore -34 400 pd potential.development;
#X obj -7 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj -32 45 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 \, 1 - $f2
\, 0));
#X text -35 302 If attraction values are the same \, the expression
will produce zero.;
#X text 33 127 The system will treat the "tendency" value as a differential/spatial
offset;
#X text -36 335 If the realised tone configuration is less than the
stepwise reversal \, the expression will subtract the (wasted) potential
from the "melodic inertia" value of 1 \, producing a smaller value.
;
#X text -35 182 If current melodic attraction is more than stepwise
reversal calculated by previous assymetry ratio algorithm \, then add
melodic inertia to melodic attraction value (tendency) ELSE if current
melodic attraction value is less than stepwise reversal \, and provides
a greater attraction (in the opposite melodic direction) which disrupts
melodic continuity \, THEN subtract melodic attraction from melodic
inertia.;
#X obj -32 -28 r man.c6;
#X obj -32 140 s tend.6;
#X obj 289 -19 r asymm.ma5;
#X text 287 -39 MA from note 5 and 4 (asymm) == stepwise reversal;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 18 0;
#X connect 4 0 2 1;
#X connect 6 0 2 0;
#X connect 7 0 12 1;
#X connect 8 0 11 0;
#X connect 8 0 12 0;
#X connect 12 0 6 0;
#X connect 17 0 8 0;
#X connect 19 0 7 0;
#X restore -618 -87 pd tend.t6;
#N canvas 148 216 727 521 tend.t7 0;
#X obj 429 248 r counter;
#X floatatom 429 269 5 0 0 0 - - -;
#X obj -32 100 * \$1;
#X floatatom -32 121 5 0 0 0 - - -;
#X obj 14 83 r iert.os;
#X text 87 72 This expression will output the "tendency" (p. 171) to
go to this tone;
#X floatatom -32 71 5 0 0 0 - - -;
#X floatatom 289 1 5 0 0 0 - - -;
#X floatatom -32 -5 10 0 0 0 - - -;
#X text -35 -49 MA C.Tone;
#N canvas 0 22 450 300 potential.development 0;
#X text 23 -71 is the melodic motion the same?;
#X obj 144 -44 r \$0-pcd1;
#X obj 28 -41 r \$0-pcd7;
#X obj 144 -23 > 0;
#X obj 28 -20 > 0;
#X obj 144 0 sel 1;
#X obj 28 1 sel 1;
#X msg 28 23 1;
#X msg 55 23 0;
#X msg 144 22 1;
#X msg 175 22 0;
#X obj 28 45 i;
#X obj 145 48 i;
#X text 30 -59 from 6 to 7;
#X text 144 -61 from 7 to 1;
#X floatatom 62 -24 5 0 0 0 - - -;
#X floatatom 185 -27 5 0 0 0 - - -;
#X text 7 77 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 && $f4 !=
$f3 \, 1 - $f1 \, 0));
#X text 3 117 Further corroborating realised pitch motion may be essential
as stepwise reversal may be less than current melodic attraction value
obtained by breaking continuity of melodic motion;
#X connect 1 0 3 0;
#X connect 1 0 16 0;
#X connect 2 0 4 0;
#X connect 2 0 15 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 9 0;
#X connect 5 1 10 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X restore -34 400 pd potential.development;
#X obj -7 26 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj -32 45 expr if($f1 > $f2 \, 1 + $f1 \, if($f1 < $f2 \, 1 - $f2
\, 0));
#X text -35 302 If attraction values are the same \, the expression
will produce zero.;
#X text 33 127 The system will treat the "tendency" value as a differential/spatial
offset;
#X text -36 335 If the realised tone configuration is less than the
stepwise reversal \, the expression will subtract the (wasted) potential
from the "melodic inertia" value of 1 \, producing a smaller value.
;
#X text -35 182 If current melodic attraction is more than stepwise
reversal calculated by previous assymetry ratio algorithm \, then add
melodic inertia to melodic attraction value (tendency) ELSE if current
melodic attraction value is less than stepwise reversal \, and provides
a greater attraction (in the opposite melodic direction) which disrupts
melodic continuity \, THEN subtract melodic attraction from melodic
inertia.;
#X obj -32 -28 r man.c7;
#X obj 289 -19 r asymm.ma6;
#X obj -32 140 s tend.7;
#X text 287 -39 MA from note 6 and 5 (asymm) == stepwise reversal;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 19 0;
#X connect 4 0 2 1;
#X connect 6 0 2 0;
#X connect 7 0 12 1;
#X connect 8 0 11 0;
#X connect 8 0 12 0;
#X connect 12 0 6 0;
#X connect 17 0 8 0;
#X connect 18 0 7 0;
#X restore -618 -65 pd tend.t7;
#X text -689 -348 Initial quantification of an "expected" tone for
proximate attractors simply takes the melodic attraction of the ascending
and descending step-wise motions from the current tone \, subtracting
the largest MA value from the smallest to give the "expected continuation"
(Lerdahl 2001 \, pp. 170 - 171 \; cf. Lerdahl 1996). However \, Lerdahl
then simply adopts the MA value as the expected continution value so
as to not "dilute" the MA values unnecessarily.;
#X restore 424 195 pd tendency;
#X text 583 161 Value for attractional asymmetry between tones (causing
expr divide by zero);
#X text 560 210 Creating an offset based on the difference between
a tone realised and calculated highest melodic attraction value a step-wise
motion away (1 instance of expr divide by zero);
#N canvas 275 22 974 734 attractional.asymmetry 0;
#X text 34 7 Attractional Asymmetries;
#X text 30 643 Send differential value to modify current spatial location
of comparison tones \, in order to reflect cognitive construct;
#X text 436 25 "the listener appears to merge this attractional differential
withe the perception of symmetrical distance between the two pitches"
(Lerdahl 2001 \, pp. 167 - 168).;
#X text 28 673 * i.e. - to be used as offset with melodic attraction
rule (subtract from distance between integrated spatial trajectories)
;
#X text 28 329 The following algorithm produces a value or ratio ratio
if asymmetry for the ratio \; p1 -> 2 / p2 -> p1;
#X text 32 31 "Ratios of asymmetry provide a means of interpreting
what would otherwise be a troubling prediction of the attraction rule
\, namely \, that attractions of stable to unstable pitches that are
half a step away attain relatively high values compared to attractions
of unstable to stable pitches that are a whole step or more away" (Lerdahl
2001 \, p. 169).;
#X text 30 246 *solution - The comparison should not be to other attractions
\, but to the "relative attraction exerted on the particular pitch
in relation to the attractive force it exerts on other pitches" (cf.
[linear_expectation] \; Lerdahl 2001;
#X text 33 141 e.g. Current MA for D -> C and D -> Eb = 0.5;
#X text 29 174 Arguably inaccurate without Asymm.offset;
#X text 29 192 as D to Eb generally incurs more tension in to Chromatic
spac. Thus \, an MA value of 0.5 is too high in relation to D -> C
;
#X text 436 75 "This use of asymmetries does not constitute an alternative
to the attraction rule. Rather \, it is an interpretation that justifies
the rule's predictions where they might otherwise seem questionable
(Lerdahl 2001 \, p. 169)";
#X text 132 515 value (ratio of attractional asymmetry) - value reflects
degree of attractional asymmetry between two tones in sequence (e.g.
higher value = high asymmetry between tone combination in sequence)
- quantified and reflected as differential offset in spatial gesture
;
#X text 435 216 adjustment in tuning here may be interesting to use
with Partch~ If resolution is needed \, filter sweep at tone with frequency
offset to help incite dissonance to encourage tonal resolution;
#X text 435 143 "attractional asymmetries shed on intonational practices
for instruments capable of continuous tuning. Even though intervals
are symmetrically equidistant in a conceptual sense \, in a musical
context their tunings may not be" (Lerdahl 2001 \, p. 170).;
#N canvas 151 53 1093 683 asymm.ma.1 0;
#X obj 367 288 /;
#X floatatom 367 309 10 0 0 0 - - -;
#X floatatom 421 227 10 0 0 0 - - -;
#X floatatom 308 272 5 0 0 0 - - -;
#X obj 426 406 +;
#X obj 384 406 -;
#X obj 470 263 sel 1;
#X obj 470 281 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 503 279 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 367 449 mux _ _ _;
#X obj 367 234 r ma.c1;
#X floatatom 367 478 5 0 0 0 - - -;
#X obj 384 432 pipe 5;
#X obj 426 432 pipe 5;
#X obj 470 432 * \$1;
#X msg 470 296 2;
#X msg 503 295 1;
#X obj 367 501 s man.c1;
#X text 432 313 value (ratio of attractional asymmetry) - value reflects
degree of attractional asymmetry;
#X obj 284 325 s asymm.1;
#X obj 619 243 s asymm.ma1;
#X obj 470 243 >;
#X obj 534 243 ==;
#X obj 534 261 sel 1;
#X msg 534 280 0;
#N canvas 0 22 414 363 decimal.fraction.info 0;
#X text -179 174 http://en.wikipedia.org/wiki/Fraction_%28mathematics%29#Converting_repeating_decimals_to_fractions
;
#X text -203 141 http://en.wikipedia.org/wiki/Repeating_decimal#Converting_repeating_decimals_to_fractions
;
#X text -207 76 For repeating decimal - Let x = 0.111... (1) So 1000x
= 111.111... (2) Subtracting (2) and (1) gives: 1000x - x = 111.111...
- 0.111... ==> 999x = 111 ==> x = 111/999 ==> x = 1/9 Therefore \,
0.111... = 1/9.;
#X text -179 214 Producing ratios from decimal values is difficult
;
#X text -180 233 Dividing fractions to produce ratio: Turn the second
fraction upside-down (it becomes a reciprocal) 2) Multiply the first
fraction by that reciprocal 3) Simplify;
#X text -179 280 http://www.mathsisfun.com/fractions_division.html
;
#X restore -124 598 pd decimal.fraction.info;
#X floatatom -132 195 5 0 0 0 - - -;
#X floatatom 39 195 5 0 0 0 - - -;
#X obj -132 218 expr if ($f1 == $f2 \, 1 \, $f1) \; if ($f2 == $f1
\, 1 \, $f2) \;;
#X floatatom -132 265 5 0 0 0 - - -;
#X floatatom 39 278 5 0 0 0 - - -;
#X obj -47 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 317 mod;
#X obj 39 318 mod;
#X floatatom -132 337 5 0 0 0 - - -;
#X floatatom 39 335 5 0 0 0 - - -;
#X text -18 448 SIMPLIFY!!!!!!;
#X obj 491 397 r asym.ofs;
#X floatatom -132 449 5 0 0 0 - - -;
#X floatatom 212 448 10 0 0 0 - - -;
#X obj -132 297 pipe 1;
#X obj 39 297 pipe 1;
#X obj -132 470 s ar.1a;
#X obj 212 468 s ar.1b;
#X obj 308 251 pipe 10;
#X obj 352 378 pipe 1;
#X obj 407 377 pipe 1;
#X text 578 270 accounting for mutual attractions (==) same attractional
value - result = do nothing - output original MA;
#X text 461 482 Similar to concept of implicative denial in order to
account for melodic motion - Further quantification of sequential pitch
relationships (p. 170) - might not be suitable \, though.;
#X floatatom 502 449 5 0 0 0 - - -;
#X text 541 449 output select for mux;
#X obj 399 350 / 16;
#X floatatom 455 367 10 0 0 0 - - -;
#X floatatom 300 449 10 0 0 0 - - -;
#X floatatom 426 449 5 0 0 0 - - -;
#X text 525 350 Divide by 16 as it is the maximum value for a line
of assymetrical attraction (Lerdahl 2001 \, p. 168) - This method produces
values which are more suitable as an offset;
#X text 690 243 to use with tendency algorithm;
#X text 283 343 intial offset;
#X text 365 520 scaled offset;
#X text 550 208 divided by inverse tone config;
#X floatatom -132 51 5 0 0 0 - - -;
#X obj -132 31 r counter;
#X obj 544 62 abs;
#X floatatom 544 160 5 0 0 0 - - -;
#X obj 544 81 pow 2;
#X floatatom 544 22 5 0 0 0 - - -;
#X obj 544 43 % 12;
#X floatatom 594 60 5 0 0 0 - - -;
#X obj 421 178 expr $f2 / $f3 * $f4 \;;
#X obj -132 71 sel 1;
#X obj -132 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 161 del 50;
#X obj 544 1 r \$0-pcd1;
#X floatatom 412 114 5 0 0 0 - - -;
#X text 411 80 new;
#X text 469 79 previous;
#X floatatom 493 110 5 0 0 0 - - -;
#X obj 544 141 /;
#X msg 544 122 1;
#X obj 544 101 t b f;
#X obj 412 94 r \$0-bs7;
#X obj 472 93 r \$0-bs1;
#X obj -132 178 expr $f2 * $f3;
#X obj 39 178 expr $f2 * $f3;
#X text -129 514 if mod (remainder after division - i.e. ration that
divides equally into itself) 3 or 4 == 0 (2 numbers divide into each
other) AND 1 is greater than 2 > then produced 1/2 \, ELSE if MOD 3
or 4 == 0 AND 2 > 1 \, then 1/1 \, or produce 1 etc.;
#X obj -133 384 expr if($f3 == 0 | $f4 == 0 && $f1 > $f2 \, $f1 / $f2
\, if ($f3 == 0 | $f4 == 0 && $f2 > $f1 \, $f1/$f1 \, $f1)) \; if($f3
== 0 | $f4 == 0 && $f1 > $f2 \, $f2/$f2 \, if ($f3 == 0 | $f4 == 0
&& $f2 > $f1 \, $f2/$f1 \, $f2));
#X obj -134 362 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -17 358 i;
#X obj -68 358 i;
#X obj -58 315 t b b;
#X obj -55 273 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -54 123 [PRODUCE WHOLE NUMBER RATIO];
#X obj -92 151 r \$0-bs7;
#X obj -28 152 r \$0-bs7;
#X obj 70 154 r \$0-bs1;
#X obj 133 154 r \$0-bs1;
#X connect 0 0 1 0;
#X connect 1 0 19 0;
#X connect 1 0 51 0;
#X connect 2 0 0 1;
#X connect 2 0 21 1;
#X connect 2 0 22 1;
#X connect 2 0 20 0;
#X connect 3 0 0 0;
#X connect 3 0 45 0;
#X connect 3 0 46 0;
#X connect 3 0 22 0;
#X connect 3 0 21 0;
#X connect 4 0 13 0;
#X connect 5 0 12 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 15 0;
#X connect 8 0 16 0;
#X connect 9 0 11 0;
#X connect 9 0 17 0;
#X connect 10 0 9 0;
#X connect 10 0 44 0;
#X connect 12 0 9 1;
#X connect 12 0 53 0;
#X connect 13 0 9 2;
#X connect 13 0 54 0;
#X connect 14 0 9 3;
#X connect 14 0 49 0;
#X connect 15 0 14 0;
#X connect 16 0 14 0;
#X connect 21 0 6 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 24 0 14 0;
#X connect 26 0 28 0;
#X connect 27 0 28 1;
#X connect 27 0 31 0;
#X connect 28 0 29 0;
#X connect 28 1 30 0;
#X connect 29 0 33 1;
#X connect 29 0 40 0;
#X connect 29 0 88 1;
#X connect 30 0 32 1;
#X connect 30 0 41 0;
#X connect 30 0 87 1;
#X connect 31 0 28 0;
#X connect 32 0 34 0;
#X connect 33 0 35 0;
#X connect 34 0 85 2;
#X connect 34 0 90 0;
#X connect 35 0 85 3;
#X connect 37 0 14 1;
#X connect 38 0 42 0;
#X connect 39 0 43 0;
#X connect 40 0 32 0;
#X connect 41 0 33 0;
#X connect 44 0 3 0;
#X connect 45 0 5 0;
#X connect 46 0 4 0;
#X connect 51 0 5 1;
#X connect 51 0 4 1;
#X connect 51 0 52 0;
#X connect 60 0 69 0;
#X connect 61 0 60 0;
#X connect 62 0 64 0;
#X connect 63 0 68 3;
#X connect 64 0 79 0;
#X connect 65 0 66 0;
#X connect 66 0 62 0;
#X connect 66 0 67 0;
#X connect 68 0 2 0;
#X connect 69 0 70 0;
#X connect 70 0 71 0;
#X connect 71 0 68 0;
#X connect 71 0 83 0;
#X connect 71 0 82 0;
#X connect 72 0 65 0;
#X connect 73 0 68 1;
#X connect 77 0 63 0;
#X connect 78 0 77 0;
#X connect 79 0 78 0;
#X connect 79 1 77 1;
#X connect 80 0 73 0;
#X connect 81 0 68 2;
#X connect 81 0 76 0;
#X connect 82 0 26 0;
#X connect 83 0 27 0;
#X connect 85 0 38 0;
#X connect 85 1 39 0;
#X connect 86 0 85 0;
#X connect 87 0 85 1;
#X connect 88 0 85 0;
#X connect 89 0 88 0;
#X connect 89 1 87 0;
#X connect 90 0 89 0;
#X connect 92 0 82 1;
#X connect 93 0 82 2;
#X connect 94 0 83 1;
#X connect 95 0 83 2;
#X restore 30 490 pd asymm.ma.1;
#X text 27 384 It then applies a similar approach to Lerdahl's concept
of implicative denial \, whereby if the resultant melodic attraction
is less than p2 -> p1 \, then the ratio value is subtracted from the
current melodic attraction value \, producing a melodic attraction
value (+ offset). It is the intention of the author to reflect this
offset in the resultant spatial gesture.;
#N canvas 151 53 1093 683 asymm.ma.2 0;
#X obj 367 288 /;
#X floatatom 367 309 10 0 0 0 - - -;
#X floatatom 421 227 10 0 0 0 - - -;
#X floatatom 308 272 5 0 0 0 - - -;
#X obj 426 406 +;
#X obj 384 406 -;
#X obj 470 263 sel 1;
#X obj 470 281 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 503 279 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 367 449 mux _ _ _;
#X floatatom 367 478 5 0 0 0 - - -;
#X obj 384 432 pipe 5;
#X obj 426 432 pipe 5;
#X obj 470 432 * \$1;
#X msg 470 296 2;
#X msg 503 295 1;
#X text 432 313 value (ratio of attractional asymmetry) - value reflects
degree of attractional asymmetry;
#X obj 470 243 >;
#X obj 534 243 ==;
#X obj 534 261 sel 1;
#X msg 534 280 0;
#N canvas 0 22 414 363 decimal.fraction.info 0;
#X text -179 174 http://en.wikipedia.org/wiki/Fraction_%28mathematics%29#Converting_repeating_decimals_to_fractions
;
#X text -203 141 http://en.wikipedia.org/wiki/Repeating_decimal#Converting_repeating_decimals_to_fractions
;
#X text -207 76 For repeating decimal - Let x = 0.111... (1) So 1000x
= 111.111... (2) Subtracting (2) and (1) gives: 1000x - x = 111.111...
- 0.111... ==> 999x = 111 ==> x = 111/999 ==> x = 1/9 Therefore \,
0.111... = 1/9.;
#X text -179 214 Producing ratios from decimal values is difficult
;
#X text -180 233 Dividing fractions to produce ratio: Turn the second
fraction upside-down (it becomes a reciprocal) 2) Multiply the first
fraction by that reciprocal 3) Simplify;
#X text -179 280 http://www.mathsisfun.com/fractions_division.html
;
#X restore -124 598 pd decimal.fraction.info;
#X floatatom -132 195 5 0 0 0 - - -;
#X floatatom 39 195 5 0 0 0 - - -;
#X obj -132 218 expr if ($f1 == $f2 \, 1 \, $f1) \; if ($f2 == $f1
\, 1 \, $f2) \;;
#X floatatom -132 265 5 0 0 0 - - -;
#X floatatom 39 278 5 0 0 0 - - -;
#X obj -47 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 317 mod;
#X obj 39 318 mod;
#X floatatom -132 337 5 0 0 0 - - -;
#X floatatom 39 335 5 0 0 0 - - -;
#X text -18 448 SIMPLIFY!!!!!!;
#X obj 491 397 r asym.ofs;
#X floatatom -132 449 5 0 0 0 - - -;
#X floatatom 212 448 10 0 0 0 - - -;
#X obj -132 297 pipe 1;
#X obj 39 297 pipe 1;
#X obj 308 251 pipe 10;
#X obj 352 378 pipe 1;
#X obj 407 377 pipe 1;
#X text 578 270 accounting for mutual attractions (==) same attractional
value - result = do nothing - output original MA;
#X text 461 482 Similar to concept of implicative denial in order to
account for melodic motion - Further quantification of sequential pitch
relationships (p. 170) - might not be suitable \, though.;
#X floatatom 502 449 5 0 0 0 - - -;
#X text 541 449 output select for mux;
#X obj 399 350 / 16;
#X floatatom 455 367 10 0 0 0 - - -;
#X floatatom 300 449 10 0 0 0 - - -;
#X floatatom 426 449 5 0 0 0 - - -;
#X text 525 350 Divide by 16 as it is the maximum value for a line
of assymetrical attraction (Lerdahl 2001 \, p. 168) - This method produces
values which are more suitable as an offset;
#X text 692 242 to use with tendency algorithm;
#X text 283 343 intial offset;
#X text 365 520 scaled offset;
#X text 550 208 divided by inverse tone config;
#X floatatom -132 51 5 0 0 0 - - -;
#X obj -132 31 r counter;
#X obj 544 62 abs;
#X floatatom 544 160 5 0 0 0 - - -;
#X obj 544 81 pow 2;
#X floatatom 544 22 5 0 0 0 - - -;
#X obj 544 43 % 12;
#X floatatom 594 60 5 0 0 0 - - -;
#X obj 421 178 expr $f2 / $f3 * $f4 \;;
#X obj -132 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 161 del 50;
#X floatatom 412 114 5 0 0 0 - - -;
#X text 411 80 new;
#X text 469 79 previous;
#X floatatom 493 110 5 0 0 0 - - -;
#X obj 544 141 /;
#X msg 544 122 1;
#X obj 544 101 t b f;
#X obj -132 178 expr $f2 * $f3;
#X obj 39 178 expr $f2 * $f3;
#X text -129 514 if mod (remainder after division - i.e. ration that
divides equally into itself) 3 or 4 == 0 (2 numbers divide into each
other) AND 1 is greater than 2 > then produced 1/2 \, ELSE if MOD 3
or 4 == 0 AND 2 > 1 \, then 1/1 \, or produce 1 etc.;
#X obj -133 384 expr if($f3 == 0 | $f4 == 0 && $f1 > $f2 \, $f1 / $f2
\, if ($f3 == 0 | $f4 == 0 && $f2 > $f1 \, $f1/$f1 \, $f1)) \; if($f3
== 0 | $f4 == 0 && $f1 > $f2 \, $f2/$f2 \, if ($f3 == 0 | $f4 == 0
&& $f2 > $f1 \, $f2/$f1 \, $f2));
#X obj -134 362 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -17 358 i;
#X obj -68 358 i;
#X obj -58 315 t b b;
#X obj -55 273 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -54 123 [PRODUCE WHOLE NUMBER RATIO];
#X obj -92 151 r \$0-bs1;
#X obj -28 152 r \$0-bs1;
#X obj -132 71 sel 2;
#X obj 70 154 r \$0-bs2;
#X obj 133 154 r \$0-bs2;
#X obj -132 470 s ar.2a;
#X obj 212 468 s ar.2b;
#X obj 367 501 s man.c2;
#X obj 284 325 s asymm.2;
#X obj 619 243 s asymm.ma2;
#X obj 412 94 r \$0-bs1;
#X obj 472 93 r \$0-bs2;
#X obj 544 1 r \$0-pcd2;
#X obj 367 234 r ma.c2;
#X connect 0 0 1 0;
#X connect 1 0 45 0;
#X connect 1 0 90 0;
#X connect 2 0 0 1;
#X connect 2 0 17 1;
#X connect 2 0 18 1;
#X connect 2 0 91 0;
#X connect 3 0 0 0;
#X connect 3 0 39 0;
#X connect 3 0 40 0;
#X connect 3 0 18 0;
#X connect 3 0 17 0;
#X connect 4 0 12 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 14 0;
#X connect 8 0 15 0;
#X connect 9 0 10 0;
#X connect 9 0 89 0;
#X connect 11 0 9 1;
#X connect 11 0 47 0;
#X connect 12 0 9 2;
#X connect 12 0 48 0;
#X connect 13 0 9 3;
#X connect 13 0 43 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 17 0 6 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 13 0;
#X connect 22 0 24 0;
#X connect 23 0 24 1;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 26 0;
#X connect 25 0 29 1;
#X connect 25 0 36 0;
#X connect 25 0 78 1;
#X connect 26 0 28 1;
#X connect 26 0 37 0;
#X connect 26 0 77 1;
#X connect 27 0 24 0;
#X connect 28 0 30 0;
#X connect 29 0 31 0;
#X connect 30 0 75 2;
#X connect 30 0 80 0;
#X connect 31 0 75 3;
#X connect 33 0 13 1;
#X connect 34 0 87 0;
#X connect 35 0 88 0;
#X connect 36 0 28 0;
#X connect 37 0 29 0;
#X connect 38 0 3 0;
#X connect 39 0 5 0;
#X connect 40 0 4 0;
#X connect 45 0 5 1;
#X connect 45 0 4 1;
#X connect 45 0 46 0;
#X connect 54 0 84 0;
#X connect 55 0 54 0;
#X connect 56 0 58 0;
#X connect 57 0 62 3;
#X connect 58 0 71 0;
#X connect 59 0 60 0;
#X connect 60 0 56 0;
#X connect 60 0 61 0;
#X connect 62 0 2 0;
#X connect 63 0 64 0;
#X connect 64 0 62 0;
#X connect 64 0 73 0;
#X connect 64 0 72 0;
#X connect 65 0 62 1;
#X connect 69 0 57 0;
#X connect 70 0 69 0;
#X connect 71 0 70 0;
#X connect 71 1 69 1;
#X connect 72 0 22 0;
#X connect 73 0 23 0;
#X connect 75 0 34 0;
#X connect 75 1 35 0;
#X connect 76 0 75 0;
#X connect 77 0 75 1;
#X connect 78 0 75 0;
#X connect 79 0 78 0;
#X connect 79 1 77 0;
#X connect 80 0 79 0;
#X connect 82 0 72 1;
#X connect 83 0 72 2;
#X connect 84 0 63 0;
#X connect 85 0 73 1;
#X connect 86 0 73 2;
#X connect 92 0 65 0;
#X connect 93 0 62 2;
#X connect 93 0 68 0;
#X connect 94 0 59 0;
#X connect 95 0 9 0;
#X connect 95 0 38 0;
#X restore 30 509 pd asymm.ma.2;
#N canvas 151 53 1093 683 asymm.ma.3 0;
#X obj 367 288 /;
#X floatatom 367 309 10 0 0 0 - - -;
#X floatatom 421 227 10 0 0 0 - - -;
#X floatatom 308 272 5 0 0 0 - - -;
#X obj 426 406 +;
#X obj 384 406 -;
#X obj 470 263 sel 1;
#X obj 470 281 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 503 279 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 367 449 mux _ _ _;
#X floatatom 367 478 5 0 0 0 - - -;
#X obj 384 432 pipe 5;
#X obj 426 432 pipe 5;
#X obj 470 432 * \$1;
#X msg 470 296 2;
#X msg 503 295 1;
#X text 432 313 value (ratio of attractional asymmetry) - value reflects
degree of attractional asymmetry;
#X obj 470 243 >;
#X obj 534 243 ==;
#X obj 534 261 sel 1;
#X msg 534 280 0;
#N canvas 0 22 414 363 decimal.fraction.info 0;
#X text -179 174 http://en.wikipedia.org/wiki/Fraction_%28mathematics%29#Converting_repeating_decimals_to_fractions
;
#X text -203 141 http://en.wikipedia.org/wiki/Repeating_decimal#Converting_repeating_decimals_to_fractions
;
#X text -207 76 For repeating decimal - Let x = 0.111... (1) So 1000x
= 111.111... (2) Subtracting (2) and (1) gives: 1000x - x = 111.111...
- 0.111... ==> 999x = 111 ==> x = 111/999 ==> x = 1/9 Therefore \,
0.111... = 1/9.;
#X text -179 214 Producing ratios from decimal values is difficult
;
#X text -180 233 Dividing fractions to produce ratio: Turn the second
fraction upside-down (it becomes a reciprocal) 2) Multiply the first
fraction by that reciprocal 3) Simplify;
#X text -179 280 http://www.mathsisfun.com/fractions_division.html
;
#X restore -124 598 pd decimal.fraction.info;
#X floatatom -132 195 5 0 0 0 - - -;
#X floatatom 39 195 5 0 0 0 - - -;
#X obj -132 218 expr if ($f1 == $f2 \, 1 \, $f1) \; if ($f2 == $f1
\, 1 \, $f2) \;;
#X floatatom -132 265 5 0 0 0 - - -;
#X floatatom 39 278 5 0 0 0 - - -;
#X obj -47 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 317 mod;
#X obj 39 318 mod;
#X floatatom -132 337 5 0 0 0 - - -;
#X floatatom 39 335 5 0 0 0 - - -;
#X text -18 448 SIMPLIFY!!!!!!;
#X obj 491 397 r asym.ofs;
#X floatatom -132 449 5 0 0 0 - - -;
#X floatatom 212 448 10 0 0 0 - - -;
#X obj -132 297 pipe 1;
#X obj 39 297 pipe 1;
#X obj 308 251 pipe 10;
#X obj 352 378 pipe 1;
#X obj 407 377 pipe 1;
#X text 578 270 accounting for mutual attractions (==) same attractional
value - result = do nothing - output original MA;
#X text 461 482 Similar to concept of implicative denial in order to
account for melodic motion - Further quantification of sequential pitch
relationships (p. 170) - might not be suitable \, though.;
#X floatatom 502 449 5 0 0 0 - - -;
#X text 541 449 output select for mux;
#X obj 399 350 / 16;
#X floatatom 455 367 10 0 0 0 - - -;
#X floatatom 300 449 10 0 0 0 - - -;
#X floatatom 426 449 5 0 0 0 - - -;
#X text 525 350 Divide by 16 as it is the maximum value for a line
of assymetrical attraction (Lerdahl 2001 \, p. 168) - This method produces
values which are more suitable as an offset;
#X text 692 242 to use with tendency algorithm;
#X text 283 343 intial offset;
#X text 365 520 scaled offset;
#X text 550 208 divided by inverse tone config;
#X floatatom -132 51 5 0 0 0 - - -;
#X obj -132 31 r counter;
#X obj 544 62 abs;
#X floatatom 544 160 5 0 0 0 - - -;
#X obj 544 81 pow 2;
#X floatatom 544 22 5 0 0 0 - - -;
#X obj 544 43 % 12;
#X floatatom 594 60 5 0 0 0 - - -;
#X obj 421 178 expr $f2 / $f3 * $f4 \;;
#X obj -132 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 161 del 50;
#X floatatom 412 114 5 0 0 0 - - -;
#X text 411 80 new;
#X text 469 79 previous;
#X floatatom 493 110 5 0 0 0 - - -;
#X obj 544 141 /;
#X msg 544 122 1;
#X obj 544 101 t b f;
#X obj -132 178 expr $f2 * $f3;
#X obj 39 178 expr $f2 * $f3;
#X text -129 514 if mod (remainder after division - i.e. ration that
divides equally into itself) 3 or 4 == 0 (2 numbers divide into each
other) AND 1 is greater than 2 > then produced 1/2 \, ELSE if MOD 3
or 4 == 0 AND 2 > 1 \, then 1/1 \, or produce 1 etc.;
#X obj -133 384 expr if($f3 == 0 | $f4 == 0 && $f1 > $f2 \, $f1 / $f2
\, if ($f3 == 0 | $f4 == 0 && $f2 > $f1 \, $f1/$f1 \, $f1)) \; if($f3
== 0 | $f4 == 0 && $f1 > $f2 \, $f2/$f2 \, if ($f3 == 0 | $f4 == 0
&& $f2 > $f1 \, $f2/$f1 \, $f2));
#X obj -134 362 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -17 358 i;
#X obj -68 358 i;
#X obj -58 315 t b b;
#X obj -55 273 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -54 123 [PRODUCE WHOLE NUMBER RATIO];
#X obj -132 71 sel 3;
#X obj -92 151 r \$0-bs2;
#X obj -28 152 r \$0-bs2;
#X obj 70 154 r \$0-bs3;
#X obj 133 154 r \$0-bs3;
#X obj -132 470 s ar.3a;
#X obj 212 468 s ar.3b;
#X obj 544 1 r \$0-pcd3;
#X obj 412 94 r \$0-bs2;
#X obj 472 93 r \$0-bs3;
#X obj 619 243 s asymm.ma3;
#X obj 367 234 r ma.c3;
#X obj 284 325 s asymm.3;
#X obj 367 501 s man.c3;
#X connect 0 0 1 0;
#X connect 1 0 45 0;
#X connect 1 0 94 0;
#X connect 2 0 0 1;
#X connect 2 0 17 1;
#X connect 2 0 18 1;
#X connect 2 0 92 0;
#X connect 3 0 0 0;
#X connect 3 0 39 0;
#X connect 3 0 40 0;
#X connect 3 0 18 0;
#X connect 3 0 17 0;
#X connect 4 0 12 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 14 0;
#X connect 8 0 15 0;
#X connect 9 0 10 0;
#X connect 9 0 95 0;
#X connect 11 0 9 1;
#X connect 11 0 47 0;
#X connect 12 0 9 2;
#X connect 12 0 48 0;
#X connect 13 0 9 3;
#X connect 13 0 43 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 17 0 6 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 13 0;
#X connect 22 0 24 0;
#X connect 23 0 24 1;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 26 0;
#X connect 25 0 29 1;
#X connect 25 0 36 0;
#X connect 25 0 78 1;
#X connect 26 0 28 1;
#X connect 26 0 37 0;
#X connect 26 0 77 1;
#X connect 27 0 24 0;
#X connect 28 0 30 0;
#X connect 29 0 31 0;
#X connect 30 0 75 2;
#X connect 30 0 80 0;
#X connect 31 0 75 3;
#X connect 33 0 13 1;
#X connect 34 0 87 0;
#X connect 35 0 88 0;
#X connect 36 0 28 0;
#X connect 37 0 29 0;
#X connect 38 0 3 0;
#X connect 39 0 5 0;
#X connect 40 0 4 0;
#X connect 45 0 5 1;
#X connect 45 0 4 1;
#X connect 45 0 46 0;
#X connect 54 0 82 0;
#X connect 55 0 54 0;
#X connect 56 0 58 0;
#X connect 57 0 62 3;
#X connect 58 0 71 0;
#X connect 59 0 60 0;
#X connect 60 0 56 0;
#X connect 60 0 61 0;
#X connect 62 0 2 0;
#X connect 63 0 64 0;
#X connect 64 0 62 0;
#X connect 64 0 73 0;
#X connect 64 0 72 0;
#X connect 65 0 62 1;
#X connect 69 0 57 0;
#X connect 70 0 69 0;
#X connect 71 0 70 0;
#X connect 71 1 69 1;
#X connect 72 0 22 0;
#X connect 73 0 23 0;
#X connect 75 0 34 0;
#X connect 75 1 35 0;
#X connect 76 0 75 0;
#X connect 77 0 75 1;
#X connect 78 0 75 0;
#X connect 79 0 78 0;
#X connect 79 1 77 0;
#X connect 80 0 79 0;
#X connect 82 0 63 0;
#X connect 83 0 72 1;
#X connect 84 0 72 2;
#X connect 85 0 73 1;
#X connect 86 0 73 2;
#X connect 89 0 59 0;
#X connect 90 0 65 0;
#X connect 91 0 62 2;
#X connect 91 0 68 0;
#X connect 93 0 9 0;
#X connect 93 0 38 0;
#X restore 30 530 pd asymm.ma.3;
#N canvas 151 53 1093 683 asymm.ma.4 0;
#X obj 367 288 /;
#X floatatom 367 309 10 0 0 0 - - -;
#X floatatom 421 227 10 0 0 0 - - -;
#X floatatom 308 272 5 0 0 0 - - -;
#X obj 426 406 +;
#X obj 384 406 -;
#X obj 470 263 sel 1;
#X obj 470 281 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 503 279 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 367 449 mux _ _ _;
#X floatatom 367 478 5 0 0 0 - - -;
#X obj 384 432 pipe 5;
#X obj 426 432 pipe 5;
#X obj 470 432 * \$1;
#X msg 470 296 2;
#X msg 503 295 1;
#X text 432 313 value (ratio of attractional asymmetry) - value reflects
degree of attractional asymmetry;
#X obj 470 243 >;
#X obj 534 243 ==;
#X obj 534 261 sel 1;
#X msg 534 280 0;
#N canvas 0 22 414 363 decimal.fraction.info 0;
#X text -179 174 http://en.wikipedia.org/wiki/Fraction_%28mathematics%29#Converting_repeating_decimals_to_fractions
;
#X text -203 141 http://en.wikipedia.org/wiki/Repeating_decimal#Converting_repeating_decimals_to_fractions
;
#X text -207 76 For repeating decimal - Let x = 0.111... (1) So 1000x
= 111.111... (2) Subtracting (2) and (1) gives: 1000x - x = 111.111...
- 0.111... ==> 999x = 111 ==> x = 111/999 ==> x = 1/9 Therefore \,
0.111... = 1/9.;
#X text -179 214 Producing ratios from decimal values is difficult
;
#X text -180 233 Dividing fractions to produce ratio: Turn the second
fraction upside-down (it becomes a reciprocal) 2) Multiply the first
fraction by that reciprocal 3) Simplify;
#X text -179 280 http://www.mathsisfun.com/fractions_division.html
;
#X restore -124 598 pd decimal.fraction.info;
#X floatatom -132 195 5 0 0 0 - - -;
#X floatatom 39 195 5 0 0 0 - - -;
#X obj -132 218 expr if ($f1 == $f2 \, 1 \, $f1) \; if ($f2 == $f1
\, 1 \, $f2) \;;
#X floatatom -132 265 5 0 0 0 - - -;
#X floatatom 39 278 5 0 0 0 - - -;
#X obj -47 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 317 mod;
#X obj 39 318 mod;
#X floatatom -132 337 5 0 0 0 - - -;
#X floatatom 39 335 5 0 0 0 - - -;
#X text -18 448 SIMPLIFY!!!!!!;
#X obj 491 397 r asym.ofs;
#X floatatom -132 449 5 0 0 0 - - -;
#X floatatom 212 448 10 0 0 0 - - -;
#X obj -132 297 pipe 1;
#X obj 39 297 pipe 1;
#X obj 308 251 pipe 10;
#X obj 352 378 pipe 1;
#X obj 407 377 pipe 1;
#X text 578 270 accounting for mutual attractions (==) same attractional
value - result = do nothing - output original MA;
#X text 461 482 Similar to concept of implicative denial in order to
account for melodic motion - Further quantification of sequential pitch
relationships (p. 170) - might not be suitable \, though.;
#X floatatom 502 449 5 0 0 0 - - -;
#X text 541 449 output select for mux;
#X obj 399 350 / 16;
#X floatatom 455 367 10 0 0 0 - - -;
#X floatatom 300 449 10 0 0 0 - - -;
#X floatatom 426 449 5 0 0 0 - - -;
#X text 525 350 Divide by 16 as it is the maximum value for a line
of assymetrical attraction (Lerdahl 2001 \, p. 168) - This method produces
values which are more suitable as an offset;
#X text 690 243 to use with tendency algorithm;
#X text 283 343 intial offset;
#X text 365 520 scaled offset;
#X text 550 208 divided by inverse tone config;
#X floatatom -132 51 5 0 0 0 - - -;
#X obj -132 31 r counter;
#X obj 544 62 abs;
#X floatatom 544 160 5 0 0 0 - - -;
#X obj 544 81 pow 2;
#X floatatom 544 22 5 0 0 0 - - -;
#X obj 544 43 % 12;
#X floatatom 594 60 5 0 0 0 - - -;
#X obj 421 178 expr $f2 / $f3 * $f4 \;;
#X obj -132 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 161 del 50;
#X floatatom 412 114 5 0 0 0 - - -;
#X text 411 80 new;
#X text 469 79 previous;
#X floatatom 493 110 5 0 0 0 - - -;
#X obj 544 141 /;
#X msg 544 122 1;
#X obj 544 101 t b f;
#X obj -132 178 expr $f2 * $f3;
#X obj 39 178 expr $f2 * $f3;
#X text -129 514 if mod (remainder after division - i.e. ration that
divides equally into itself) 3 or 4 == 0 (2 numbers divide into each
other) AND 1 is greater than 2 > then produced 1/2 \, ELSE if MOD 3
or 4 == 0 AND 2 > 1 \, then 1/1 \, or produce 1 etc.;
#X obj -133 384 expr if($f3 == 0 | $f4 == 0 && $f1 > $f2 \, $f1 / $f2
\, if ($f3 == 0 | $f4 == 0 && $f2 > $f1 \, $f1/$f1 \, $f1)) \; if($f3
== 0 | $f4 == 0 && $f1 > $f2 \, $f2/$f2 \, if ($f3 == 0 | $f4 == 0
&& $f2 > $f1 \, $f2/$f1 \, $f2));
#X obj -134 362 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -17 358 i;
#X obj -68 358 i;
#X obj -58 315 t b b;
#X obj -55 273 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -54 123 [PRODUCE WHOLE NUMBER RATIO];
#X obj -132 71 sel 4;
#X obj -92 151 r \$0-bs3;
#X obj -28 152 r \$0-bs3;
#X obj 70 154 r \$0-bs4;
#X obj 133 154 r \$0-bs4;
#X obj 412 94 r \$0-bs3;
#X obj 472 93 r \$0-bs4;
#X obj 544 1 r \$0-pcd4;
#X obj 367 234 r ma.c4;
#X obj 619 243 s asymm.ma4;
#X obj 367 501 s man.c4;
#X obj 212 468 s ar.4b;
#X obj -132 470 s ar.4a;
#X obj 284 325 s asymm.4;
#X connect 0 0 1 0;
#X connect 1 0 45 0;
#X connect 1 0 95 0;
#X connect 2 0 0 1;
#X connect 2 0 17 1;
#X connect 2 0 18 1;
#X connect 2 0 91 0;
#X connect 3 0 0 0;
#X connect 3 0 39 0;
#X connect 3 0 40 0;
#X connect 3 0 18 0;
#X connect 3 0 17 0;
#X connect 4 0 12 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 14 0;
#X connect 8 0 15 0;
#X connect 9 0 10 0;
#X connect 9 0 92 0;
#X connect 11 0 9 1;
#X connect 11 0 47 0;
#X connect 12 0 9 2;
#X connect 12 0 48 0;
#X connect 13 0 9 3;
#X connect 13 0 43 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 17 0 6 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 13 0;
#X connect 22 0 24 0;
#X connect 23 0 24 1;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 26 0;
#X connect 25 0 29 1;
#X connect 25 0 36 0;
#X connect 25 0 78 1;
#X connect 26 0 28 1;
#X connect 26 0 37 0;
#X connect 26 0 77 1;
#X connect 27 0 24 0;
#X connect 28 0 30 0;
#X connect 29 0 31 0;
#X connect 30 0 75 2;
#X connect 30 0 80 0;
#X connect 31 0 75 3;
#X connect 33 0 13 1;
#X connect 34 0 94 0;
#X connect 35 0 93 0;
#X connect 36 0 28 0;
#X connect 37 0 29 0;
#X connect 38 0 3 0;
#X connect 39 0 5 0;
#X connect 40 0 4 0;
#X connect 45 0 5 1;
#X connect 45 0 4 1;
#X connect 45 0 46 0;
#X connect 54 0 82 0;
#X connect 55 0 54 0;
#X connect 56 0 58 0;
#X connect 57 0 62 3;
#X connect 58 0 71 0;
#X connect 59 0 60 0;
#X connect 60 0 56 0;
#X connect 60 0 61 0;
#X connect 62 0 2 0;
#X connect 63 0 64 0;
#X connect 64 0 62 0;
#X connect 64 0 73 0;
#X connect 64 0 72 0;
#X connect 65 0 62 1;
#X connect 69 0 57 0;
#X connect 70 0 69 0;
#X connect 71 0 70 0;
#X connect 71 1 69 1;
#X connect 72 0 22 0;
#X connect 73 0 23 0;
#X connect 75 0 34 0;
#X connect 75 1 35 0;
#X connect 76 0 75 0;
#X connect 77 0 75 1;
#X connect 78 0 75 0;
#X connect 79 0 78 0;
#X connect 79 1 77 0;
#X connect 80 0 79 0;
#X connect 82 0 63 0;
#X connect 83 0 72 1;
#X connect 84 0 72 2;
#X connect 85 0 73 1;
#X connect 86 0 73 2;
#X connect 87 0 65 0;
#X connect 88 0 62 2;
#X connect 88 0 68 0;
#X connect 89 0 59 0;
#X connect 90 0 9 0;
#X connect 90 0 38 0;
#X restore 30 549 pd asymm.ma.4;
#N canvas 151 53 1093 683 asymm.ma.5 0;
#X obj 367 288 /;
#X floatatom 367 309 10 0 0 0 - - -;
#X floatatom 421 227 10 0 0 0 - - -;
#X floatatom 308 272 5 0 0 0 - - -;
#X obj 426 406 +;
#X obj 384 406 -;
#X obj 470 263 sel 1;
#X obj 470 281 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 503 279 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 367 449 mux _ _ _;
#X floatatom 367 478 5 0 0 0 - - -;
#X obj 384 432 pipe 5;
#X obj 426 432 pipe 5;
#X obj 470 432 * \$1;
#X msg 470 296 2;
#X msg 503 295 1;
#X text 432 313 value (ratio of attractional asymmetry) - value reflects
degree of attractional asymmetry;
#X obj 470 243 >;
#X obj 534 243 ==;
#X obj 534 261 sel 1;
#X msg 534 280 0;
#N canvas 0 22 414 363 decimal.fraction.info 0;
#X text -179 174 http://en.wikipedia.org/wiki/Fraction_%28mathematics%29#Converting_repeating_decimals_to_fractions
;
#X text -203 141 http://en.wikipedia.org/wiki/Repeating_decimal#Converting_repeating_decimals_to_fractions
;
#X text -207 76 For repeating decimal - Let x = 0.111... (1) So 1000x
= 111.111... (2) Subtracting (2) and (1) gives: 1000x - x = 111.111...
- 0.111... ==> 999x = 111 ==> x = 111/999 ==> x = 1/9 Therefore \,
0.111... = 1/9.;
#X text -179 214 Producing ratios from decimal values is difficult
;
#X text -180 233 Dividing fractions to produce ratio: Turn the second
fraction upside-down (it becomes a reciprocal) 2) Multiply the first
fraction by that reciprocal 3) Simplify;
#X text -179 280 http://www.mathsisfun.com/fractions_division.html
;
#X restore -124 598 pd decimal.fraction.info;
#X floatatom -132 195 5 0 0 0 - - -;
#X floatatom 39 195 5 0 0 0 - - -;
#X obj -132 218 expr if ($f1 == $f2 \, 1 \, $f1) \; if ($f2 == $f1
\, 1 \, $f2) \;;
#X floatatom -132 265 5 0 0 0 - - -;
#X floatatom 39 278 5 0 0 0 - - -;
#X obj -47 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 317 mod;
#X obj 39 318 mod;
#X floatatom -132 337 5 0 0 0 - - -;
#X floatatom 39 335 5 0 0 0 - - -;
#X text -18 448 SIMPLIFY!!!!!!;
#X obj 491 397 r asym.ofs;
#X floatatom -132 449 5 0 0 0 - - -;
#X floatatom 212 448 10 0 0 0 - - -;
#X obj -132 297 pipe 1;
#X obj 39 297 pipe 1;
#X obj 308 251 pipe 10;
#X obj 352 378 pipe 1;
#X obj 407 377 pipe 1;
#X text 578 270 accounting for mutual attractions (==) same attractional
value - result = do nothing - output original MA;
#X text 461 482 Similar to concept of implicative denial in order to
account for melodic motion - Further quantification of sequential pitch
relationships (p. 170) - might not be suitable \, though.;
#X floatatom 502 449 5 0 0 0 - - -;
#X text 541 449 output select for mux;
#X obj 399 350 / 16;
#X floatatom 455 367 10 0 0 0 - - -;
#X floatatom 300 449 10 0 0 0 - - -;
#X floatatom 426 449 5 0 0 0 - - -;
#X text 525 350 Divide by 16 as it is the maximum value for a line
of assymetrical attraction (Lerdahl 2001 \, p. 168) - This method produces
values which are more suitable as an offset;
#X text 692 242 to use with tendency algorithm;
#X text 283 343 intial offset;
#X text 365 520 scaled offset;
#X text 550 208 divided by inverse tone config;
#X floatatom -132 51 5 0 0 0 - - -;
#X obj -132 31 r counter;
#X obj 544 62 abs;
#X floatatom 544 160 5 0 0 0 - - -;
#X obj 544 81 pow 2;
#X floatatom 544 22 5 0 0 0 - - -;
#X obj 544 43 % 12;
#X floatatom 594 60 5 0 0 0 - - -;
#X obj 421 178 expr $f2 / $f3 * $f4 \;;
#X obj -132 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 161 del 50;
#X floatatom 412 114 5 0 0 0 - - -;
#X text 411 80 new;
#X text 469 79 previous;
#X floatatom 493 110 5 0 0 0 - - -;
#X obj 544 141 /;
#X msg 544 122 1;
#X obj 544 101 t b f;
#X obj -132 178 expr $f2 * $f3;
#X obj 39 178 expr $f2 * $f3;
#X text -129 514 if mod (remainder after division - i.e. ration that
divides equally into itself) 3 or 4 == 0 (2 numbers divide into each
other) AND 1 is greater than 2 > then produced 1/2 \, ELSE if MOD 3
or 4 == 0 AND 2 > 1 \, then 1/1 \, or produce 1 etc.;
#X obj -133 384 expr if($f3 == 0 | $f4 == 0 && $f1 > $f2 \, $f1 / $f2
\, if ($f3 == 0 | $f4 == 0 && $f2 > $f1 \, $f1/$f1 \, $f1)) \; if($f3
== 0 | $f4 == 0 && $f1 > $f2 \, $f2/$f2 \, if ($f3 == 0 | $f4 == 0
&& $f2 > $f1 \, $f2/$f1 \, $f2));
#X obj -134 362 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -17 358 i;
#X obj -68 358 i;
#X obj -58 315 t b b;
#X obj -55 273 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -54 123 [PRODUCE WHOLE NUMBER RATIO];
#X obj -132 71 sel 5;
#X obj -92 151 r \$0-bs4;
#X obj -28 152 r \$0-bs4;
#X obj 70 154 r \$0-bs5;
#X obj 133 154 r \$0-bs5;
#X obj 412 94 r \$0-bs4;
#X obj 472 93 r \$0-bs5;
#X obj 544 1 r \$0-pcd5;
#X obj 367 234 r ma.c5;
#X obj 619 243 s asymm.ma5;
#X obj 284 325 s asymm.5;
#X obj 367 501 s man.c5;
#X obj 212 468 s ar.5b;
#X obj -132 470 s ar.5a;
#X connect 0 0 1 0;
#X connect 1 0 45 0;
#X connect 1 0 92 0;
#X connect 2 0 0 1;
#X connect 2 0 17 1;
#X connect 2 0 18 1;
#X connect 2 0 91 0;
#X connect 3 0 0 0;
#X connect 3 0 39 0;
#X connect 3 0 40 0;
#X connect 3 0 18 0;
#X connect 3 0 17 0;
#X connect 4 0 12 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 14 0;
#X connect 8 0 15 0;
#X connect 9 0 10 0;
#X connect 9 0 93 0;
#X connect 11 0 9 1;
#X connect 11 0 47 0;
#X connect 12 0 9 2;
#X connect 12 0 48 0;
#X connect 13 0 9 3;
#X connect 13 0 43 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 17 0 6 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 13 0;
#X connect 22 0 24 0;
#X connect 23 0 24 1;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 26 0;
#X connect 25 0 29 1;
#X connect 25 0 36 0;
#X connect 25 0 78 1;
#X connect 26 0 28 1;
#X connect 26 0 37 0;
#X connect 26 0 77 1;
#X connect 27 0 24 0;
#X connect 28 0 30 0;
#X connect 29 0 31 0;
#X connect 30 0 75 2;
#X connect 30 0 80 0;
#X connect 31 0 75 3;
#X connect 33 0 13 1;
#X connect 34 0 95 0;
#X connect 35 0 94 0;
#X connect 36 0 28 0;
#X connect 37 0 29 0;
#X connect 38 0 3 0;
#X connect 39 0 5 0;
#X connect 40 0 4 0;
#X connect 45 0 5 1;
#X connect 45 0 4 1;
#X connect 45 0 46 0;
#X connect 54 0 82 0;
#X connect 55 0 54 0;
#X connect 56 0 58 0;
#X connect 57 0 62 3;
#X connect 58 0 71 0;
#X connect 59 0 60 0;
#X connect 60 0 56 0;
#X connect 60 0 61 0;
#X connect 62 0 2 0;
#X connect 63 0 64 0;
#X connect 64 0 62 0;
#X connect 64 0 73 0;
#X connect 64 0 72 0;
#X connect 65 0 62 1;
#X connect 69 0 57 0;
#X connect 70 0 69 0;
#X connect 71 0 70 0;
#X connect 71 1 69 1;
#X connect 72 0 22 0;
#X connect 73 0 23 0;
#X connect 75 0 34 0;
#X connect 75 1 35 0;
#X connect 76 0 75 0;
#X connect 77 0 75 1;
#X connect 78 0 75 0;
#X connect 79 0 78 0;
#X connect 79 1 77 0;
#X connect 80 0 79 0;
#X connect 82 0 63 0;
#X connect 83 0 72 1;
#X connect 84 0 72 2;
#X connect 85 0 73 1;
#X connect 86 0 73 2;
#X connect 87 0 65 0;
#X connect 88 0 62 2;
#X connect 88 0 68 0;
#X connect 89 0 59 0;
#X connect 90 0 9 0;
#X connect 90 0 38 0;
#X restore 30 568 pd asymm.ma.5;
#N canvas 151 53 1093 683 asymm.ma.6 0;
#X obj 367 288 /;
#X floatatom 367 309 10 0 0 0 - - -;
#X floatatom 421 227 10 0 0 0 - - -;
#X floatatom 308 272 5 0 0 0 - - -;
#X obj 426 406 +;
#X obj 384 406 -;
#X obj 470 263 sel 1;
#X obj 470 281 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 503 279 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 367 449 mux _ _ _;
#X floatatom 367 478 5 0 0 0 - - -;
#X obj 384 432 pipe 5;
#X obj 426 432 pipe 5;
#X obj 470 432 * \$1;
#X msg 470 296 2;
#X msg 503 295 1;
#X text 432 313 value (ratio of attractional asymmetry) - value reflects
degree of attractional asymmetry;
#X obj 470 243 >;
#X obj 534 243 ==;
#X obj 534 261 sel 1;
#X msg 534 280 0;
#N canvas 0 22 414 363 decimal.fraction.info 0;
#X text -179 174 http://en.wikipedia.org/wiki/Fraction_%28mathematics%29#Converting_repeating_decimals_to_fractions
;
#X text -203 141 http://en.wikipedia.org/wiki/Repeating_decimal#Converting_repeating_decimals_to_fractions
;
#X text -207 76 For repeating decimal - Let x = 0.111... (1) So 1000x
= 111.111... (2) Subtracting (2) and (1) gives: 1000x - x = 111.111...
- 0.111... ==> 999x = 111 ==> x = 111/999 ==> x = 1/9 Therefore \,
0.111... = 1/9.;
#X text -179 214 Producing ratios from decimal values is difficult
;
#X text -180 233 Dividing fractions to produce ratio: Turn the second
fraction upside-down (it becomes a reciprocal) 2) Multiply the first
fraction by that reciprocal 3) Simplify;
#X text -179 280 http://www.mathsisfun.com/fractions_division.html
;
#X restore -124 598 pd decimal.fraction.info;
#X floatatom -132 195 5 0 0 0 - - -;
#X floatatom 39 195 5 0 0 0 - - -;
#X obj -132 218 expr if ($f1 == $f2 \, 1 \, $f1) \; if ($f2 == $f1
\, 1 \, $f2) \;;
#X floatatom -132 265 5 0 0 0 - - -;
#X floatatom 39 278 5 0 0 0 - - -;
#X obj -47 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 317 mod;
#X obj 39 318 mod;
#X floatatom -132 337 5 0 0 0 - - -;
#X floatatom 39 335 5 0 0 0 - - -;
#X text -18 448 SIMPLIFY!!!!!!;
#X obj 491 397 r asym.ofs;
#X floatatom -132 449 5 0 0 0 - - -;
#X floatatom 212 448 10 0 0 0 - - -;
#X obj -132 297 pipe 1;
#X obj 39 297 pipe 1;
#X obj 308 251 pipe 10;
#X obj 352 378 pipe 1;
#X obj 407 377 pipe 1;
#X text 578 270 accounting for mutual attractions (==) same attractional
value - result = do nothing - output original MA;
#X text 461 482 Similar to concept of implicative denial in order to
account for melodic motion - Further quantification of sequential pitch
relationships (p. 170) - might not be suitable \, though.;
#X floatatom 502 449 5 0 0 0 - - -;
#X text 541 449 output select for mux;
#X obj 399 350 / 16;
#X floatatom 455 367 10 0 0 0 - - -;
#X floatatom 300 449 10 0 0 0 - - -;
#X floatatom 426 449 5 0 0 0 - - -;
#X text 525 350 Divide by 16 as it is the maximum value for a line
of assymetrical attraction (Lerdahl 2001 \, p. 168) - This method produces
values which are more suitable as an offset;
#X text 692 242 to use with tendency algorithm;
#X text 283 343 intial offset;
#X text 365 520 scaled offset;
#X text 550 208 divided by inverse tone config;
#X floatatom -132 51 5 0 0 0 - - -;
#X obj -132 31 r counter;
#X obj 544 62 abs;
#X floatatom 544 160 5 0 0 0 - - -;
#X obj 544 81 pow 2;
#X floatatom 544 22 5 0 0 0 - - -;
#X obj 544 43 % 12;
#X floatatom 594 60 5 0 0 0 - - -;
#X obj 421 178 expr $f2 / $f3 * $f4 \;;
#X obj -132 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 161 del 50;
#X floatatom 412 114 5 0 0 0 - - -;
#X text 411 80 new;
#X text 469 79 previous;
#X floatatom 493 110 5 0 0 0 - - -;
#X obj 544 141 /;
#X msg 544 122 1;
#X obj 544 101 t b f;
#X obj -132 178 expr $f2 * $f3;
#X obj 39 178 expr $f2 * $f3;
#X text -129 514 if mod (remainder after division - i.e. ration that
divides equally into itself) 3 or 4 == 0 (2 numbers divide into each
other) AND 1 is greater than 2 > then produced 1/2 \, ELSE if MOD 3
or 4 == 0 AND 2 > 1 \, then 1/1 \, or produce 1 etc.;
#X obj -133 384 expr if($f3 == 0 | $f4 == 0 && $f1 > $f2 \, $f1 / $f2
\, if ($f3 == 0 | $f4 == 0 && $f2 > $f1 \, $f1/$f1 \, $f1)) \; if($f3
== 0 | $f4 == 0 && $f1 > $f2 \, $f2/$f2 \, if ($f3 == 0 | $f4 == 0
&& $f2 > $f1 \, $f2/$f1 \, $f2));
#X obj -134 362 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -17 358 i;
#X obj -68 358 i;
#X obj -58 315 t b b;
#X obj -55 273 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -54 123 [PRODUCE WHOLE NUMBER RATIO];
#X obj -132 71 sel 6;
#X obj -92 151 r \$0-bs5;
#X obj -28 152 r \$0-bs5;
#X obj 70 154 r \$0-bs6;
#X obj 133 154 r \$0-bs6;
#X obj 412 94 r \$0-bs5;
#X obj 472 93 r \$0-bs6;
#X obj 544 1 r \$0-pcd6;
#X obj 367 234 r ma.c6;
#X obj 619 243 s asymm.ma6;
#X obj 284 325 s asymm.6;
#X obj 367 501 s man.c6;
#X obj 212 468 s ar.6b;
#X obj -132 470 s ar.6a;
#X connect 0 0 1 0;
#X connect 1 0 45 0;
#X connect 1 0 92 0;
#X connect 2 0 0 1;
#X connect 2 0 17 1;
#X connect 2 0 18 1;
#X connect 2 0 91 0;
#X connect 3 0 0 0;
#X connect 3 0 39 0;
#X connect 3 0 40 0;
#X connect 3 0 18 0;
#X connect 3 0 17 0;
#X connect 4 0 12 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 14 0;
#X connect 8 0 15 0;
#X connect 9 0 10 0;
#X connect 9 0 93 0;
#X connect 11 0 9 1;
#X connect 11 0 47 0;
#X connect 12 0 9 2;
#X connect 12 0 48 0;
#X connect 13 0 9 3;
#X connect 13 0 43 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 17 0 6 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 13 0;
#X connect 22 0 24 0;
#X connect 23 0 24 1;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 26 0;
#X connect 25 0 29 1;
#X connect 25 0 36 0;
#X connect 25 0 78 1;
#X connect 26 0 28 1;
#X connect 26 0 37 0;
#X connect 26 0 77 1;
#X connect 27 0 24 0;
#X connect 28 0 30 0;
#X connect 29 0 31 0;
#X connect 30 0 75 2;
#X connect 30 0 80 0;
#X connect 31 0 75 3;
#X connect 33 0 13 1;
#X connect 34 0 95 0;
#X connect 35 0 94 0;
#X connect 36 0 28 0;
#X connect 37 0 29 0;
#X connect 38 0 3 0;
#X connect 39 0 5 0;
#X connect 40 0 4 0;
#X connect 45 0 5 1;
#X connect 45 0 4 1;
#X connect 45 0 46 0;
#X connect 54 0 82 0;
#X connect 55 0 54 0;
#X connect 56 0 58 0;
#X connect 57 0 62 3;
#X connect 58 0 71 0;
#X connect 59 0 60 0;
#X connect 60 0 56 0;
#X connect 60 0 61 0;
#X connect 62 0 2 0;
#X connect 63 0 64 0;
#X connect 64 0 62 0;
#X connect 64 0 73 0;
#X connect 64 0 72 0;
#X connect 65 0 62 1;
#X connect 69 0 57 0;
#X connect 70 0 69 0;
#X connect 71 0 70 0;
#X connect 71 1 69 1;
#X connect 72 0 22 0;
#X connect 73 0 23 0;
#X connect 75 0 34 0;
#X connect 75 1 35 0;
#X connect 76 0 75 0;
#X connect 77 0 75 1;
#X connect 78 0 75 0;
#X connect 79 0 78 0;
#X connect 79 1 77 0;
#X connect 80 0 79 0;
#X connect 82 0 63 0;
#X connect 83 0 72 1;
#X connect 84 0 72 2;
#X connect 85 0 73 1;
#X connect 86 0 73 2;
#X connect 87 0 65 0;
#X connect 88 0 62 2;
#X connect 88 0 68 0;
#X connect 89 0 59 0;
#X connect 90 0 9 0;
#X connect 90 0 38 0;
#X restore 30 588 pd asymm.ma.6;
#N canvas 151 53 1093 683 asymm.ma.7 0;
#X obj 367 288 /;
#X floatatom 367 309 10 0 0 0 - - -;
#X floatatom 421 227 10 0 0 0 - - -;
#X floatatom 308 272 5 0 0 0 - - -;
#X obj 426 406 +;
#X obj 384 406 -;
#X obj 470 263 sel 1;
#X obj 470 281 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 503 279 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 367 449 mux _ _ _;
#X floatatom 367 478 5 0 0 0 - - -;
#X obj 384 432 pipe 5;
#X obj 426 432 pipe 5;
#X obj 470 432 * \$1;
#X msg 470 296 2;
#X msg 503 295 1;
#X text 432 313 value (ratio of attractional asymmetry) - value reflects
degree of attractional asymmetry;
#X obj 470 243 >;
#X obj 534 243 ==;
#X obj 534 261 sel 1;
#X msg 534 280 0;
#N canvas 0 22 414 363 decimal.fraction.info 0;
#X text -179 174 http://en.wikipedia.org/wiki/Fraction_%28mathematics%29#Converting_repeating_decimals_to_fractions
;
#X text -203 141 http://en.wikipedia.org/wiki/Repeating_decimal#Converting_repeating_decimals_to_fractions
;
#X text -207 76 For repeating decimal - Let x = 0.111... (1) So 1000x
= 111.111... (2) Subtracting (2) and (1) gives: 1000x - x = 111.111...
- 0.111... ==> 999x = 111 ==> x = 111/999 ==> x = 1/9 Therefore \,
0.111... = 1/9.;
#X text -179 214 Producing ratios from decimal values is difficult
;
#X text -180 233 Dividing fractions to produce ratio: Turn the second
fraction upside-down (it becomes a reciprocal) 2) Multiply the first
fraction by that reciprocal 3) Simplify;
#X text -179 280 http://www.mathsisfun.com/fractions_division.html
;
#X restore -124 598 pd decimal.fraction.info;
#X floatatom -132 195 5 0 0 0 - - -;
#X floatatom 39 195 5 0 0 0 - - -;
#X obj -132 218 expr if ($f1 == $f2 \, 1 \, $f1) \; if ($f2 == $f1
\, 1 \, $f2) \;;
#X floatatom -132 265 5 0 0 0 - - -;
#X floatatom 39 278 5 0 0 0 - - -;
#X obj -47 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 317 mod;
#X obj 39 318 mod;
#X floatatom -132 337 5 0 0 0 - - -;
#X floatatom 39 335 5 0 0 0 - - -;
#X text -18 448 SIMPLIFY!!!!!!;
#X obj 491 397 r asym.ofs;
#X floatatom -132 449 5 0 0 0 - - -;
#X floatatom 212 448 10 0 0 0 - - -;
#X obj -132 297 pipe 1;
#X obj 39 297 pipe 1;
#X obj 308 251 pipe 10;
#X obj 352 378 pipe 1;
#X obj 407 377 pipe 1;
#X text 578 270 accounting for mutual attractions (==) same attractional
value - result = do nothing - output original MA;
#X text 461 482 Similar to concept of implicative denial in order to
account for melodic motion - Further quantification of sequential pitch
relationships (p. 170) - might not be suitable \, though.;
#X floatatom 502 449 5 0 0 0 - - -;
#X text 541 449 output select for mux;
#X obj 399 350 / 16;
#X floatatom 455 367 10 0 0 0 - - -;
#X floatatom 300 449 10 0 0 0 - - -;
#X floatatom 426 449 5 0 0 0 - - -;
#X text 525 350 Divide by 16 as it is the maximum value for a line
of assymetrical attraction (Lerdahl 2001 \, p. 168) - This method produces
values which are more suitable as an offset;
#X text 692 242 to use with tendency algorithm;
#X text 283 343 intial offset;
#X text 365 520 scaled offset;
#X text 550 208 divided by inverse tone config;
#X floatatom -132 51 5 0 0 0 - - -;
#X obj -132 31 r counter;
#X obj 544 62 abs;
#X floatatom 544 160 5 0 0 0 - - -;
#X obj 544 81 pow 2;
#X floatatom 544 22 5 0 0 0 - - -;
#X obj 544 43 % 12;
#X floatatom 594 60 5 0 0 0 - - -;
#X obj 421 178 expr $f2 / $f3 * $f4 \;;
#X obj -132 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -132 161 del 50;
#X floatatom 412 114 5 0 0 0 - - -;
#X text 411 80 new;
#X text 469 79 previous;
#X floatatom 493 110 5 0 0 0 - - -;
#X obj 544 141 /;
#X msg 544 122 1;
#X obj 544 101 t b f;
#X obj -132 178 expr $f2 * $f3;
#X obj 39 178 expr $f2 * $f3;
#X text -129 514 if mod (remainder after division - i.e. ration that
divides equally into itself) 3 or 4 == 0 (2 numbers divide into each
other) AND 1 is greater than 2 > then produced 1/2 \, ELSE if MOD 3
or 4 == 0 AND 2 > 1 \, then 1/1 \, or produce 1 etc.;
#X obj -133 384 expr if($f3 == 0 | $f4 == 0 && $f1 > $f2 \, $f1 / $f2
\, if ($f3 == 0 | $f4 == 0 && $f2 > $f1 \, $f1/$f1 \, $f1)) \; if($f3
== 0 | $f4 == 0 && $f1 > $f2 \, $f2/$f2 \, if ($f3 == 0 | $f4 == 0
&& $f2 > $f1 \, $f2/$f1 \, $f2));
#X obj -134 362 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -17 358 i;
#X obj -68 358 i;
#X obj -58 315 t b b;
#X obj -55 273 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -54 123 [PRODUCE WHOLE NUMBER RATIO];
#X obj -132 71 sel 7;
#X obj -92 151 r \$0-bs6;
#X obj -28 152 r \$0-bs6;
#X obj 70 154 r \$0-bs7;
#X obj 133 154 r \$0-bs7;
#X obj 412 94 r \$0-bs6;
#X obj 472 93 r \$0-bs7;
#X obj 544 1 r \$0-pcd7;
#X obj 619 243 s asymm.ma7;
#X obj 367 234 r ma.c7;
#X obj 284 325 s asymm.7;
#X obj 367 501 s man.c7;
#X obj 212 468 s ar.7b;
#X obj -132 470 s ar.7a;
#X connect 0 0 1 0;
#X connect 1 0 45 0;
#X connect 1 0 92 0;
#X connect 2 0 0 1;
#X connect 2 0 17 1;
#X connect 2 0 18 1;
#X connect 2 0 90 0;
#X connect 3 0 0 0;
#X connect 3 0 39 0;
#X connect 3 0 40 0;
#X connect 3 0 18 0;
#X connect 3 0 17 0;
#X connect 4 0 12 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 7 0 14 0;
#X connect 8 0 15 0;
#X connect 9 0 10 0;
#X connect 9 0 93 0;
#X connect 11 0 9 1;
#X connect 11 0 47 0;
#X connect 12 0 9 2;
#X connect 12 0 48 0;
#X connect 13 0 9 3;
#X connect 13 0 43 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 17 0 6 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 13 0;
#X connect 22 0 24 0;
#X connect 23 0 24 1;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 26 0;
#X connect 25 0 29 1;
#X connect 25 0 36 0;
#X connect 25 0 78 1;
#X connect 26 0 28 1;
#X connect 26 0 37 0;
#X connect 26 0 77 1;
#X connect 27 0 24 0;
#X connect 28 0 30 0;
#X connect 29 0 31 0;
#X connect 30 0 75 2;
#X connect 30 0 80 0;
#X connect 31 0 75 3;
#X connect 33 0 13 1;
#X connect 34 0 95 0;
#X connect 35 0 94 0;
#X connect 36 0 28 0;
#X connect 37 0 29 0;
#X connect 38 0 3 0;
#X connect 39 0 5 0;
#X connect 40 0 4 0;
#X connect 45 0 5 1;
#X connect 45 0 4 1;
#X connect 45 0 46 0;
#X connect 54 0 82 0;
#X connect 55 0 54 0;
#X connect 56 0 58 0;
#X connect 57 0 62 3;
#X connect 58 0 71 0;
#X connect 59 0 60 0;
#X connect 60 0 56 0;
#X connect 60 0 61 0;
#X connect 62 0 2 0;
#X connect 63 0 64 0;
#X connect 64 0 62 0;
#X connect 64 0 73 0;
#X connect 64 0 72 0;
#X connect 65 0 62 1;
#X connect 69 0 57 0;
#X connect 70 0 69 0;
#X connect 71 0 70 0;
#X connect 71 1 69 1;
#X connect 72 0 22 0;
#X connect 73 0 23 0;
#X connect 75 0 34 0;
#X connect 75 1 35 0;
#X connect 76 0 75 0;
#X connect 77 0 75 1;
#X connect 78 0 75 0;
#X connect 79 0 78 0;
#X connect 79 1 77 0;
#X connect 80 0 79 0;
#X connect 82 0 63 0;
#X connect 83 0 72 1;
#X connect 84 0 72 2;
#X connect 85 0 73 1;
#X connect 86 0 73 2;
#X connect 87 0 65 0;
#X connect 88 0 62 2;
#X connect 88 0 68 0;
#X connect 89 0 59 0;
#X connect 91 0 9 0;
#X connect 91 0 38 0;
#X restore 30 607 pd asymm.ma.7;
#X restore 424 163 pd attractional.asymmetry;
#N canvas 319 23 961 689 implicative.denial 0;
#X text 421 -2 (expected pitch) D to C = 4/2 * 1/2pow2 = 2 * 0.25 =
0.5 (realised pitch) D to E = 3/2 * 1/2pow2 = 1.5 * 0.25 = 0.35;
#X text -5 -556 "power of implicative denial";
#X text -1 -519 The attraction rule (virtually) predicts the attraction
of any pitch (p) to any other pitch.;
#X text 0 -485 Essentially comparing highest virtual attraction value
to the realised pitch attraction value;
#X text 0 -534 e(p1 -> p2) - r(p1 -> p2) = power of implicative denial
;
#X text 69 -320 (r) = current/next note;
#X obj 39 -212 expr $f2 - $f1;
#N canvas 0 68 1280 732 apmav 0;
#X obj 91 153 abs;
#X floatatom -32 237 10 0 0 0 - - -;
#X obj 91 170 pow 2;
#X floatatom 134 120 5 0 0 0 - - -;
#X floatatom -116 156 5 0 0 0 - - -;
#X obj 29 203 f;
#X obj 1 172 once;
#X obj 1 188 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 134 86 cup;
#X obj -79 46 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj -115 78 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -116 96 cup;
#X obj -140 283 coll;
#C restore;
#X obj -294 143 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -140 266 pack 0 0 0 0;
#X obj -294 161 cup;
#X msg -294 227 0;
#X obj -32 172 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -294 251 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -47 337 outlet;
#X floatatom -47 317 10 0 0 0 - - -;
#X msg 199 266 clear;
#X floatatom -106 317 5 0 0 0 - - -;
#X floatatom -189 317 5 0 0 0 - - -;
#X obj -189 338 outlet;
#X obj -106 339 outlet;
#X text -211 411 basic space;
#X text -127 409 steps (semitones);
#X obj 44 -21 r \$0-bs1;
#X obj 44 14 mux _ _ _ _ _ _ _;
#X obj 175 -28 r counter;
#X obj 175 -3 - 1;
#X obj 99 -21 r \$0-bs2;
#X obj 72 -38 r \$0-bs3;
#X obj 86 -55 r \$0-bs4;
#X obj 9 -3 r \$0-bs5;
#X obj 65 -3 r \$0-bs6;
#X obj 120 -3 r \$0-bs7;
#X text 84 32 selects basic space of current note;
#X obj 6 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj -140 300 unpack 0 0 0;
#X text -58 283 sort by highest melodic attraction value;
#X text -225 281 store in coll;
#X text -192 356 recall highest attraction value in relation to previous
note based on unique value using [nth message(;
#X text 334 -47 "should all virtual attractions on p be combined in
making a quantified prediction for its single most expected continuation?
This step would seem unnecessary as well as complicated \, for attractions
more than a whole step away would count for little (Lerdahl 2001 \,
p. 170).";
#X text -400 -98 Lerdahl restricts this rule to "proximate attractors."
- either side of the current tone;
#X text -35 146 bs: 1 to 4;
#X text 164 102 steps: 1 to 12;
#X text -400 -1 needs 20ms to process 48 possibilities 12 semitone
steps per 4 basic spaces = 4 x 12 = 48 = 0 to 47;
#X obj -32 220 expr $f1 / $f2 * $f3 \;;
#X floatatom 205 -11 5 0 0 0 - - -;
#X floatatom 173 156 5 0 0 0 - - -;
#X obj 134 136 moses 1;
#X obj 173 190 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 173 172 sel 12;
#X obj 134 103 % 13;
#X msg 172 205 0;
#X msg 134 70 1;
#X obj -116 136 % 5;
#X obj -116 116 + 1;
#X obj 97 115 sel 1;
#X msg -294 266 bang;
#X obj -294 203 sel 48;
#X obj -294 181 % 49;
#X text 100 220 s2/s1 * 1/npow2;
#X obj 528 140 mux _ _ _ _ _ _ _;
#X obj 662 98 r counter;
#X obj 662 123 - 1;
#X floatatom 692 115 5 0 0 0 - - -;
#X obj 482 106 r \$0-pc1;
#X obj 542 106 r \$0-pc2;
#X obj 598 106 r \$0-pc3;
#X obj 570 89 r \$0-pc4;
#X obj 482 123 r \$0-pc5;
#X obj 542 123 r \$0-pc6;
#X obj 598 123 r \$0-pc7;
#X floatatom 528 159 5 0 0 0 - - -;
#X text 567 161 current pitch class;
#X floatatom 43 33 5 0 0 0 - - -;
#X text 73 436 only if available;
#X msg -50 266 sort 1 3;
#X floatatom 416 509 5 0 0 0 - - -;
#X floatatom 31 437 5 0 0 0 - - -;
#X floatatom 578 350 5 0 0 0 - - -;
#X msg 74 474 1;
#X msg 176 474 3;
#X msg 31 474 4;
#X msg 118 474 2;
#X msg 530 458 1;
#X msg 589 458 3;
#X msg 501 458 4;
#X msg 560 458 2;
#X text -352 502 once generated - bang through contents until suitable
(e) is found based on current bs and pc;
#X text 334 550 e.g. bs = 4 and pc = 0;
#X text 335 566 add pcd add and test against basic space;
#X obj 578 366 < 0;
#X obj 628 424 + 12;
#X obj 578 387 sel 1;
#X obj 628 404 i;
#X obj 501 424 i;
#X obj 530 404 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 530 423 del 5;
#X obj 662 404 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 662 424 del 5;
#X text 370 274 considering pcd both motions (modulo arithmetic - pitch
= circular 0 to 11);
#X floatatom 9 511 5 0 0 0 - - -;
#X text -401 -67 This algorithm will generate all possible melodic
attraction values based on current basic space - before next note is
played and suggest the most attractive tone a step wise motion away
;
#X obj 31 457 sel 0 1 2 3 4 5 6 7 8 9 10 11 12;
#X obj 501 441 sel 0 1 2 3 4 5 6 7 8 9 10 11 12;
#X floatatom 118 491 5 0 0 0 - - -;
#X floatatom 501 475 5 0 0 0 - - -;
#X text 622 458 negative numbers to pc;
#X text 559 485 otherwise bang positive;
#X text 86 45 and compares against all possible combinations;
#X obj 199 527 expr if($f1 | $f2 > 0 \, 1 \, 0);
#X obj 199 549 sel 1;
#X floatatom 281 544 5 0 0 0 - - -;
#X obj 199 506 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -79 64 metro 1;
#X obj 278 508 t b f;
#X floatatom 447 350 5 0 0 0 - - -;
#X obj 447 333 expr $f2 - $f1;
#X obj 31 406 expr $f1 + $f2;
#X obj 9 491 expr $f1 == $f2;
#X obj 416 491 expr $f1 == $f2;
#X obj 199 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -362 318 output tones in order of ma;
#X text 156 249 clear coll once most suitable tone is output;
#X msg 199 585 0;
#X obj 225 566 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -189 474 pipe 20;
#X obj -331 249 del 1;
#X text -8 409 MA value;
#X text 263 200 add/substract current pitch class to projected pcd
\, then match up basic space;
#X text -297 50 produce all possible combinations;
#X obj 111 246 /;
#X msg 111 227 1;
#X obj 111 206 t b f;
#X obj -90 189 moses 1;
#X obj 311 135 expr $f1 / $f2 * $f3 \;;
#X obj 15 95 loadbang;
#X msg 46 133 1;
#X connect 0 0 2 0;
#X connect 1 0 14 3;
#X connect 2 0 137 0;
#X connect 3 0 52 0;
#X connect 4 0 6 0;
#X connect 4 0 14 1;
#X connect 4 0 138 0;
#X connect 5 0 49 1;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 8 0 55 0;
#X connect 9 0 118 0;
#X connect 10 0 11 0;
#X connect 10 0 6 1;
#X connect 11 0 59 0;
#X connect 12 0 40 0;
#X connect 13 0 15 0;
#X connect 14 0 12 0;
#X connect 15 0 63 0;
#X connect 16 0 9 0;
#X connect 16 0 57 0;
#X connect 16 0 15 0;
#X connect 16 0 55 0;
#X connect 16 0 11 0;
#X connect 17 0 49 0;
#X connect 18 0 80 0;
#X connect 18 0 61 0;
#X connect 20 0 19 0;
#X connect 21 0 12 0;
#X connect 22 0 25 0;
#X connect 22 0 121 0;
#X connect 22 0 122 0;
#X connect 23 0 24 0;
#X connect 23 0 130 0;
#X connect 28 0 29 0;
#X connect 29 0 5 1;
#X connect 29 0 39 0;
#X connect 29 0 78 0;
#X connect 30 0 31 0;
#X connect 30 0 50 0;
#X connect 31 0 29 7;
#X connect 32 0 29 1;
#X connect 33 0 29 2;
#X connect 34 0 29 3;
#X connect 35 0 29 4;
#X connect 36 0 29 5;
#X connect 37 0 29 6;
#X connect 39 0 9 0;
#X connect 40 0 23 0;
#X connect 40 1 22 0;
#X connect 40 2 20 0;
#X connect 49 0 1 0;
#X connect 51 0 54 0;
#X connect 51 0 17 0;
#X connect 52 1 14 2;
#X connect 52 1 0 0;
#X connect 52 1 51 0;
#X connect 53 0 56 0;
#X connect 54 0 53 0;
#X connect 55 0 3 0;
#X connect 55 0 60 0;
#X connect 56 0 8 0;
#X connect 57 0 8 0;
#X connect 58 0 4 0;
#X connect 59 0 58 0;
#X connect 60 0 10 0;
#X connect 61 0 12 0;
#X connect 62 0 16 0;
#X connect 62 0 18 0;
#X connect 63 0 14 0;
#X connect 63 0 62 0;
#X connect 65 0 76 0;
#X connect 66 0 67 0;
#X connect 66 0 68 0;
#X connect 67 0 65 7;
#X connect 69 0 65 0;
#X connect 70 0 65 1;
#X connect 71 0 65 2;
#X connect 72 0 65 3;
#X connect 73 0 65 4;
#X connect 74 0 65 5;
#X connect 75 0 65 6;
#X connect 76 0 121 1;
#X connect 76 0 122 1;
#X connect 80 0 12 0;
#X connect 82 0 107 0;
#X connect 83 0 95 0;
#X connect 83 0 99 1;
#X connect 83 0 98 1;
#X connect 84 0 109 0;
#X connect 84 0 123 1;
#X connect 85 0 109 0;
#X connect 85 0 123 1;
#X connect 86 0 109 0;
#X connect 86 0 123 1;
#X connect 87 0 109 0;
#X connect 87 0 123 1;
#X connect 88 0 110 0;
#X connect 89 0 110 0;
#X connect 90 0 110 0;
#X connect 91 0 110 0;
#X connect 95 0 97 0;
#X connect 96 0 108 0;
#X connect 97 0 102 0;
#X connect 97 1 100 0;
#X connect 98 0 96 0;
#X connect 99 0 108 0;
#X connect 100 0 101 0;
#X connect 101 0 99 0;
#X connect 102 0 103 0;
#X connect 103 0 98 0;
#X connect 105 0 114 0;
#X connect 107 0 86 0;
#X connect 107 1 84 0;
#X connect 107 2 87 0;
#X connect 107 3 84 0;
#X connect 107 4 85 0;
#X connect 107 5 87 0;
#X connect 107 6 84 0;
#X connect 107 7 85 0;
#X connect 107 8 84 0;
#X connect 107 9 87 0;
#X connect 107 10 84 0;
#X connect 107 11 87 0;
#X connect 107 12 86 0;
#X connect 108 0 90 0;
#X connect 108 1 88 0;
#X connect 108 2 91 0;
#X connect 108 3 88 0;
#X connect 108 4 89 0;
#X connect 108 5 91 0;
#X connect 108 6 88 0;
#X connect 108 7 89 0;
#X connect 108 8 88 0;
#X connect 108 9 91 0;
#X connect 108 10 88 0;
#X connect 108 11 91 0;
#X connect 108 13 90 0;
#X connect 110 0 124 1;
#X connect 114 0 115 0;
#X connect 114 0 116 0;
#X connect 115 0 125 0;
#X connect 115 1 129 0;
#X connect 117 0 114 0;
#X connect 118 0 8 0;
#X connect 118 0 13 0;
#X connect 119 0 117 0;
#X connect 119 1 114 1;
#X connect 121 0 83 0;
#X connect 121 0 120 0;
#X connect 122 0 82 0;
#X connect 123 0 105 0;
#X connect 124 0 81 0;
#X connect 124 0 119 0;
#X connect 125 0 128 0;
#X connect 125 0 21 0;
#X connect 128 0 114 1;
#X connect 129 0 131 0;
#X connect 130 0 123 0;
#X connect 130 0 124 0;
#X connect 131 0 61 0;
#X connect 135 0 49 2;
#X connect 136 0 135 0;
#X connect 137 0 136 0;
#X connect 137 1 135 1;
#X connect 138 1 49 0;
#X connect 140 0 141 0;
#X connect 141 0 5 0;
#X restore 243 -245 pd apmav;
#X floatatom 311 -228 5 0 0 0 - - -;
#X floatatom 315 -194 5 0 0 0 - - -;
#X floatatom 313 -161 5 0 0 0 - - -;
#X text 349 -164 basic space;
#X text 354 -195 steps (semitones);
#X text 355 -228 attraction value;
#X obj 39 -232 mux 0 1 2 3 4 5 6;
#X obj -7 -152 s deni.1;
#X obj 39 -169 demux 0 1 2 3 4 5 6;
#X obj 57 -152 s deni.2;
#X obj 176 -293 r counter;
#X obj 176 -249 - 1;
#X floatatom 39 -192 5 0 0 0 - - -;
#X floatatom 204 -249 5 0 0 0 - - -;
#X obj 214 -159 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -4 -449 This patch is a development on Lerdahl's computation
of all possible proximate attractors.;
#X text -5 -415 This patch will produce melodic attraction value for
all tones combinations within the basic space \, organise each combination
in order of highest melodic attraction \, and then produce the most
convenient step-wise motion based on current pitch class and projected
pitch class distance.;
#X obj 76 -135 s deni.3;
#X obj 94 -119 s deni.4;
#X obj 113 -152 s deni.5;
#X obj 131 -135 s deni.6;
#X obj 150 -118 s deni.7;
#X text 409 -114 calculating (e) = linear expectation value compared
against all possible melodic attraction values - highest possible value
a step-wise motion away;
#X text 425 29 The following algorithm should produce 0 if highest
attractor was selected;
#X text 424 -33 Power of implicative denial = probable tone (p1 ->
p2) - actual (p1 -> p3 (p. 172);
#X text 424 -481 e.g. Asteroid analog: Stable pitches = large asteroids.
Proximate pitches = closer asteroids - could translate well to changing
the size of W harmonic in ambisonics panner;
#X obj 313 -140 s pbs;
#X obj 326 -176 s ppcd;
#X obj 320 -209 s pmav;
#X obj 191 -212 f;
#X obj 4 -249 r ma.c1;
#X obj 53 -249 r ma.c2;
#X obj 67 -267 r ma.c3;
#X obj 81 -283 r ma.c4;
#X obj 95 -300 r ma.c5;
#X obj 109 -249 r ma.c6;
#X obj 123 -266 r ma.c7;
#X floatatom 2 -201 5 0 0 0 - - -;
#X floatatom 191 -190 5 0 0 0 - - -;
#X obj 241 -158 sel;
#X obj 237 -208 + 1;
#X obj 256 -183 pipe 1;
#X connect 6 0 16 0;
#X connect 6 0 20 0;
#X connect 7 0 10 0;
#X connect 7 1 9 0;
#X connect 7 2 8 0;
#X connect 8 0 36 0;
#X connect 8 0 37 1;
#X connect 9 0 35 0;
#X connect 10 0 34 0;
#X connect 14 0 6 0;
#X connect 14 0 45 0;
#X connect 16 0 15 0;
#X connect 16 1 17 0;
#X connect 16 2 25 0;
#X connect 16 3 26 0;
#X connect 16 4 27 0;
#X connect 16 5 28 0;
#X connect 16 6 29 0;
#X connect 18 0 19 0;
#X connect 18 0 21 0;
#X connect 19 0 14 7;
#X connect 19 0 16 1;
#X connect 19 0 47 0;
#X connect 19 0 48 0;
#X connect 22 0 37 0;
#X connect 37 0 6 1;
#X connect 37 0 46 0;
#X connect 38 0 14 0;
#X connect 39 0 14 1;
#X connect 40 0 14 2;
#X connect 41 0 14 3;
#X connect 42 0 14 4;
#X connect 43 0 14 5;
#X connect 44 0 14 6;
#X connect 47 0 22 0;
#X connect 48 0 49 0;
#X connect 49 0 47 1;
#X restore 424 226 pd implicative.denial;
#N canvas 262 54 219 120 denied.decimation 0;
#N canvas 574 112 687 459 deni.dec1 0;
#X obj 216 211 - 1;
#X obj 79 304 s di.rp.1;
#X obj 149 304 s di.rp.2;
#X obj 219 306 s di.rp.3;
#X obj 79 327 s di.rp.4;
#X obj 149 327 s di.rp.5;
#X obj 219 329 s di.rp.6;
#X floatatom 252 195 5 0 0 0 - - -;
#X obj 110 71 spigot;
#X obj 143 49 != 0;
#X obj 110 39 abs;
#X obj 110 144 line;
#X obj 252 176 r \$0-s1;
#X obj 110 -10 r deni.1;
#X floatatom 110 15 5 0 0 0 - - -;
#X text 181 -15 If potential attraction value not utilised (i.e. produce
mplicative denial value that is not zero) then take absolute value
\, scale it and ramp through [dino~] abstraction.;
#X text 306 176 string number for this particular note;
#X obj 105 237 demux - - - - - -;
#X floatatom 110 166 5 0 0 0 - - -;
#X obj 110 205 spigot;
#X obj 218 149 tgl 15 0 empty deni.dec empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 215 129 algorithm on/off (located under timbre menu);
#X floatatom 70 117 5 0 0 0 - - -;
#X msg 110 124 \$1 5000;
#X obj 110 100 / 4;
#X connect 0 0 17 1;
#X connect 7 0 0 0;
#X connect 8 0 24 0;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 18 0;
#X connect 12 0 7 0;
#X connect 13 0 14 0;
#X connect 14 0 10 0;
#X connect 14 0 9 0;
#X connect 17 0 1 0;
#X connect 17 1 2 0;
#X connect 17 2 3 0;
#X connect 17 3 4 0;
#X connect 17 4 5 0;
#X connect 17 5 6 0;
#X connect 18 0 19 0;
#X connect 19 0 17 0;
#X connect 20 0 19 1;
#X connect 23 0 11 0;
#X connect 24 0 23 0;
#X connect 24 0 22 0;
#X restore 32 1 pd deni.dec1;
#N canvas 0 22 687 459 deni.dec2 0;
#X obj 216 211 - 1;
#X obj 79 304 s di.rp.1;
#X obj 149 304 s di.rp.2;
#X obj 219 306 s di.rp.3;
#X obj 79 327 s di.rp.4;
#X obj 149 327 s di.rp.5;
#X obj 219 329 s di.rp.6;
#X floatatom 252 195 5 0 0 0 - - -;
#X obj 110 71 spigot;
#X obj 143 49 != 0;
#X obj 110 39 abs;
#X obj 110 144 line;
#X floatatom 110 15 5 0 0 0 - - -;
#X text 181 -15 If potential attraction value not utilised (i.e. produce
mplicative denial value that is not zero) then take absolute value
\, scale it and ramp through [dino~] abstraction.;
#X text 306 176 string number for this particular note;
#X obj 105 237 demux - - - - - -;
#X floatatom 110 166 5 0 0 0 - - -;
#X msg 110 124 \$1 1000;
#X obj 110 205 spigot;
#X obj 218 149 tgl 15 0 empty deni.dec empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 215 129 algorithm on/off (located under timbre menu);
#X floatatom 70 117 5 0 0 0 - - -;
#X obj 110 -10 r deni.2;
#X obj 252 176 r \$0-s2;
#X obj 110 100 / 4;
#X connect 0 0 15 1;
#X connect 7 0 0 0;
#X connect 8 0 24 0;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 16 0;
#X connect 12 0 10 0;
#X connect 12 0 9 0;
#X connect 15 0 1 0;
#X connect 15 1 2 0;
#X connect 15 2 3 0;
#X connect 15 3 4 0;
#X connect 15 4 5 0;
#X connect 15 5 6 0;
#X connect 16 0 18 0;
#X connect 17 0 11 0;
#X connect 18 0 15 0;
#X connect 19 0 18 1;
#X connect 22 0 12 0;
#X connect 23 0 7 0;
#X connect 24 0 17 0;
#X connect 24 0 21 0;
#X restore 32 25 pd deni.dec2;
#N canvas 0 22 687 459 deni.dec3 0;
#X obj 216 211 - 1;
#X obj 79 304 s di.rp.1;
#X obj 149 304 s di.rp.2;
#X obj 219 306 s di.rp.3;
#X obj 79 327 s di.rp.4;
#X obj 149 327 s di.rp.5;
#X obj 219 329 s di.rp.6;
#X floatatom 252 195 5 0 0 0 - - -;
#X obj 110 71 spigot;
#X obj 143 49 != 0;
#X obj 110 39 abs;
#X obj 110 144 line;
#X floatatom 110 15 5 0 0 0 - - -;
#X text 181 -15 If potential attraction value not utilised (i.e. produce
mplicative denial value that is not zero) then take absolute value
\, scale it and ramp through [dino~] abstraction.;
#X text 306 176 string number for this particular note;
#X obj 105 237 demux - - - - - -;
#X floatatom 110 166 5 0 0 0 - - -;
#X msg 110 124 \$1 1000;
#X obj 110 205 spigot;
#X obj 218 149 tgl 15 0 empty deni.dec empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 215 129 algorithm on/off (located under timbre menu);
#X floatatom 70 117 5 0 0 0 - - -;
#X obj 110 -10 r deni.3;
#X obj 252 176 r \$0-s3;
#X obj 110 100 / 4;
#X connect 0 0 15 1;
#X connect 7 0 0 0;
#X connect 8 0 24 0;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 16 0;
#X connect 12 0 10 0;
#X connect 12 0 9 0;
#X connect 15 0 1 0;
#X connect 15 1 2 0;
#X connect 15 2 3 0;
#X connect 15 3 4 0;
#X connect 15 4 5 0;
#X connect 15 5 6 0;
#X connect 16 0 18 0;
#X connect 17 0 11 0;
#X connect 18 0 15 0;
#X connect 19 0 18 1;
#X connect 22 0 12 0;
#X connect 23 0 7 0;
#X connect 24 0 17 0;
#X connect 24 0 21 0;
#X restore 31 49 pd deni.dec3;
#N canvas 0 22 687 459 deni.dec4 0;
#X obj 216 211 - 1;
#X obj 79 304 s di.rp.1;
#X obj 149 304 s di.rp.2;
#X obj 219 306 s di.rp.3;
#X obj 79 327 s di.rp.4;
#X obj 149 327 s di.rp.5;
#X obj 219 329 s di.rp.6;
#X floatatom 252 195 5 0 0 0 - - -;
#X obj 110 71 spigot;
#X obj 143 49 != 0;
#X obj 110 39 abs;
#X obj 110 144 line;
#X floatatom 110 15 5 0 0 0 - - -;
#X text 181 -15 If potential attraction value not utilised (i.e. produce
mplicative denial value that is not zero) then take absolute value
\, scale it and ramp through [dino~] abstraction.;
#X text 306 176 string number for this particular note;
#X obj 105 237 demux - - - - - -;
#X floatatom 110 166 5 0 0 0 - - -;
#X msg 110 124 \$1 1000;
#X obj 110 205 spigot;
#X obj 218 149 tgl 15 0 empty deni.dec empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 215 129 algorithm on/off (located under timbre menu);
#X floatatom 70 117 5 0 0 0 - - -;
#X obj 110 -10 r deni.4;
#X obj 252 176 r \$0-s4;
#X obj 110 100 / 4;
#X connect 0 0 15 1;
#X connect 7 0 0 0;
#X connect 8 0 24 0;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 16 0;
#X connect 12 0 10 0;
#X connect 12 0 9 0;
#X connect 15 0 1 0;
#X connect 15 1 2 0;
#X connect 15 2 3 0;
#X connect 15 3 4 0;
#X connect 15 4 5 0;
#X connect 15 5 6 0;
#X connect 16 0 18 0;
#X connect 17 0 11 0;
#X connect 18 0 15 0;
#X connect 19 0 18 1;
#X connect 22 0 12 0;
#X connect 23 0 7 0;
#X connect 24 0 17 0;
#X connect 24 0 21 0;
#X restore 31 75 pd deni.dec4;
#N canvas 0 22 687 459 deni.dec5 0;
#X obj 216 211 - 1;
#X obj 79 304 s di.rp.1;
#X obj 149 304 s di.rp.2;
#X obj 219 306 s di.rp.3;
#X obj 79 327 s di.rp.4;
#X obj 149 327 s di.rp.5;
#X obj 219 329 s di.rp.6;
#X floatatom 252 195 5 0 0 0 - - -;
#X obj 110 71 spigot;
#X obj 143 49 != 0;
#X obj 110 39 abs;
#X obj 110 144 line;
#X floatatom 110 15 5 0 0 0 - - -;
#X text 181 -15 If potential attraction value not utilised (i.e. produce
mplicative denial value that is not zero) then take absolute value
\, scale it and ramp through [dino~] abstraction.;
#X text 306 176 string number for this particular note;
#X obj 105 237 demux - - - - - -;
#X floatatom 110 166 5 0 0 0 - - -;
#X msg 110 124 \$1 1000;
#X obj 110 205 spigot;
#X obj 218 149 tgl 15 0 empty deni.dec empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 215 129 algorithm on/off (located under timbre menu);
#X floatatom 70 117 5 0 0 0 - - -;
#X obj 110 -10 r deni.5;
#X obj 252 176 r \$0-s5;
#X obj 110 100 / 4;
#X connect 0 0 15 1;
#X connect 7 0 0 0;
#X connect 8 0 24 0;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 16 0;
#X connect 12 0 10 0;
#X connect 12 0 9 0;
#X connect 15 0 1 0;
#X connect 15 1 2 0;
#X connect 15 2 3 0;
#X connect 15 3 4 0;
#X connect 15 4 5 0;
#X connect 15 5 6 0;
#X connect 16 0 18 0;
#X connect 17 0 11 0;
#X connect 18 0 15 0;
#X connect 19 0 18 1;
#X connect 22 0 12 0;
#X connect 23 0 7 0;
#X connect 24 0 17 0;
#X connect 24 0 21 0;
#X restore 117 1 pd deni.dec5;
#N canvas 0 22 687 459 deni.dec6 0;
#X obj 216 211 - 1;
#X obj 79 304 s di.rp.1;
#X obj 149 304 s di.rp.2;
#X obj 219 306 s di.rp.3;
#X obj 79 327 s di.rp.4;
#X obj 149 327 s di.rp.5;
#X obj 219 329 s di.rp.6;
#X floatatom 252 195 5 0 0 0 - - -;
#X obj 110 71 spigot;
#X obj 143 49 != 0;
#X obj 110 39 abs;
#X obj 110 144 line;
#X floatatom 110 15 5 0 0 0 - - -;
#X text 181 -15 If potential attraction value not utilised (i.e. produce
mplicative denial value that is not zero) then take absolute value
\, scale it and ramp through [dino~] abstraction.;
#X text 306 176 string number for this particular note;
#X obj 105 237 demux - - - - - -;
#X floatatom 110 166 5 0 0 0 - - -;
#X msg 110 124 \$1 1000;
#X obj 110 205 spigot;
#X obj 218 149 tgl 15 0 empty deni.dec empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 215 129 algorithm on/off (located under timbre menu);
#X floatatom 70 117 5 0 0 0 - - -;
#X obj 110 -10 r deni.6;
#X obj 252 176 r \$0-s6;
#X obj 110 100 / 4;
#X connect 0 0 15 1;
#X connect 7 0 0 0;
#X connect 8 0 24 0;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 16 0;
#X connect 12 0 10 0;
#X connect 12 0 9 0;
#X connect 15 0 1 0;
#X connect 15 1 2 0;
#X connect 15 2 3 0;
#X connect 15 3 4 0;
#X connect 15 4 5 0;
#X connect 15 5 6 0;
#X connect 16 0 18 0;
#X connect 17 0 11 0;
#X connect 18 0 15 0;
#X connect 19 0 18 1;
#X connect 22 0 12 0;
#X connect 23 0 7 0;
#X connect 24 0 17 0;
#X connect 24 0 21 0;
#X restore 117 25 pd deni.dec6;
#N canvas 0 22 687 459 deni.dec7 0;
#X obj 216 211 - 1;
#X obj 79 304 s di.rp.1;
#X obj 149 304 s di.rp.2;
#X obj 219 306 s di.rp.3;
#X obj 79 327 s di.rp.4;
#X obj 149 327 s di.rp.5;
#X obj 219 329 s di.rp.6;
#X floatatom 252 195 5 0 0 0 - - -;
#X obj 110 71 spigot;
#X obj 143 49 != 0;
#X obj 110 39 abs;
#X obj 110 144 line;
#X floatatom 110 15 5 0 0 0 - - -;
#X text 181 -15 If potential attraction value not utilised (i.e. produce
mplicative denial value that is not zero) then take absolute value
\, scale it and ramp through [dino~] abstraction.;
#X text 306 176 string number for this particular note;
#X obj 105 237 demux - - - - - -;
#X floatatom 110 166 5 0 0 0 - - -;
#X msg 110 124 \$1 1000;
#X obj 110 205 spigot;
#X obj 218 149 tgl 15 0 empty deni.dec empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 215 129 algorithm on/off (located under timbre menu);
#X floatatom 70 117 5 0 0 0 - - -;
#X obj 110 -10 r deni.7;
#X obj 252 176 r \$0-s7;
#X obj 110 100 / 4;
#X connect 0 0 15 1;
#X connect 7 0 0 0;
#X connect 8 0 24 0;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 16 0;
#X connect 12 0 10 0;
#X connect 12 0 9 0;
#X connect 15 0 1 0;
#X connect 15 1 2 0;
#X connect 15 2 3 0;
#X connect 15 3 4 0;
#X connect 15 4 5 0;
#X connect 15 5 6 0;
#X connect 16 0 18 0;
#X connect 17 0 11 0;
#X connect 18 0 15 0;
#X connect 19 0 18 1;
#X connect 22 0 12 0;
#X connect 23 0 7 0;
#X connect 24 0 17 0;
#X connect 24 0 21 0;
#X restore 117 51 pd deni.dec7;
#X restore 422 396 pd denied.decimation;
#X text 557 393 Denied potential melodic attraction results in temporal
decimation of sound on relevant string;
#X obj 423 578 mclachlan;
